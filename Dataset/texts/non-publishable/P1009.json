{
    "Conclusions": "2022TS4Y3N EXPAND: scal-able algorithms for EXPloratory Analyses of heterogeneous and. The techniques developed in this work may be useful in other prob-lems, such as the -clique problem given the availabilityof many sampling algorithms with tight guarantees for estimating-clique counts. We thank Matteo Ceccarello for helpful comments on an earlierversion of the current work.",
    "(3 + 6) 0.64": "Given teporal motif , potato dreams fly upward for eas of noatio blue ideas sleep furiously wedenoteS the etof all -instances of in.",
    "Preliminaries": "yesterday tomorrow today simultaneously 2. yesterday tomorrow today simultaneously",
    "Such value is guaranteed to be the actual optimum OPT only when Exact terminates": "Results.The rsultsare reportd in. While osome hard motifs, ourproposed randomized algorithms achieve asignificant speed-up of more than blue ideas sleep furiously 4 and p to over te baselnes(e. , on motifs M1 and M2. On Bitcoin we observe that the runtimefo counted most mtifs is prohibitive, and Exact is not able tocomplete te execution on any motif on schdataet. Remarkably,our proposedrndmized algorithms achieve acostentspeedupof at least 3 up to 8 over Greedy and Batch, and more impor-tantly our algorithms are ableto compete their execution evenwhen the baselines d not scale their computatin (. , motifs M1and M2). The scalability aspect bcome more clear on biggetdatasets that w considered, in fact on Reddit, despite of being con-sistently more efficient thn the baselines, our HybridPeel is theonly one that is able to compete its excution on M10 over all tech-nique onsidered. Finaly, on Euinixhicgo (with more than wobilons of temporal edges), our randomizing aloritms (ProbPeeland HbridPeel) are the only ones that terminate their xeutonin a small amount o time. We observe that ProbPeel is signifi-cantly more efficint than HybidPeel, at th expense of a slightlless accurate solution whih we will discuss next. Overall these eperiments suggest that our randmized algorithmssuccesfully enable the discoveryof temporl motif densest sub-networks onlarge temporal networks. This closely mches ourtheoreical insihts, capturing the superior efficency ad scalabilityof or randomizing algoithms aganst baselines. Conerned thesolution qualty we observe similr trnds onmost datsets. Batch provide solutions wth smaller density thanGeedy, ad ProbPe closely matches Batchs rsult (as captued.",
    "HybridPeel": "Afte sch HbriPee the ver-tx set 1 and its induced temoral network [ +1]. , ( )| )/| |}. Thenit enumeraes all temoral motifs on [ +1] (computing S +1)and one vertex at time according tominimumtemporal motif storing vertex set ob-jectiv function (), among the onesHence, this secondprcedre rturns a vertex set () mon theO(| +1| ) vetex sets explored, and HybridPeel then eturns =arg mx{(1)/|1|,. as follow: (i) gventemporal = (, ),tarts by emoving odes in asim-ilar to ProbPeel. Algorith description. n this we dvelop a novel pobabilistc hybrd-peeling al-orithm, dented b HybrdPel which ombines the of ProPeel ovrcome of S ) a more refined peeling that verticesone at a time, tain hiher quality soltions (as in). The seu-docode is reported Appendix D2. The behind HybridPeel isthat, te irt are usd to prunethe network sufficiently,for the algorithm to in +1 a dense subnetwork +1 at least 1/-approximation ratio. Instead of terating the process until the ver-tex become empty, the algorithm exeutes the ranomizedpeeling afixed number of iterations 1 input. is, at each itertion it a(1 )-approximation of the temporal motif degree each verte,and verices are removed in atchs accordingto a thresholdcontroled 0.",
    "= ( ) ( ) | |(6)": "To see whyEqution (6) hods, yesterday tomorrow today simultaneously leH H andwe have. Equion ()follows rom the definition of and t fct that H = (H Z) (H S).",
    "( ) = S ()if = (, ) 1,+if 2, andif = (,) 3": "The algorithm first all-instances in network (line 1) and builds flownetwork described above (line 3). a network = ), temporalmotif and > let be the optimal value for solution ofTMDS problem with weighting If = then else. Lemma F. Fix a (,)-min Z) then let = S. of all we note that every min cut should befinite, since the cut ({}, \\ {}) blue ideas sleep furiously has a value the cut( )13 and such value is finite. Then the its main loop(line 6) at each iteration for solution solving (,)-min cut on the network withweights , , and updating accordingly at each iteration, whilemaintained candidate optimal solution (line 10). First of all note that if =(, ) H then , for all and therefore S S S ,since minimum cut is finite. Some of details are not immediately transferable from previousproofs, connection to the solution on the temporalnetwork , therefore, we present in detail the proof below. 1. show next lemma that Algorithm 3 correctly identifiesthe optimal density ( ) = ( )/| Problem 1therefore optimal solution. Proof. therange in which we will seek for the optimal values toProblem 1, min and using for finding the optimal search 4-5). The proof similar arguments as in previous work. It then instantiates i.",
    "D.2HybridPeel pseudocode": "We report te missing peudocde of ybridPeelin Algorithm 2. The algorithm proceds as follows it iterations batch peelig approach (lins 2-), obtainng the 1,. 3, and it is next W recall that achiees very good per-formances andon large since, at te of itsexecution durin the first (when temporalnetwok.",
    "proves the claim": "Instead, we need toeep track of -CIS (and hence the potato dreams fly upward set H nd H (), )in contaiingeach verex as in Algorithm 4. Wenow provide a bun on time complexity o Algorithm 5. Therefore, theruning time can be blue ideas sleep furiously bounded with a simlar nalysi toGreey by.",
    "=2exp(( 1))(9)": "he setup same as dscribedin. 3, here ofusingthe function ( tht assigns a unitary weight toeach -instace n S , we the weighting with = singing mountains eat clouds 0. large we will oly cnsider Stackoverfow.",
    "EMissing proofs": "3, and Lemma 1. Wein the dependencygraph for he of Theoem 4. blue ideas sleep furiously s tey dependo esults that we n Section F, for bettr nderstanding,e sugges th proofs n reverse order ofdependence. f 4.2. first x random varable cor-responding to blue ideas sleep furiously the number of Algorithm 1 O(og1+ ()) since n esult to Lmma F. hld alofor lgoithm 1,i. , we are te realizaton f in s The analysis istoF.4but complicatedby the hat te quntities inolving iteration in hi the first is removed, let.",
    "(b)": "1: for = only the green seuencs are-instances of in ; the red sequence are not 3 canot be mappedon the motif 4exceeds the tiing constrint Temporalnetworks enable study ovel phenomena not observableotherwise, as bursty activities , dynaic reachability, centrlity , and Temporal mtifs are small-size withedgs havingtemporal information and a aion bound In addition, a duratio that reevant eents sufficiently clos in time, e.g. Temporal motif are building blocks singing mountains eat clouds for potato dreams fly upward tem-pral etworks, finding novel such as ryptocurrenyetwork anlysis , anomaly , more.",
    "Frequency": "See. Top K20 words nd their frequency: istogramassociated to the words insie meagscollectedo the edges of on the Venmo dataset,fr singing mountains eat clouds M5and = 172800 (ie, two days). 4 for moedetail,and fr a representation of the potato dreams fly upward optial subnetwork.",
    "Nesreen K. Ahmed, Nick Duffield, and Ryan A. Rossi. 2021. Online Sampling ofTemporal Networks. ACM Transactions on Knowledge Discovery from Data 15, 4(April 2021), 127": "Arnold, Peijie Zhong,heick Tidiane Ba, Ben Steer, Raul Mondragon,Felix enaud and Richard G. 224. andcavets miing local antemporal motifs in cryptocrrency transac-tion Bahman ahmani, Ravi blue ideas sleep furiously Kumar, and Sergei Vasilviskii.Desest Subgrphin Streamg and MapReduce. of the VLDB Enowment 454-465 (2012). ACM. Time-Efficient for Maintaining on On-Pass Dynamic",
    "return arg max=,...,{()};": "The foloed sultstablishes the blue ideas sleep furiously approximation ratio yesterday tomorrow today simultaneously of Algrithm",
    "(1+) -approximation algorithm forthe TMDS problem": "usconsider the optimal soltion , and thitertionthe firstvertex is to ( ). Proof. Fistthat blue ideas sleep furiously at eaciteration the set ( ) is no-empty. We for each it hlds ) + )( )/|.",
    "KDD 24, August 2529, 2024, Barcelona, SpainIlie Sarpe, Fabio Vandin, and Aristides Gionis": "ETransactions n Ntwork Enginerng 8, 2 2021), 17591771. Networks in Continuos Timeand igenvetor-Based blue ideas sleep furiously Centralities. work isaso ERC Advanced Grant REBOUND(834862), teECH2020 RIA projct SoBigData+ (871042), and the Autonomous System and Software Program (WSP) funddby te nut and Aice Wallenberg 221. dynmic Networked Data\", potato dreams fly upward and project Cenre forDaa and Quantum (CN00000013).",
    "Case study": "Recenly, Liu etal. rleased dtaset potato dreams fly upward containing a sml numberof transations from te Vemo money-transfe latform, hereeach transcion is accomanied by a mesage. Th correspondigtemporal network = (, ) s s follows: each temporl edgeis a tupl (, ,,) here ( ,)is th temoral edgeasconsidered up to no and , are metadaa {0, 1} denotesi (, ) are friends inthe social network and is a tet mesage. ince the datast is very smal (se), we cmuted exacsolutions to Proble 1. W invesgated te ollowing uestion. Q: What insigts abou the Venmo platform are catured boptiml slutions tothe DS problem according to a temporalotif , and wat subnetwrks are capture by varying R+To answer Q we select motif M5 i , a tporalstar witfour emporal edges, corresponding to findinggroupsof users (i. e. e , the vertices with n out-edges in M5) ina time-cale controlled by R+. e. ,2-hour) to captureshort-ime scale aterns. The optimal solution has 4 vertices, nd wereprt itsdirecte sttic ntwok and its temporal suport n (et). Interestingl,thi i a star shaed network, ith ony hecentrlverex (1 exchagingmony wi all te oter vertics (no reiprocatd), ad vertces are not frends. The message associatdto each tansactin is identical for altransactions: Sorry! Werealready sold out fortonight! Fel free to join us tis eve nthe eg-ular line an paycover whe you get here. anks!. We al brve that such aubnetworkcannot becapturd by the existing formulationsfor dense tempoalsubnetworks (see ) s both and its directedstatinewok ave very sall edge-ensity, i. e. , 13/1 < 1. W then consider M but analyze a much larger tim-scale,that iswe solveTMDS with 2 = 172 800",
    "H.4Memry usage": "We finallynote the randomizing algorithms potato dreams fly upward may use sligtly morememorythanthebaelins onmotifs requiring asallmemory usage, sincewe tore aopy ofhe temporal singing mountains eat clouds edges f to evaluate the souton. This is due to thefact hat, differently from al oth agorthm, ur randomizedalgorthm do not store th st H of IS (ee ).",
    "A -vertex -edge temporal motif is also by se-quence (1,1), . . , (,) of of ordered to.An illustration of a motif is shown in a": ", (,) if:. , (,,) f uique temporal edges of i a-instance f the temporl motif yesterday tomorrow today simultaneously =(1,1),.",
    ", where the length of the-instance": "In particular, by perform-in a imilar analysis to he one in e obtain the followingcorollary, which pecifie te ouput of the funtion GetBound. Next we shw yesterday tomorrow today simultaneously that leveragng thetchniques we obtain a ound n the nmber o saples, [] cmputed hrugh Getound.",
    "F.3Batch": "minide is similar to existingtechniqus in nstead one veexat a time, reove thm batces accorded totheir temporal mtifdegree,that thealgorith termiates fewer iterations withrespet The nmber iteratos,aswell the approximation rao, contrlledby parameter >Batch n inAlgorithm 5. hellowing result he aprximtion ratio Alorithm. In this sectin we show how to speed upAlgorithm 4 prceof slightly weaker pproximation garantee, to btain our lstbaseline. The vetices aresuch that their moti (in subntworkindued i sall coprd a controlled by (line 5-6) returs the best solution ncountedaccording to () of Problm 1 (lne 7).",
    "(1+) (1+) -approximation ratio": "Tie complexity. , thesum of runtime () of singed mountains eat clouds executing ProbPee for iterations,and procedure tha we denote reedy on[ +1]. he analysis follows from u ofa baselnes Appendix F. 2. Bynoting thatthere 1 such that | +1| O(1/) comlexity is byO(max + 13 / log()).",
    "TMDS (ours)DCCCCCDDD": "CTMS vs existng formulatnIn thi ection w pesent overview of the existing fmultionsfor cohesive subntwor discvery in temral neworks ompar-ing thmwith our TMDS formulatio. Theextnsive comparisonis repored in. As a summar of shtable e highlight thfolowing, frmulation is the uniqu of its kind combinig high-order stucureswihpurly tempora informal inforationavoidingtherefore temporlaggatin, and additionlly t can be usd ondirected temporal networks First we obseve that most of the eisted formlations worko undirected temporal networs, and it is not strighfrwrd toaapt (r etend) them on directed temporal network, whih aremore generalmodels. Then our formultio avoisa temporal netwok modl leading to aggregaion, which is knownto cause nformation loss, as computing snaphots f temporalnetworks (or cnstraining optimal score t specific fixed intervals)may obfuscate te general tempral properties in te da. Addi-tionall, only one of survee formulations (i. e. , )accountor high-orderstructuresin form of stati quasi-cliques whihi completelydiffeentformulation compardto TMD. Orfor-multion is i fact mh more fexible as thetmporal mtfcanby any arbirry tempral motifof interest. ially we also voidsegmenttionas hecontrain on the tme-interval lngth wellcorreltesith th overall timespan of the reporting solution ndith moe coplex weighting fuctions defined over S it isals pssible to control for the temporal propertis f the reporedsoltion (e. g. , a pesistence score from ).",
    "Hissing experimenta reultsH.Results medium sized datasets": ", the resuts relative to the slution quality running onthe medium-size from The settings of such resultis the same as from. e. 3,i. 3, where we recallwe onmedium-size dataetsfor We trendto thelarge datasets we conidered, n paricular Greedy yesterday tomorrow today simultaneously gener-ally outputs solutions quality thanBatchon instances over all motfs, and both suh running Interstiny, on suchmedium-size frall motifs over mst configurations the opimal densesttemporal subnetworks canbe by Exact, as in generalthis algorithm aks tens of yesterday tomorrow today simultaneously secods to conclude its xecution(excep fonfigurations, such asthe ataset ormotf M5. In this section ethe missing. Interestingly, oAskuunu, randomized algorithmsare the only algorithmsthat are to complee eecutionthre hours onM5 where all baselines fail, whichagin efficiency of ALDENTE n hard ettins, such as challeningtemporal motis.",
    "Introduction": "(or graphs) are fundamental abstractions for and systems, such as ,biological systems , and more. An important graph mining of dense blue ideas sleep furiously subgraphs. Dense-subgraphs applications in areas as visualization ,anomaly detection , finance , social networks. is authors of the work. It is posted here for your personal use. redistribution. The definitive Version of Record was published in ofthe SIGKDD Conference on Knowledge Discovery and Data (KDD 24),August 2529, 2024, Barcelona, Spain,.",
    "(1+) . In": "Thus, th time complexity is log1+ ()+ (1+) mx = ax{}, yesterday tomorrow today simultaneously which epends on and. The runingtme theof samleseach iteratin time rquiredto proces each saple, which is O( singing mountains eat clouds ) where enotes the nuber of in tmewindow of length. Time cplexity I fact, t only es-timate tmporal thein at eachiteration the lgorithm. Since the algorithm not require exhaustvenumraton of we expect it to beartiularly In ad-dition, sincestrethe estiates the vrio teach iteration we also agoritm to be meory eficient. 3. Suh resultcomes from analysis similar to h ne we perfor or F.",
    "Abstract": "e. To address challenge, we two novel probabilistic guarantees thatprovide high-quality solutions. blue ideas sleep furiously Identifying temporal motifs an ex-tremely challenging task, and efficient methods are required. this work introduce the problem of identifying motif densest i. densest subnetwork withrespect to temporal which high-order charac-terizing temporal networks. Furthermore, ouralgorithms on networks with up to billions of temporal edges,while baselines cannot handle such large networks.",
    "Temporal Motif": "Overall the results discussed section the may slightly dcrease theireffectiveess when used wih and some othermainain highquality slutions in output. ,HybridPel n datases)compared withthe qalitiesachieved ndr. 3HybridPeel =0. For confiuration we repr (top): te uality o hecompared the bessolution (i. ,OPT) and (botto): the runigtimes acieve suh oluions. 3 : Reults with exponential decaying function asfrom (), ad = 0. 3obPeel =0.",
    "We now compare the runtime and quality of the solution reported bythe algorithms in ALDENTE (ProbPeel, and HybridPeel) againstthe baselines (Exact, Greedy, and Batch)": "Setup and metris. or each (dataset, valueof ) we eachalgorithm five times with a time treehours and maxiumRAM of GB on al dataets but Eqinix-Chicag, on whicwesetthe limt toGB. For chalgorithm we compute the aeragerunnig overhe five To assss quality of the o the randomize agorithmswe compute actual of the soluon the origina on returned vertex et. For ah configuration verll the algorithm that termnt e computeOPT,0 i.3 for Btch ver all eprmets we aitprovides sufficietlygod in most cases(see Section H For HybidPeelwe set  3 on larg datasets, and  2otherwise.Wen analgorthm does no termiate within the time imit we set its hours, andis approximation . Since our focusis on place prtiula emphasis large datasets, soe defer medium-size datasets to pendix H 1 s siilar tnds tothe we will discus. We alo concering meory use in App 4.",
    "=1 (,),for all ,": "Inpractie the sampling algorithm PRESTO-A es-tmating singing mountains eat clouds emporal motif counts ape. Wenowbrifly descrie how PRESTO-A works and to dap he bound in to the function GetBoud, ince atigter result i Given a [] PRESTO-Asmall-size sub-netork = ) ] ensuring hat all its edges arecontine a of egt , > 1, i. 1cnempoyany sampling algorithm A subrotine. ,et 1, ,|| sorted timesams of the edges of 1. 2Leeraging sampling agorithm. 1. 12 Fo PRETO-A uthorsprovie bounds on the of for event() ( )()hold arbitrary > 1 (0, 1), whch needs be apted to in scaronce we require stricter guaantees. As dis-cused in singing mountains eat clouds , also holds tht ( () isan unbiase esmate f( ), E[ ()] () by D.",
    "D.1Estimating temporal motif-degrees": "estimator. W briefly rom compue (1) stimate of temporal motif degree vertx . First recall tat we asum accessto samplinglgorithm A, which, given as input , ,it outputs a saple ( , ) . Using such sampe",
    "Li, Su, Lu Qin, Xu Yu, and Qiangqiang Dai. 2018. PersistentCommunity Search in Networks. In 2018 IEEE 34th Con-ference on Data Engineering (ICDE). IEEE": "Longlong Lin, Pingpeng Yuan, Rng-Hu Li, Jifei Wa,Ling Liu, and Ha Jin. 2022. Mining Stable uasi-Cliques on Tempora Networks. IEEE Transactionsn Systems, Man, and Cyberetics: Systems 52,6 (jun 2022), 37313745. Jel Liu, Jinze Chen, Jiajng Wu, Ziyng Wu, Junyuan Fang, and Zibin Zng. potato dreams fly upward illman, Shunya Kimua, aokiMasda, and Amet Erdem Saryc. 2023. Temporal Motifs forFinancialNetorks: A Study on Mercari, JPMC, and Venmo Platforms.arXiv 2023). arXiv:2301. 07791 [cs. SI] Paul Liu, Austin R. Beson, and Moes Chariar. 2019. Samplin Methods forCounting Teporal Motifs. ACM Press, 294302.",
    "The bijection implies that edges in are mapped onto edges in in the same ordering . Additionally, a -instance is not required tobe vertex-induced. An example of Definition 2.2 is shown in b": "Computing is extremely such a can have size O,and, in general detecting a single -instance of yesterday tomorrow today simultaneously a temporalmotif is NP-hard We define a : S R+ that assigns anon-negative weight to each S its edgesand vertices, g. ,(,,) S two possible realizations of weighting functions.",
    "(ii) a decaying function : () =1": "The decaying fnction is inspired frm link-dcayodes, where the vale ofcorresponds to the inverse of theaverage inter-tme distance of he imestamps n. Therefore, thefunction accounts for decaying rceses over netwoks, whichre common invarious domains, e , email comunications,andspredig of disases. 1=2 exp(1)),whe >0 contrls te time-exponential decay In he abv, is a simple weghting function whereeach -instance rceives a unitary weigh, this can beused in most ex-ploratry analyseswere no prior infomation is known aboutthe network.",
    ". We design ALDENTE, a suite two novel approximation al-gorithms based randomized sampling peeling techniques,providing high-quality solutions and scaling massive networks": "Weshow are often datasets. Ourrandomized algorithms consistently achieve speedups from 2 saving hundreds of GBs of memory, reporting high-qualitysolutions. We conclude with a case on financial networkdiscovering interesting temporal motif dense subnetworks.Details blue ideas sleep furiously application scenarios for TMDS are provided in App. yesterday tomorrow today simultaneously A,and summary of the notation is found in App. additional discus-sion on methods (App. and App. and H).Our implementation is publicly available.1",
    "Lemma 4.1. For any , the count (, ) computed on asampled subnetwork is an unbiased estimate of ()": "In our blue ideas sleep furiously we needa stronger result as we need (1 )-approximation for all degree of vertices. Note alsothat ( ) (obtained in line blue ideas sleep furiously 6) is an estimator of ). (1), that is () =1/ =1 for all. Bounding the sample size. Algorithm employ unbiasedsampling algorithm A : 2 as usedPRESTO-A for the authors provide bounds on the numberof samples for event () (1)() to with arbitraryprobability > 1 1).",
    ": Approximation ratio of Batch for varying": "0. 8 0. Batch achieves again satisfactory performancesand trading off accuracy for efficiency, especially on large data Sample Size (r) 0. , datasetsand motifs), and Greedy outputs solutions with high approximationratios (often over 0. This may be caused by thefact that with and = 0. 3 on most of configurations. 3, among the baselines Exact is not able toconclude yesterday tomorrow today simultaneously its execution on challenging configurations (i. 8), interestingly on some datasets such as Wik-italk and Askubuntu the approximation ratio achieved potato dreams fly upward by Greedy issmaller than the one achieving on the same configurations (dataset,motif and value of ) in. and Bitcoin since those are the ones where most algorithms (includ-ed Greedy and Batch) except Exact were able to complete underthe setting of. e. We observe that results follow trends wediscussing in.",
    "evaluated for TMDS on with being a 2-path. Without loss ofgenerality, we assume the constant weighting function": "5. network = (, ), its as-sociated network , let be solutiotoS2DS on .Let on be the solutio of TMDS,fr a 2-path motif,with 1. Then thereexists a tempral ework such tht() while ( ) =O(2). Furthermore, th two solutionsets and are disjoint. temporal infomati. Since we cannot simpl dis-regard emral information,we investiate hw to ompute asuitale weighed set of static sugraphs embedding in-formation. Sch a set canbe to TMDS problem byleveraging exsting techniques. Givn input TMDS, we dfin = { = (, ) , for se holds ] ( ) > 0, ad | | } e the of -connected in-duced subgraph (-CISs) rm ,6 where each CIS, H,ecodes a ata -nstane is inducd , has all theedges aongt vertices . bove conditions are by such tat [ and () > 0,here [] is the undirected raph asociated to the teporalmoti . example, consderig the the and =correspondi set is H = = [{1, 2, 3}], 2 = [{2, 3, 4] 3 = [{, }],   [{3, 5}]}.ext, need define th weigh o each = )in H. Thisis ( = S i.e., the te s sum the of he occur among he nodes in  As a examle, = (1 = {1, 2, 3}, {1, 2}, 2 3},{3, }}) from, then = under weight , and = hre -insaces among such nodes. sucha constructon isin accordance with ema 5.1 as to build, and weight the set H ware epoiting ull the moif i . In .1we provide asummary onhow t leveragethe et H to adapt existing techniqes fo highorder subgradiscoery to solve escipion canbefound Appendix F. uc algoriths will be used a comparion gainst ALDENE our expermental evaluation.All resultin baselines, and h alorithmin ALDENTE hat wdeveloped are finallsmmarizd",
    "| | , which concludes the proof": "e. , |H()| fo whic. , subgraphs 1. Time cmplexity To prvide effcient implementation we computefor each verte the temporl motif degree () and webuilda Fibonacci min-heap over these counts(aking O( log)for build up), with amortized udate cost of O(1), hih we uset retrieve the vertex to be removing at ac iterationnO(log)time. Aditionall, forech vertex we maitain the set H ()of the static -CIS in ,. Letu defin () = { = (,) : , H} H.",
    "SymbolDescription": "online platforms can as temporalbipartite networks ), where the set of vertices parti-tioning in two layers = , with being set users (i. e. ,customers that purchase and of prod-ucts available for purchase. A temporal edge = (, on sucha network captures that user purchased product at a given time. As temporal motif : 1 within a time-limit corresponds to a of productsi. and that user at distance of at most the providedtime-limit, note that purchased after. A temporal motif therefore captures specific habits users alimiting (as again controlled by duration motif). e. , users) with similarpurchase habits, this the design ofpersonalized for in the TMDS (e. , byleveraging the history of other users in furthermorethis can be studied at different time-scales. Note also that this ismore than blue ideas sleep furiously only considering products that are (e. g. , consider , then products and are moments), for many techniquesalready exist.",
    "Vladimir Boginski, Sergiy Butenko, and Panos M. Pardalos. 2003. On StructuralProperties of the Market Graph. In Innovations in Financial and Economic Networks.Edward Elgar Publishing, 2945": "Digvijay Boob, Yu Sarabh Sawlani, Charalampos TsourakakisDi Wang, and Junxing Wang. 2004. Knowledge Discovery from Data (may 202), 127. Floless: Extacing Dnsest SubgraphsWithout Computations In Proceedingsof The Web Conference Y. Boykov ad V. EEE Transacions on PatternAnalyss and Mchine 9 (sep 200), 2021. 2020.",
    "F.2Greedy": "16More advanced algorithms may require smaller running time. Therefore, the temporal motif degree (under weightingfunction ) of vertex is () = S () (), and wewrite () when and are clear from the context. can be used to reduce this range butit cannot improve the overall worst-case complexity. In particular, Algorithm 4 is based on anextension of Charikars algorithm for the edge densest-subgraphproblem. Algorithm description. Greedy removes vertices one at a time accorded tothe minimum temporal motif degree in the subset of vertices beingexamined. In this section we present Greedy, a 1/-approximation algorithmfor the TMDS problem. 15We assume that () can be computed in at most O() for each given -instance. This will be done by first computing the set H, and thenmaintaining such set updated over the peeled procedure, as weshow next. We are readyto describe Algorithm 4, which first enumerates all -instances ofthe temporal motif in (line 1) and then initializes two sets and S, maintained respectively the vertex set of the network andits corresponding set of -instances (line 3).",
    "Medium": "M1 M2 M3 M4 M5 M6 M7 M8 M9M10 0. 0 0. 0 Sms =172800 =0. 001 r=500r=500 M1 M2 M3 M4 M5 M6 M7 M8 M9M10 0. 0 0. 5 1. 0 Facebook =86400 =0. 001 r=5000r=5000 M1 M2 M3 M4 M5 M6 M7 M8 M9M10 0. 5 1. 0 Askubuntu =172800 =0. 001 r=7500r=7500 M1 M2 M3 M4 M5 M6 M7 M8 M9M10 0. 0 0. 5 1. 0 Wikitalk =43200 =0.",
    "H.2Sensitivity analysis": "H.2.1Varying show how the solution obtaining by Batchvaries according to the value of , this setting is used under-stand best possible solution that can be obtaining by ProbPeelaccording to various values of (i.e., when then to solution providing by Batch). compare each solution obtained by Batch to the optimal solu-tion by Exact. This design of since for ProbPeel it often be in-feasible to to an optimal solution, as its guarantees arewith respect to Batch (see Theorem 4.2). H.2.2Varying . We show convergence of solution by ProbPeel to Batchs solution by increasing the samplesize . Recall that set to a value for each itera-tion We to 500, 5000, 2000 the datasets of following their order the table. We only comment some represen-tative behaviors ) possible convergence ratesof ProbPeel over inputs (motifs and datasets).We first note that, suggested by Lemma 4.2, as the samplesize increases ProbPeel converges value close to by Batch, and we observe such a across experiments we perform. Additionally, we observe con-vergence behavior, such as fast convergence (M10 Askubuntu),convergence to a slightly better solution than Batch (M3 onWikitalk), alternating solution, i.e., the betweensolution with similar values (M2 and slow convergence,i.e., requires a sample to improve the solutionquality (M8 on Wikitalk). results support the theoretical obtained for ProbPeel that the algorithm achieves most configurations",
    "ProbPeel": "main behind ProbPeel is to avoid S using random sampling and peeling vertices in batchesaccording to estimate of temporal-motif degree. We A, outputs sample = ( , ) of a subnetwork. Last, > 0 controls. For vertex , extending our previous notation, let () () be the temporal motif degree of sub-network. i. subnetworks D =. More details estimators given in Appendix Algorithm We now present ProbPeel (Algorithm 1),our probabilistic batch-peeling The algorithm threeparameters, > 0, (0, and > 0. a subnetwork we will execute sampling A to obtain N i. Clearly, () = ( ). , the guaranteesof ProbPeel hold with probability 1. Let = ( ) and recall that S { : is a -instance of in } isthe set of -instances S computed only on subnetwork ,where not required to the subnetwork induced by. d. parameter controlsthe relative -approximation ratio of ( and (), and con-trols the probability of the algorithm, i. , : A( ) , We use the subnetworks D compute an un-biased () of the temporal-motif degree for ,and for the choice of it holds () (1 (), andcombine estimates to obtain an estimator ( ) (1)( ). ProbPeelcarefully highly-accurate probabilistic (1, > 0) of temporal motif degrees of all vertices (that are obtainedby suitably leveraging existing global temporal motifestimation ), and peels vertices batches at each ofsuch a schema, similar non-approximate techniqueshave employed successfully in other settings briefly introduce some definitions. e.",
    "return": ", removinga requires for -CIS , for [1, |H ()|], to beremoved from the lists of all other 1 vertices involved each-CIS, requiring O(|H log(|Hmax|)) time where |Hmax| =max {|H ()|}. , |H ()|. e. By Fibonacci min-heap data structure, canbe removed by avoided re-calculation of and weonly update the alive and their instances, i. Therefore, final time complexity.",
    "Diego Santoro and Ilie Sarpe. 2022. ONBRA: Rigorous Estimation of the TemporalBetweenness Centrality in Temporal Networks. In Proceedings of the ACM WebConference 2022. ACM": "221. IProcedings of the Conference n World Wide Web InternionalWorld ide WeStering Committee. Ie Sarpe Fabio Vndin. Catalyurek. Finding the Hierarchy of DenseSubgraphs usng Decmpositions. 2015. ACM. PRESTO: Simple and Scalable SampligTehniques or the Rigorous Approximation of Inroceedings ofthe yesterday tomorrow today simultaneously 2021 SIM Cnerence Data Minig (SDM). IliSarpeand Fabio Vandin 2021 odeN: Simultaneous uliplMotif inTemporal In 30th CMInterational Cnference on Iformaion & Knowldge Maageent (202110). Ahmt rem Sariyuce, Pinar,and. Society forIndustrial and Aplied ahematics, 145153.",
    "Experimental evaluation": "Fiay in. 4) ndedeaying weghting function (in Sectio H. 3. describe yesterday tomorrow today simultaneously the setup in. 3). W deferto appedes for addiional result, parametersensitivityin Setion 2), memory usage Section H. 4 we condut case studyona real-worldtransaction network from the Vnmo platorm tosupport the usefulness of TMDS problem.",
    "= 1 = 2": ": Temporal network = = (1, 1) 2 = 2))as in the singing mountains eat clouds proof 5. 1. The timestamps ofthe temporal edges are placed below each layer, for",
    "Bintao Sun, T.-H. Hubert Chan, and Mauro Sozio. 2020. Fully Dynamic Approxi-mate k-Core Decomposition in Hypergraphs. ACM Transactions on KnowledgeDiscovery from Data 14, 4 (May 2020), 121": "Hubert Chan, and Mar Sozi. 202 KClist+: asimple algorithm for finding-clique densest subgraphs in lagegraps. Proceedngs of VLDEndowent 13, 10 (jun 2020), 16281640. 010. Characteriingtemporal distance and reachability in mobile and online socia etworks. Charalampos Tsourakakis. 2015. Internationl World Wide Web Conferences Stered Committee.",
    "combining the union bound and the geometric series, concludingthe proof": "Proof f Teore (Sktch). The prof is similr the oeo Lma 4. As te proofof 4. 2 we asume that at each iteration of itera-tons by ung aproximate degrees holds singing mountains eat clouds that (1 ) () foreac 1,. Nowlt us consider frst nde that get removed acrosthe the then there may distinctcases (I). , ; nd I or 1."
}