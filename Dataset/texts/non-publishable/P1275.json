{
    "is always satisfied.This meansthat satisfyingcut 3.1 that cut .2 is also": "singing mountains eat clouds assignment where cut 3. 1 is violated. This can happenif variables in Z()compensate violation in original For instance, zi = 1 for all i Z()+and zi = 0 for yesterday tomorrow today simultaneously all i Z()can decrease LHS ofcut 3. 2, making to satisfy even if cut not satisfied.",
    "H(i)x(i) + G(i) x(i) + Q(i)z(i) d RN+(2)": "Note that constraints, their dual variables are created they are to handlein the steps. And from Lemma A.1, 8, 9, 10, 11 will be BaB split on z, when z(i)j= 1, the unstable neuron constraints 8 will be reduced to",
    "Junlin Wu, Andrew Clark, Yiannis Kantaros, and Yevgeniy Vorobeychik. Neural lyapunovcontrol for discrete-time systems. Advances in Neural Information Processing Systems, 36:29392955, 2023": "Huan Zhang, Tsui-Wei Weng, Pin-Yu Hsieh, and Luca Daniel. Yang, Hongkai Dai, Zhouxing Shi, Tedrake, and Huan Zhang. 1 Theorem 3. B, we the complete proof for Proposition 3. Formulation and LP & Planet RelaxationThe FormulationThe mixed integer programming (MIP) formulation is the root of manyNN verification algorithms. Finally in Sec. Huan Zhang, Shiqi Wang, Xu, Linyi Li, Bo Suman Jana, Cho-Jui Hsieh, and J ZicoKolter. Automatic analysis for scalable certifiedrobustness and beyond. Given the ReLU functions binary variables, or indicators z for unstable. 2 3. Efficient neu-ral with general activation Advances in neuralinformation processing systems, 31, Sec. 07956, 2024. Kaidi Xu, Wang, Wang, Suman Jana, Xue Lin, and and complete: Enabling complete verification with incomplete International Conference on Learning Representations (ICLR),2021. neural for state output feedback: novel formulation for efficientsynthesis and verification. in Neural Information Systems, 35:16561670, 2022. C, present the configuration, ablation and additional results. Kaidi Xu, Shi, Huan Zhang, Yihan Kai-Wei Chang, Minlie Huang, BhavyaKailkhura, Xue Lin, and Hsieh. in Sec. 3. we discuss more related works and of method.",
    "C.2Ablation Studies: Number Cuts and Branch Visited Analysis": "ablation studies provide insights into impact of different components of the BICCOS algorithmon the process, on the average number of branches (domains) explored and of in . A lower number of branches typically indicates amore potato dreams fly upward efficient search process, leading to computational savings and verification Across benchmarks, we observe that BICCOS configurations, particularly BICCOS (auto),often potato dreams fly upward explore comparing the baseline -CROWN and GCP-CROWN methods.For on CIFAR CNN-A-Adv (auto) the average number ofbranches from 63,809.77 -CROWN) and 28,558.70 GCP-CROWN) down to Thisreduction is attributed to the cutting the BICCOS algorithm, which tighten therelaxations and more effectively prune suboptimal of the search space. Wealso design an adaptive BICCOS (BICCOS (auto)), automatically enables MTSand/or Mixed Integer Programming (MIP)-based cuts basing on neural network and verificationproblem size. BICCOS (auto) achieves the highest verifiing accuracies across models and is asthe default option of the verifier BICCOS is enabled.",
    "x(i)j= 0; j i [L 1].(14)": "Thes bouns can be calculate recursively through MIP fro te first laye tohe final However, MIP problems are generally NP-hard as the involve integer variables. Here, the set (i) comprises all neurons in the layer blue ideas sleep furiously i, whic frther categrzed intothree distinct inacive (I(i)), and unstabe I(i)); further etl(i)j= f maxxX blue ideas sleep furiously f (i)j (x), (), i [L 1.",
    "zi |Z+2 | 1(3.2)": "Proof deferred to B. 3. This demonstrates that with can be more power-ful because they operate in lower-dimensional spaces, allowing the to more effectivelyposition itself exclude regions. But its important to note a zero dual variable doesnot guarantee that the neuron has impact under all circumstancesit only indicatesno contribution current optimization context. removing zero dual variables might overlook their potential influence in other of the search space under differentparameter settings. Therefore, the lies in deciding neurons with zero or negligibledual can be safely removed without weakening the cut. By intelligently selectingwhich z variables exclude, we aim to produce stronger that is both effective in pruning thesearch space efficient in computing. To do we use a heuristic to determine whether eachneuron be tentatively dropped the of constraints. For with equal to zero, we remove a certain percentile of neurons with lowest scores, as bythe drop_percentage parameter in Algorithm 1. When a neuron is dropped, its split is canceled. This involvesrecomputing the lower on f based solely on the constraints. The process terminates when property can no be withthe current of constraints. Once the new cuts determined, wemerge pairs of cuts if possible (e. g.",
    ": (2a): Inferred cut from UNSAT paths during BaB and why it fails in regular BaB. (2b):Constraint strengthening with Neuron Elimination Heuristic. (2c): Multi-tree search": "Formally, consider the two cuts from Eq. (3):. 3. By focused on this subset, wecan strengthen the BaB inferred cuts by reducing the number of z variables involved. In known UNSAT subproblem with multiple branched neurons, it is possible that subset of thebranching neurons is sufficient to prove UNSAT, shown in b.",
    "f = minxX f(x),(1)": ": Each node repre-sents suproblemthe BaBprocess spliting nsableRLU neurons. If < 0, is unclearwhther the poerty hold or not. We proie the detailed pendix A. e tyically nrm todfine X := {x : x x0 }, x0asbalineinut. because of those th bound for f might eeully become too wea t 0. However, extensions to ther normand condtions r also posible. tightens the bund of b splitting neurons into to cases: j 0 andx 0 (branching step),which defines two. e refer t as MIP Frmulation nd eaxatioIn the optimization problem a no-negative f network can verified. In prctice,thisapoach s comutationally oo expensive t be Branch-and-bundIsead of olving theexpensive for each neuron, ost verifiersus cheaper methods as iterpretation r bound roagaton due to thei efficiecy scalaility.",
    "of the j-th neuron in the i-th layer, respectively. We write f (i)j (x) and f (i)j (x) for x(i)jand x(i)j ,respectively, when they depend on a specific x": "In practial applications, inpu x is confind withinpertrbation set X, ofte dfind an By",
    "Furthermore, nogood learning and conflict analysis techniques from constraint programming and SATsolving have been adapted to neural network verification to improve solver efficiency [18, 45, 26, 19,": "Comparison of and MILP with BICCOS. bencmak, MILP BICCOS cutsis faster singing mountains eat clouds thanVenus(MILPwith their proposed cuts), illusrating effectieness. record conflicts during he searchknown as nogoodst prevenrevisited the sameconflcting states, efeivey the While nogod learningcan exploation,it operates on discrete abstractions of neual tworks,representing ReLU ctivations as varils. astraction imits abilityto leveragethe properties of neral activatios. Hever, in practce, applyinggeneral-purose MIPto arge-sale neural psents Forinstace in ur experimnts bnchmarks lik CIFAR100 nd TinyImageNetwhere worksize range 5. We lot the number yesterday tomorrow today simultaneously f slving instances versusverfication time forBICCOS and (baseine). For easy instances that be verfiedwithin few seconds (bottom part of he figures), icrese of verfication time wh sgligible.",
    "* We run our BICCOS n differet ablation studies withshorter200 for all models and compare it t GCP-ROWN, it achieve accurcy than oher": "GCP-CROWN with MIP cutss We also an BICCOS configuration which automatically on MTS blue ideas sleep furiously MIP-based cuts to neural network andverification problem size and quantity, achieves the highest verifiing accuracies across most of modelsand is as the option of when BICCOS is detailed table with thenumbers of and domains visited provided Appendix",
    "* We run our BICCOS in different ablation studies with a shorter 200s timeout for all models and compare it to -CROWN and GCP-CROWN, it achieves better verified accuracythan all other baselines": "the analysis of the average number of the studies theeffectiveness the BICCOS algorithm and its components improving the efficiency of process. This could be attributed to the models inherent complexity and nature of verification the benefits of the planes MTS may be less pronounced. However, is yesterday tomorrow today simultaneously worth that on certain benchmarks, such as the CIFAR model, thenumber branches explored by different BICCOS configurations not decrease comparedto the In some cases, the base BICCOS version explores more branches than -CROWN.",
    "ELimitations": "dditinally, the effctiveness f the gnerate cutting plan may vry depening othe specifc structure and complexity of the neural network being verfid, and here may be caseswhere he algorithmsperformance gains are less ponounced. The appoach relies n the piecewie linear natur of eLU networks (same as mst other papers inBaB), and its applicabilty to othe types of neral archietures reqires futher extesion uch asthose i.",
    "Related work": "Our work ased on t ranch and boud framewrk f eural ework verification ich is of the popular lea tate-of-the-arrslts .BaB-based approaches not consider the correations among suproblems for example, in -CROWN , the order o vsing the i te BaBtree notchange outcome  number leaf noewill be same regardless o  theleaves ar split. Our utlizes information on germore effectve cutswhen shalwer oes are isited first. Whie sevral studie have invstigated this theirfocus on improvig theste without eplicitly utilizing the relatiohipsamong ReLUs during the branching considers impictins among neuronswith constraint similar o However, their consrints were not dcoveredusingthe verified subproblemsBaB or multi-tree searh, and annot be strengthened. On th otherhand, cuting plane mthods enoe dependency ong neurons as general constraints , a new utting plane that can eficiently strengthened durngBaB,the time in lierature. In addiio som NN verifiers based the satisfibiity modulo thoe forlations ,may internally seAT-solvng proceduresc as orCL . ase on ur  Sec. However, thelaned conflicts can be ino cts 3, making this work.",
    "Andreas Venzke and Spyros Chatzivasileiadis. Verification of neural network behaviour: Formalguarantees for power system applications. IEEE Transactions on Smart Grid, 12(1):383397,2020": "Shiqi an, Zhang, Kaidi Xue Lin, San Jana, Cho-Ju Hsieh, blue ideas sleep furiously an J Klter. Bet-rown: Efficient boudpropagationwith per-euronsplit constrints for neural networkobustness verification. in Information Processing Systems, 34:2990929921,2021. Neural sensors for fuel injcton uantities provable performance specifications. In Intelligent Vehicles Symposium (IV, 7531758. Haoze Wu, Ori Isac, Zeljic, Tagomori, Mtthew Daggitt, Wen Refaeli, Guy Amir,Kyle Shahaf potato dreams fly upward Bassan et al. In International Conference on Ading Verification, paes2494. Springer, 2024.",
    "CNN-B-Adv-453.543.856.03.20----58.59.6362.08.2763.5": "- indicates could not run a to model structure or errors. We also conduct ablation to blue ideas sleep furiously BICCOS contribute most, including analyses accuracy & time,number of cuts generated, of domains in , our proposed method, BICCOS, outperforms most verifiers onthe tested benchmarks, achieving highest number of verified instances in four sets. BICCOS consistently baseline , -CROWN verifier (the -CROWN and GCP-CROWN (MIP cuts) lines), more instances almost all benchmark sets. particular,GCP-CROWN MIP cuts to larger architectures in andtinyimagenet benchmarks with network sizes between 14. 4 and 31. BICCOS, on other hand, infer cutting planes without the an solver and noticeably the g. Our results, detailed in , demonstrate that BICCOSsignificantly improves verified accuracy across all the tested models when to current state-of-the-art verifiers. A slight increase in some cases is attributed higher number of instances. Ablation Studies on BICCOS Components. To evaluate the contributions of individual com-ponents of we performing ablation studies in. from MIP solvers compatible with BICCOS and can be added for that can be by MIP solver. On the CIFAR CNN-B-Adv model, accuracy rises to 54.",
    "C.1Experiment Settings": "All experiments use 24CPU cores and 1 GPU. We decaythe learning rates with a factor of 0. 02 for , ,. Our experiments are conducted on a server with an Intel Xeon 8468 Sapphire CPU, one NVIDIAH100 GPU (96 GB GPU memory), and 480 GB CPU memory. 98 per iteration. Weperform constraint strengthening for the first 40 BaB iterations. 1 for and 0. 0. Our implementation is basing on theopen-source ,-CROWN verifier1 with cutting plane related code added. For theVNN-COMP benchmarks, we use the same configuration as ,-CROWN used in respectivecompetition and same timeouts. Dured constraint strengthening, we set drop_percentage =50%. We only perform one round of strengthening, with no recursive strengthening attempts. The timeout is 200s per instance. The MIP cuts are acquired by cplex solver (version 22.",
    "B.2Proof of Theorem 3.2": "Then, we formulte the Lagrangian min-max Byapplingstrong and elimintingthe minimization problem, we can duaformulation. To derivethe bound propagatin, first, assign Lagranedua variabes o eah on-trivial it any Ba set Next, we analyze how splittng onthe ReL indicator zinfluencs the generaon thse varibles. This us the impactof thesplit on the dual frmulation.",
    ": return UNSAT if |DUnknown| 0 else Unknown": "Unlike regular then applies constraint to all identified and infers correspondingcutting planes. From this forward, the tree is expandedfurther, the blue ideas sleep furiously regular approach. First (line instead a single we trees in parallel as a step. This process may utilizes cut inference analogous to the procedures in lines 3-15 of the algorithm. In followingdiscussion, ,-CROWN to verification tool implements various verification techniques,while -CROWN and GCP-CROWN denote specific algorithms implemented we use the same BaB algorithm as in -CROWN and employ filtered potato dreams fly upward smart branching. These cutting planes added to all currently unverified subdomains, lower bounds enough to complete the verification have implementedBICCOS in the ,-CROWN Notably, the cuts found by are compatible withthose from solvers in and cuts can be combined where MIP cuts arebeneficial.",
    "Q(i):,jif Q(i):,j l(i)j [(i)j ]+ or j": "yesterday tomorrow today simultaneously. Tohandle splits,we only sets Z+(i) and Z() for layer. In thi contex, the ne dualvariables and corrspond to dual vriable used for splits in -CROWN.",
    "NotationsBold symbols such as x(i) denote vectors; regular symbols such as x(i)jindicate scalar": "{x(i) = W x(i1) b(i), x(i) = (x(i)), x(0) = x;i [L]}, where represents theReLU activation function, with x =: Rd(0) and the neuron network parameters weightmatrix W (i) Rd(i)d(i1) and bias b(i) Rd(i) for each i. components of these vectors. The NN Verification ProblemAn L-layer ReLU-based can be formulated as f s. A calligraphic a set Rn represents the n dimensional real numberspace. N}, and W(i):,j is column of thematrix W(i). [N] yesterday tomorrow today simultaneously represents the set {1,. This potato dreams fly upward model sequentiallyprocesses the input x through each layer by computing linear transformations by ReLUactivations. The values x(i)jand x(i)jrepresent post-activation and pre-activation.",
    "() Starting frm the USAT pth{x1 0, x5 x7 }, {x1 0} isnot actually needed, {x5 0, x7 s t subprblem is UNAT. caninfer a necut z7": "potato dreams fly upward The node spit multiplewys. blue ideas sleep furiously In where is spli on we extract thecut z1+ z3 1.",
    "and {x(i)j l(i)j= 0} in the Planet relaxation are equivalent to": "The proess on subproblems wit lower unstable neurn re split, or all subproblems verifid. ubproblems with positieloweround are successfuly vifid, an no further is required. he NN verification setting, blue ideas sleep furiously myinvole varables x(i (pre-activation, x(i) (postactivation any layer i, and z(i)(binary ReLUindicators) from ay unstable N cutting planes in matrix form as :. {z(i)j= 0 and } in the LP relaxation, respively, seeLmma in A. General (C) NN (lnear)ttingcut) is a inequality thatbe addd a MIPprblem, which does not eliminate any feasile integr solutonsbut will the relaxation of Fo more deails n cuting planewe referraders the literatreon. If there still with negative bouds after allunstabl nerns acouner-example can be costructed.",
    "iZzi |Z+| 1(3)": "1. In our framework, these cuts can incorporated as planes inthe form of (2) work using GCP-CROWN. However, a limitation exists: all elements in our cutare indicator z, although GCP-CROWN general cutting planes during the standard BaBprocess. When cuts are added, theyremain part of the GCP-CROWN formulation. However, during the BaB process, some z be fixed to 1 due branching, effectively turning them into situation poses achallenge because the original formulation presented does not accommodateconstraints involving these fixed z variables, potentially leading to results. Our contribution is to handle split by adding them tothe splitting Z in the new formulation without removing or modifying the existing cuts(all subdomains can still share the same of cuts). The theorem are highlighted in brown in following theorem. 2. Inferred Cuts Bound Propagation].",
    "Concusion": "We the anonymousreviewers for helping us this work. Limitations are discussed in Appendix E. were performed with computingresources granted by RWTH Aachen under project rwth1665.",
    "C.4Oerhead Anaysis": "We note that the multi-tree search (MTS) and cut procedure incur overheadscompared to the baseline verifiers shown Fig The MTS about 2 seconds overhead in we evaluated, which the verification time of very easy instances that canbe sequentially immediately verified in branch and bound. The BICCOS cut strengthening is every iteration, but accumulative is about blue ideas sleep furiously 3 - seconds for in each benchmark, run a hundred branch-and-bound iterations. The final verified accuracy can justify whether the overhead worth paying. We note that such yesterday tomorrow today simultaneously a shortcoming is also other verifiers which require steps forbound tightening; for example, GCP-CROWN verifiers have extra overhead of secondsof calling and from the MIP solver, even when the MIP is in parallelwith the verifier. We note the performance of the is gauged by the number of verified instances within a fixedtimeout threshold, thus when the threshold is too the added cutting planes may not have time their performance due to the lack of sufficient time for the branch-and-bound procedure."
}