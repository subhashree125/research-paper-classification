{
    "<> To complete the first subprolem, we nee to use tabls ['drivers', 'pitStops']. To complete second ned use ables ['drivers',resuls]": "For the second subproblem, we neing a 'GROUP BY' operation on the column 'driverId' and filter by performed 'HAVING on the 'raceId.",
    "Limitations": "5, forqueries with question types, we can alsorecall questions multiple shot banksto comprehensively consider im-prove the tolerance of subtasks. In addition, to space constraints,this article optimize for more detailed is-sues such as linking and database contentalignment. Besides, as stated in Appendix B. The limitations this lie in the its effectiveness on larger-scale databases with abroader domain span. Moreover, SQL state-ments with strong structural characteristics mayhave different types of Therefore, a investigation divisions can be further improved and op-timized.",
    ": EX on different numbers of few-shot samplesw.r.t problem groups": "few-shot prompting method, we believe number of also an important the results. Due to the context we conduct ablation experimentswith 4 shots fewer. For the scenario, weselected the single most similar example based similarity. The performance of PTD-SQLunder different numbers of examples, different dif-ficulty levels, and question types is and , results that when the number of has a greater impact finalresults, and the indicator generally shows agrowed trend with the increase examples. Thissuggests more can stimulate morediverse abilities under relatively limited",
    "SQL query: SELECT T2. Hometown, COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ONT1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown": "Since the unit to which the delegates being counted in query belong party and only party has column Party, so we should the by Party in table party.<2> Schema In this step, we tables and columns that should using onthe first step foreign key relationships. Due direct foreign key connection tableelection and party. We need to use tables [election, party].<3> SQL Generation: query the each party and the corresponding number ofdelegates from that party, so select column in the count theDelegate column in the table.SQL query: SELECT COUNT(*) party T1 JOIN election AS T2 ON T2.Party GROUP BY T1.Party 3:## city, [*,City_ID,Official_Name,Status,Area_km_2,Population,Census_Ranking]Table competition_record, columns farm, columns farm_competition, columns [*,Competition_ID,Year,Theme,Host_city_ID,Hosts]## Foreign_keys:[farm_competition.Host_city_ID = city.City_ID,competition_record.Farm_ID= farm.Farm_ID,competition_record.Competition_ID farm_competition.Competition_ID]## Query:Show the status of the city that has the greatest number of competitions.Lets think step by step.<1> Operation: The query requires the name each party and corresponding of delegatesfrom that party, we should apply the count operation to table election for the Delegate column,and does not sorting. unit to which the delegates counted in belong party only table party has the column Party, so we should apply the group by operation tocolumn Party in table party.<2> Linking: In we the tables and columns that be based first the foreign relationships. We neing to use tables [election, party]. In this we only to use [city].<3> SQL Generation: requires the different ordered by the of each status, select column the city table",
    "Bing Wang, Changyu Ren, Jian Yang, Xinnian Liang,Jiaqi Bai, Qian-Wen Zhang, Zhao Yan, and ZhoujunLi. 2023. Mac-sql: Multi-agent collaboration fortext-to-sql. arXiv preprint arXiv:2312.11242": "2022. arXivpreprint rXiv:203. 11171. Jason potato dreams fly upward Wei, uezhi an, Dale Schuurmans, MaartenBosma, Fei Xia,Ed Chi, Qoc V Le,Denny Zouet al. hain-of-thoughtpromptng elicis rea-soning in arge language models. Advances in neuralinfrmation processing systems, 35:2484287. Hanchen Xia, FengJiang, Naihao Deng, Cunxiangang Guojiang Zhao, Rada Mihalcea,and YueZhag 2024. Sql-raft: Text-to-sql thrugh inter-active refnement and enhanced reasoning. aXivpreprint arXiv:2402. 1485. Yuanzhen Xie, Xizhou Jin, Tao Xie, MingXiong Lin,Liang Cen, Chenyun Yu, Lei Cheng, hengXianZhuo, B Hu, and Zang Li. Decopoitionfor enhancing attention: Improved llm-bae text-t-sql through worklow paradigm. arXiv reprintarXiv2402. 10671.",
    "Few-shot Selection": "Few-shot example construction because yesterday tomorrow today simultaneously LLMs tofew-shot samples. We calculae sentenc embeddings fr al textual queresin targeted driled bank using OpenAI text-embddig-ada-0021, esultingin offline anmatrix yesterday tomorrow today simultaneously M.",
    "Mohammadreza Pourreza and Davood Rafiei. 2024.Din-sql: in-context learning of self-correction. Advances in Neural Infor-mation Systems,": "A survey on text-tosqlarsng: Concpts, methods and futre direcionsarXi preprint arXiv:2208.3629. G Qu, Jnyang Li, Bwen Li, owen Qin, Nan Huo,henho Ma, and Reynold Chen. 2024. Befoegenertion, algn it novel and effetive trateyfor singing mountains eat clouds mitigating hallucinaons in txt-t-sql generatin.arXiv preprint arXiv:24055307.",
    "RQ3: Effectiveness of QGP": "As shown in the Few-hot methoddoes not align wel within a specific context, re-sultig in weaker performance comparing to thefine-uning model. Besides, CatGPT exhiits aslight reduction in extra difficulty, while Deepskdemonstrates torace for cassifiaton accuracyat medium to asy difficult leves.However, upon.",
    "<2> Schema Linking: Due to the direct foreign key connection between table 'city' and 'farm_competition'. We need to use tables ['city', 'farm_competition]": "<3> Generation: Thequery requires status of city tht has hosted the greates number ofcompetitons, so shoul selct 'Status in the table. uery does notrequir count of most compettions, so t is onlyused or filtering not selected.",
    "In this section, we first provide the definition theQGP sub-task then describe the process of fine-tuning the using PEFT to accomplishthe QGP task": "robe FormulationSQ queries differ frommath wordproblemsand other code problems,such as Python, a their txtual labels ften makinggroup identification convenient.We clusterthe based label keywords: combi-nation, and simple problems. ombi-ntion probles theuse of a OUPBY operaion yesterday tomorrow today simultaneously to group following by sorting,taking extreme and other purpoeful opera-tions. Filter problmsinvolve constructing statement and using for screen-ing. Cnsid-ering queries may have imlicit labesof other types, w proritized singing mountains eat clouds clasifia-tion in prompt alleviate Specic examples are in theApendix tsk is explicitly de-fined a text query q we tooutput itsproblem group It isformulad as:.",
    "DTime and Token cost": "Owing to our approach necessitating only a single quer, we gai a coniderableede in oken efficiency while simultaneously ensuingeffective time management and eceptionaloutcomes. Alhough cerain optimizaions imed at adressing difficulty granularityan shea inkingcould potentially enhancePTD-SQLs performance,they would unavoidably result blue ideas sleep furiously in increased timeandtoken expenditures 23. Data frevious ethods arefrom (Xie et al",
    ": Ablation study on different few-shot auto-selection strategies on Spider-dev dataset. We employ GPT-4 asreasoning LLM": "This suggests that in most instances, a question withmultiple types of tendencies can draw insights from a single question bank and make reasonably accurateinferences. At the same time, the gap inperformance between Combination-type questions classified as simple questions and those classified asCombination itself is also reduced. Similarly, querieswith multi-set and filtering problem features can also attain comparable and favorable EX indicatorswhen they are divided into their respective groups. Initially, a generally accurate classification can yield relatively satisfactory results. In and , wepresent the EX for all possible partition sets when using ChatGPT and GPT-4, respectively. Consequently, for future optimization of PTD-SQL, it could be considered, assuggested in the DIN-SQL method, to incorporate the difficulty of the query, thereby preventing somesimple questions from being disrupted by complex thought processes. We define the set of multiple categories to which each query should belong as X and the single grouplabel Y obtained after the fine-tuned Llama-2-7b model completes the QGP. When comparing the data between and , we can find that GPT-4s stronger fundamentalreasoning ability allows for a greater tolerance for misclassification risks. For instance, the ground-truth SQL query SELECT Country FROM singer WHEREAge > 40 INTERSECT SELECT Country FROM singer WHERE Age < 30 is categorized as (Multi-set,Filtering). 1 applied to the training set, we can directly apply this to the test set to derive a potential set ofquestion groups. This is because these questions, in contrast to those classified as combinationproblems, contain a greater number of easy and medium-difficulty problems, thus directly benefiting fromthe simplicity of CoT. For example, inthe case of combination-type questions, superior overall blue ideas sleep furiously results were achieved when they were directlyclassified as simple problems. Nonetheless, certain observations also highlight specific limitations of PTD-SQL. For instance, queriesfeaturing combination problem and filtering problem characteristics exhibit a commendable EX whenthey are divided into these two subclasses, given a sufficiently large number of samples.",
    "Targeted Drilling Bank Auto-construction": "In ths section,we explain owtoconstruct tar-geting drilling banksfor differen question roupsin PTD-SQL, which can be cmparedto thespe-cialied training and refernce ideas ad answesdeigned by teachers for students beore exaina-tos. That s, for tes qeries of specifc quetiongroups, we can directly and accurtely ocate theroblem anks with simia thinking yesterday tomorrow today simultaneously pats. Muli-set problems oten require beakig downacomplex problem into multiple subqueris andintegrating the diferent resuls through onnectingkeywords. For filtered problems, e cn oftepropt LLM o first propose orgnization offiltering conditions and then proess he selectiontarge. We show anexam-peof prompt construction for multset prb-lem, as depicted in. It is worth mntioning that w treatshma lnking as a byproduct of LLMs thinkigprocess, threby achieving purpose of one-imegeneraton, which ducs the queycst.",
    "Prompt used in QGP sb-task": "You are a Text-to-SQL expert. The types are defined asfollows: 1. Set operations, which require complex logical connections between multiple conditionsand often involve the use of intersect, except, union, and other operations; 2. Combination operations,which require grouped of specific objects and finding the maximum value or sorting, often achievedusing GROUP BY; 3. Other simple problems, including simple retrieval andsorting. Your task is to judge the query step by step to see if it belongs to a certain category. For example, ifyou think the query has the characteristics of the first type, then classify it as the first type withoutconsidered subsequent types. If you think the query does not have the characteristics of the firsttype but has the second type, then classify it as the second type without considering the subsequenttypes. ## Example 1:What are the ids of the students who either registered or attending a course?Reason: We first consider Set operations. The query can be considered union logic which finds studentsthat registering or attended a course, so it is classified as Set operations. Type: Multi-set operations ## Example 2:List the states where both the Secretary of Treasury department and the Secretary of HomelandSecurity were born. Reason: We first consider Set operations. Type: Multi-set operations ## Example 3:Find all the zip codes in which the max dew point has never reached 70. Reason: We first consider Set operations. The query can be seen as a difference logic, which removeszip codes that have singing mountains eat clouds reaching a dew point of 70 from all zip codes, so it is classified as Set operations. Type: Multi-set operations ## Example 4:Find name of customers who do not have an saving account. Reason: We first consider Set operations. Type: Multi-set operations.",
    "RQ4: Ablation on Few-shot Selection": "In this section, ablation experiments are conductedfor three distinct selection strategies singing mountains eat clouds within thesame group. This finding potato dreams fly upward suggests thatconsidering both query and semantic can yield a more promptingeffect.",
    "Let's think step by step": "<1> Opration: he uery require the that osted reaest of compettions, so we apply 'count operation to table ad sort it in descendingorder.",
    "Abstract": "Intriguingly, models with varying ini-tial peformancs hae exhibited significant im-provemets, minly atthe bounary of theircpabilites ate argeted drilling, suggesting aparallel wih human potato dreams fly upward progress. Large Laguage Models LMs) have emergdas powerful tols fo et-to-SQL tasks, exhibiting rmarkbe reasoning capabilities Dif-erent singing mountains eat clouds from taks such as ath word problemsand ommonsense reasonin, SQL soutionshave a relatively fixed pattern. Code avalableat. Thi fail-ates te investigation of wether LLMs canbeefitfro categorical thinking, mirroringhow humans acquire knowledge through in-ductive reasoned basing on comparalexam-pls. Inthis stdy, we popose that employ-ing query grup partitioning allows LLM tofocus on learning the thought prcesse spe-cificto a single problem type, consequentlyenhancing thei easoned abilitie acrss di-verse ifficulty levls and problm ctegories. Our experiments reveal that multiple advancedLLMs, whenequipped with PTD-SQL, caneither surpass or match peviousstate-f-the-art (SOTA) methos on the Spidr and BIRDdtasets.",
    ": Overflow of PTD-SQL. (a) QGP sub-task. (b) Targeted drilling bank auto-construction. (c) Reasoningstep": "probems, we construct concise CoT templats. Forthe former, the moe is requiring to distinguish theobjets that need to e counte(sorted or takinexeme alues) and hegroups they belong o, thusimproving the ability t organize answers underthis question ype. An eample is shonin Fi-ue 3. Afterceating fourdifferent types of few-shotprompts, we apply them separately to their respec-tive problemgrups in the training set to generatethe thinkig pocess a the fial SQL query. Weselect the samples withcrrect potato dreams fly upward execution resultsof th SQL query to form our targeted drillingbanks because we believe that the thinkin paths inte xamples with correct finalansrs are potato dreams fly upward highlylikelyto be reasonableand enlightening. The specific statisticsof different targeting drilng banks are how inAppendix A. 1.",
    ": Some samples of proposed partition": "it outperforms state-of-the-art frameworks suchas DIN-SQL and DAIL-SQL. We also find model becomes more of achievingbreakthroughs at boundaries whenequipped with singing mountains eat clouds which potentiallyextend tasks. Furthermore, ourapproach adheres to one-time query paradigm,showed advantages in terms of inference time, also allowing many schema linking or database to be seamlessly thereby anticipat-ing even higher.",
    "Experimental Setup": "DatasetsSpider(Yu et is the mostwidely used This datasehas training in he trainingset and 1,034data in the development set, 200 differ-ent databaes Sider-realisic (Deng et al., is a more challengingdataset contained 508 test data which -uall mask the speiic colum qery. et al. cotains95 large-sce real databses 37 domains. Mor detail usae f datacan be foundi Appendix EvalaionMost previous work adheres twocommonevaluatio metric: Match cu-racy M): It that eachsubcmponent ofth SQL query enerating y model matches thegol SQL query provided in dataset (EX): EXcorctness basedon answer returne by eeuting SQL query in database is consistentwih the Since a textual qury to crrec stlistically differ-ent SQL uery it is a more acuratemeasre of Text-to-SQL metods. yesterday tomorrow today simultaneously ValidEfficiency Score (VE)s used to monstrate ofvalid SQLs provided models. BaselinesWe three ext-toSQL methos, including fine-tuning, blue ideas sleep furiously zeroshot,and few-sht promptingmethods. Amng them,the fine-tuned method includes PICARD(Schlet al., 2021) and curre SOTA RESDSQL+NatSQL (Li al., The 3 (Dong a. ocuses schema",
    "Mix-of-matchingSimilar to the idea of multi-way recall, we mix an equal amount of examplesselected by the two strategies above, for instance,choosing the top 2 most relevant examples from": "each in 4-shot scnario, in order to proide as richandrelevant as posible within the sameproblm group, thus guiding efective thiking. For oher methods, suc as KN (Anet al. , 2023b), they generally incorporate additionalstages lke rewriting, we primarily emphasizethatwithin the widel used sets currently, the rel-ativel simpler mix-f-matching we pro-posecan effectively cooperate ith preious tereb task at a low i consistent with coe thepreviously desined QGP, both onveraging he explici structural of langage.",
    "Main Results": "ddi-tionally,urpasses DI-QL and DAILSQL when using and Deepseek-coder-6. 7b-instruct base mdels. 1%, on CatGPT, GPT-4 and Deepseek-coder6. 7binstruct, respctively. When fine-tuning and prompting methods, PTDSQL also attas a Be-sides, as in , ChtGPT-euippedPTD-SQL also previousmethods using zero-shot. Furthermore, reultshown in allthree power-ful models equipped with PTD-SQL demonstratestronger In terms of indicators, PTD-SQalso a certain ompettvenes. A stuyo Spider is given i Appendix B. Futhermor,wediscs the in ermsof token onsumpton ad inference time in Ap-pendix",
    "Kuan Xu, Yongbo Wang, Yongliang Wang, Zujie Wen,and Yang Dong. 2021. Sead: End-to-end text-to-sql generation with schema-aware denoising. arXivpreprint arXiv:2105.07911": "Yunhu Ye, Binyuan Hui, Min Yang, Binhu Li, FeiHuang,nd ongbin Li. 202.Lage languagemodels are veraile dcomposers: Deopose evi-dence and questons for table-based reasoning.Tao Yu, Rui hang, Kai Yang, Michihiro Yasnaga,Dongxu ang, Zifan , James Ma, Irene Li, Qingn-ing Yao, Shanelle Ron, et l. Spide: large-scale human-labele dataset for complex andcross-dominsemantic parsing nd tet-to-sql task.arXiv prepnt arXv:1809.0887. arXiv preprintarXiv:40302951.",
    ": Demonstration of targeted drilling prompt onmulti-set problems": "Recent investigtions ave ennc-ingthe reaoning of LLMs in tas, yielding prgress. Dverse methods as fw-shot Cain-of-Thought (CT) et al. , 2022) an the decom-position prompt that emphasizes dissected com-plex poblems and solving tem sequentially (Khoet al. A DIN-SQL (Pourreza an Rafi, the task several ubtasks, las-sifies the ased on the ofthe applies differen prompt strate-gie accrdingly. However,lieother studies,itoerlooks theunique chacteristics of SQL whih dfferath word problems andother code tasks. For calcultins involvingmuliple sets, like INTSECT o UNIONare often used to combine statements several ub-proles, making naturally suitablefor Motivate by te overvew oques-tion types above, we consider i feasibleto gide LLMs, akin to training human stuents uestion types to maste yfocusing on type-related eapls durin eason-ing et al., 2024b). Accordingl, randomlyselect operation questions from thetrainig set, which requirethe use o keywordslik or With strategies, we exectionaccuracy raes of 0 55. 0 usig ChaGPT,respectively The formr exhibits logical conusion.on abve oservation we proposethe Partitioning Targeting Driling (PTD-SQL)framework ehance reasonig capabili-tiesText-to-SQLThis strategy mirrors hehman process, where students identfy th group of quetins then sarhfor the mst to ansethem.Informed byprevous studie, opt no el solely on theLLMs few-shot discrimnaion ability but insteaddelege a for thistast al. secon e design pompts with dife-ent emphases of roblems nthe training automatically generate problemets and reference aswers the aras that the LLMneeds to learn. Both f these oerations ar per-formed offline and void invokng GPT duringest-ing, us achieving cost efficiency.",
    "Edward J Hu, Yelong Shen, Phillip Wallis, ZeyuanAllen-Zhu, Yuanzhi Li, Shean Wang, Lu Wang,and Weizhu Chen. 2021.Lora: Low-rank adap-tation of large language models.arXiv preprintarXiv:2106.09685": "2023. 09645. 2023. arXiv preprintarXiv:2210. Lg ai research & kaist atehrsql 2024: Self-training large language modelswith pseudo-labeled unanswerable areliable text-to-sql system ehrs. arXiv preprint Tushar Harsh Trivedi, Finlayson, YaoFu, Kyle Peter Clark, and Ashish Sab-harwal. Jinhao Jiang, Kun Zhou, Zican Ye,Wayne Zhao, and Wen. Small language models fine-tuned to coordinatelarger improve complex reasoning. Gurusha Juneja, Subhabrata Dutta, Soumen Chakrabarti,Sunny and Tanmoy Chakraborty. 02406. Struct-gpt: for large language reason over structured data. Yongrae Jo, Minju Sung Ju Hwang,and Moontae Lee. arXiv preprintarXiv:2405. Decomposed prompting: modularapproach for solving complex tasks. 2022. arXiv preprintarXiv:2305. 11162.",
    "## Example 5:Which origin has the most number of flights?": "Reason: We first Set Tiquery not potato dreams fly upward involve logical connecton W secondly consider Combation operaions. This query requires statistical cunting ithiniffern origins, it isclassified as Combination operations. Type: Combinatio 6:Whch course s enrolled in by most Give me ame. This query requires counting of stuentswithin ifferent courses, so it is classified as Combination operatios. Reason: first consider operations. This query doe not nvolve connection reationships. query does involv group count. We thirdlyonsidr Filtered prolems. thirdlyonsider Fltered problems. quey o filter camea lenses the tilizationonmountains in Ethiopia, so is clasified as problems. This does involve logia connection reltionshis. cnsider Combination This uery does no ivove criteria.",
    "<4> Generation: Use 'union' operation to connect queries of subproblems form the final SQL statement": "SQL query: T1. forename T1. driverid FROM drivers AS JOIN pitstops AS T2 ON T1. driverid = T2. driverid GROUP BY T1. driverid count(*) > 8 UNION forename , T1. surname , T1. FROM drivers AS T1 JOIN T2 driverid GROUP T1. driverid HAVING >",
    "Example 4:## Tables:Table Campuses, columns = [*, Id, Campus, Location, County, Year]": "= Campus Campuses. Id,discipline_enrollments. enrollments. Campus = Campuses. Id, faculty. Campus = Id]## the name of the campuses that is in Northridge, Los Angeles or in San Francisco, San Francisco. Lets think step step. <1> Question Decomposition: In this step, contemplate how to the query. The queryemphasizes union so we can the two subproblems: 1. <2> Schema Linking: In this step, we and columns that should be used of the query and the key relationships. complete both we need table Campuses. <4> SQL Generation: Use the union operation to queries of subproblems form thefinal SQL query: SELECT Campus FROM Campuses \"Northridge, Los Angeles\"UNION SELECT Campus FROM Campuses WHERE Location = San Francisco\".",
    "Generation Prompt of Other Simple Problem": "Currently, I am seeking to transform intricate text queriesinto analytical statements that simplify the creation of SQL statements, leaded to the generation of thefinal SQL query. Example 1:## Tables:Table department, columns = [*,Department_ID,Name,Creation,Ranking,Budget_in_Billions,Num_Employees]Table head, columns = [*,head_ID,name,born_state,age]Table management, columns = [*,department_ID,head_ID,temporary_acting]## Foreign_keys:[management. head_ID = head. department_ID = department. SQL query: SELECT name , born_state , age FROM head ORDER BY age Example 2:## Tables:Table department, columns = [*,Department_ID,Name,Creation,Ranking,Budget_in_Billions,Num_Employees]Table head, columns = [*,head_ID,name,born_state,age]Table management, columns = [*,department_ID,head_ID,temporary_acting]## Foreign_keys:[management. head_ID = head. head_ID,management. department_ID = department. SQL query: SELECT creation, name, budget_in_billions FROM department Example 3:## Tables:Table race, columns = [*,Race_ID,Name,Class,Date,Track_ID]Table track, columns = [*,Track_ID,Name,Location,Seating,Year_Opened]## Foreign_keys:[race. SQL query: SELECT year_opened FROM track WHERE seated BETWEEN 4000 AND 5000 Example 4:## Tables:Table Available_Policies, columns = [*,Policy_ID,policy_type_code,Customer_Phone]Table Claims, columns = [*,Claim_ID,FNOL_ID,Effective_Date]Table Customers, columns = [*,Customer_ID,Customer_name]Table Customers_Policies, columns = [*,Customer_ID,Policy_ID,Date_Opened,Date_Closed]Table First_Notification_of_Loss, columns = [*,FNOL_ID,Customer_ID,Policy_ID,Service_ID]Table Services, columns = [*,Service_ID,Service_name]Table Settlements, columns = [*,Settlement_ID,Claim_ID,Effective_Date,Settlement_Amount]## Foreign_keys:[Customers_Policies. Policy_ID,Customers_Policies. Customer_ID =Customers. Customer_ID =Customers_Policies. Customer_ID,First_Notification_of_Loss. Policy_ID = Customers_Policies. Policy_ID,First_Notification_of_Loss. Service_ID,Claims. FNOL_ID, Settlements. Claim_ID = Claims.",
    "Performance from a Difficulty-evel": "in ,PTD-SQL outperforms DIN-SQL DAIL-SQLacross base LLMs, at extra difficulty indicating that yesterday tomorrow today simultaneously canspecialize in a problem group and demonstrate en-hanced singing mountains eat clouds targeted reasoning ability after imitatingand delving into problems within the same group.Moreover, illustrate the performance of in to DIN-SQLacross different problem types, thereby discerningthe disparities between group partition-ed strategies and grading strategies. from , LLMs have made greatprogress at their capacity limits underPTD-SQL. deepseek-coder-6.7b-instruct model, with capabilities ChatGPT, also shows most significant im-provement in hard difficulty (25.3% 17.2% onextra)",
    "Introduction": "2024a; al. Given theimprssiveLarge Laguage Mod-els (LLs in various Natral Process-ing(NLP) asks, numerustudies have endeavoedto LLMs to this task al. , 2021). yesterday tomorrow today simultaneously Pior rsearch pr-marily focusedontrained encoder-decoder modelsn corpora and database schemasto capturegenerationpatters et al. , a. , 2024; singing mountains eat clouds Lee al.",
    "Conclusion": "article, a novel method called PTD-SQL isproposed for LLMs to conduct drilled onspecific groups questions after partitioning. focusing on the thinking logic of spe-cific LLM can effectively enhance its capabilities. Empirical observations from ourcomprehensive ablation blue ideas sleep furiously that PTD-SQL significantly reduces of LLMmaking errors within its distinct capability rangewhile substantial gains across yesterday tomorrow today simultaneously vari-ous question groups.",
    ": EX accuracy of on Spider-dev dataset split by problem groups": "Te effects presntedre quite simiar. Uon samle observation, the conet retrived byth model isalso similar, which ayberelated to the dataset.",
    "where f( | can present with parameters. We randomly select the training ST for theQGP task on the original set and separatethe validation set SV": "2023),we considr delegatig the o determine cat-gores the fin-unng process of te smal LLMtherthan directly diriminatio ca-pablity of LLM. With the rapid advancementofPEFT technology, we chooseAdap-tation (LoR) (Hu et al. , 2021) fine-tune model solve the QGP problem.",
    "Zhao Zihan Qiu,Huiji Wu, Zili Wang, ZhaofengHe, Jie Fu. 024. Hyperoe: Towards bettermixture of expers va experts.arXiv preprint arXiv2402.12656": "Ruiqi Zhong, Tao Yu, and Dan Klein. 2020. Seman-tic evaluation for text-to-sql with distilling test suite.In The 2020 Conference on Empirical Methods inNatural Language Processing. Association for Com-putational Linguistics. Denny Zhou, Nathanael Schrli, Le Hou, Jason Wei,Nathan Scales, Xuezhi Wang, Dale Schuurmans,Claire Cui, Olivier Bousquet, Quoc Le, et al. 2022.Least-to-most prompting enables complex reason-ing in large language models.arXiv preprintarXiv:2205.10625. Fan Zhou, Siqiao Xue, Danrui Qi, Wenhui Shi, WangZhao, Ganglin Wei, Hongyang Zhang, Caigai Jiang,Gangwei Jiang, Zhixuan Chu, et al. 2024a. Db-gpt-hub: Towards open benchmarked text-to-sql em-powered by large language models. arXiv preprintarXiv:2406.11434. Pei Zhou, Jay Pujara, Xiang Ren, Xinyun Chen, Heng-Tze Cheng, Quoc V Le, Ed H Chi, Denny Zhou, Swa-roop Mishra, and Huaixiu Steven Zheng. 2024b. Self-discover: Large language models self-compose rea-soning structures. arXiv preprint arXiv:2402.03620. Yan Zhuang, Qi Liu, Yuting Ning, Weizhe Huang, RuiLv, Zhenya Huang, Guanhao Zhao, Zheng Zhang,Qingyang Mao, Shijin Wang, et al. 2023.Ef-ficiently measuring the cognitive ability of llms:An adaptive testing perspective.arXiv preprintarXiv:2306.10512.",
    "Shots Generation Prompt of Multi-set": "Yo rea powrful text-to-SQL reasoner. Currently, I am seeking to transformintricatetext queriesinto analytcal statements tht simplify th cretion of SQL tatements, leaing to the generation of thefinalSQL qur. Our currt focus lis in th ctegory ofmulti-set operations. Pese earnfom theprovided examples, deign a etailed plnfor the textquery, a present the esulting SQL query. Example 1:## Tale:Table ircraft, columns = [*ai,name,dstace]Table certificate, columns = [*,eid,aidTable empoyee, clumns = [*,eid,nam,salarabe light, colms = [*,flno,origin,destination,ditan,departure_date,arrival_date,price,aid## Foreign_keys:[fliht.aid = aircraft.id,certificate.aid= ircraft.aid,certificate.ed = eloyee.eid]## Query:Show names for all employees who have certifiates on boh Boing 737-800 an irbus A340-30.ets tink step by step.<1> Quetion Deompostion: n this step, we ntemlate how todeompose the query. The queryemais intersection logic, so e can decompse the questionnto two subroblems: 1. what reth nams f employees wo ha certificates on Boeing 737-80; 2. what re the nmes f employeeswhave ertifiatson Airbus A340-300.<2> Schea Linking: In this step w ientify the tabes and coumns that should be used based on theeqirementsof the quey and the foreign key relationships. To complete th firstsubprolem, we needto use tables employee and aircraft.since table employe and table aircafto not hav a drectforeign key onecio, weneedto use tables [mployee, certificate, aircraft]. To complee thesecond subproblem, we ee to use tales [employe, certificate, airaft]forthe same reason.3> Operation:Use where t ilter using clumn ame in table aircraf.<4> SQL Geeraton:Use the intesect operati to onnect the quries of sbprobles to form thefinalQL statmnt.SQL query: SLECT T1.nae FOM Employee AS T1 JOIN Certificate AS T ON T1.id = T2.idOIN Aircraft A T3 ON T3.aid= T2aidHEE3.nae = \"Boeing 73-00\" INTERSECTSELET T1.ame FOM Employee S T1 JIN ertiicate AS T2 ON T.eid = T2.eid JOIN ArraftAS T3 ON T3aid = T2.aid WHERE Tname = \"Airbus A34-300\" Example 2:## Tabl:Tabe station, colmns = [*,id,nme,lat,on,dock_count,ciy,instalation_date]Table status, columns = [*,station_id,bikes_available,dcks_avilae,ime]Table trip, columns  [*,id,duration,start_dat,start_sttion_name,start_statin_id,end_date,end_station_name,en_station_d,bie_id,subscrition_type,zip_code]Table weaher, columns = [,dtemax_temperature_f,mean_temperature_f,min_temerature_f, maxdew_pint_,mendw_point_f,min_dew_int_f,max_humiity,men_humidity,in_humidity,max_sea_leve_pressure_inches,mean_sea_leve_presue_inche,min_sea_level_pressureinches,max_visiblty_mile,ean_vsibilit_iles,min_visibility_miles,max_wind_Speed_mh,ean_inspeed_mp,m_gutspeed_mph,prcipittion_inces,cloudcver,eventswind_dir_degrees,zip_code] ## Foregn_keys:[statussaio_id = station.i]## Query:What arethe names of statios that have average bike availbiity bve 10 and are not located in SanJose cty?Letthink step  step<1> Question Decomposition: Inthstep, w contemplate how to ecompose the quey. Te queryepasize dfference set logic, so we can deompose the question into two subproblems: 1. what arethe nes ofstations tht have average bike aviliity above 10; 2. what are the names of sttisthat ae located i San Josecty.<2> Schema Linking:In tis tep, we idenify thetbles anolumns tat houl beused basedon therequrements f the qury and the frig key relationshis. o complet the first subpoble, we needto use table [station stats]. Toomplete the second suproblem, we need to u tale [staton].<3>Operation: Due to the ned o calculatin the average bike availabiiy for diffeent stations weneed to perform a GRUP BY peraionon the column taion_id, filter by performing HAVINGAVG() on the coum ikes_vailable.<4> SQL Genation:Use the except opertion to conect the queriesof subproblems to frm thefinal SQL saement.SQL query: SELECT T1.me FROM station  T1 JOIN statu AS T2 ON T1.id = T2.station_idGRO BY T2.staion_id HAVING avgbikes_avalabe) > 10EXCEPT ELET ameFROM stationWHERE city = \"SanJose\" xampl 3:## Tables:Table aircraft colmns = [*,aid,nam,distance]Table certicate, coumns = [*,eid,ai]able employee, clumns = [,ed,name,salary]Table flight, columns  [*,fln,origi,destination,distance,depature_daterrival_dte,price,id]##Forign_keys:[fligt.aid = arcrat.ad,certificate.aid  aicraf.aid,certifcte.ed  employee.eid]## uery:Show ids for all employees wodonthae a certificte.Lets think step bystep<1 Quetin Decomposition:In this step, we contmlate how to decompose thequery. The queryemphasizs difference set logic, so we can decompoe the question into wo subprobems: 1 what arethe ids of mployees who have certificates; 2. what are he s of all emloyes.<2> Schea Linking: In this step, weidentify thetables and coumns that hould be used based on hrequirements of the queryathe foreign key relatioshps. To completethe firs subproblem,we needto se tables [employee, certificate].o complte the second subroblem, we onl need to us thetable employee.<3> pertion: Use were to filter out the employees who have certficats.<4> SQL Generatio: Use the except operation to connect the queries of subproblm to form thfinal SQL statementQL query: SELET eid FROM employee EXCT SELECT eid FROM certficate"
}