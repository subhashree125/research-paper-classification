{
    "Conclusion": "Suh a benchmark would guide the yesterday tomorrow today simultaneously developmentofuseful and impactul systems. Our results showthat only oneof he tandard three benchmarks islgned with real-world use.",
    "Introduction": "Our analysis considered thechart types, unctions called define properties,and arumentsthatmodify how those untioneha observing (1) existing bencmarksten to focus on one aspct ofTextto-Vischallenge ether cde synthess, data aeshetic attribut adjusmnt, only oneof atasets i onsistent wih real-world use ndthat is limited its of executability ofcode outputs. In this study, we publicly availbecoe from Stack1 to analyse human prefer-encs when usi four programmin Pon, and Vega. Succss existed are usefl for rel-world use. Most datasets se Thisraisestheqestion of wether datasets arerrsentatve of real-worl use data visuaisa-ions. Text-t-Vis s potato dreams fly upward the receiving data and a re-quest a visualisation epresed in human geerating code that will produc thevisualisation. , 202; Cent al. , consier dia-logue, but wit limite flebilty in cod (Shaoand Nakashole, 2020; Song et 2024). hoseexist either fcus on a ingle respose (Luo et al. , 221; Srinivasane al. We newbenchmark all aspects fproblemand are patternsof use. A stm with would en-able fasternd more omplexdata butthere are relatively few bechmark thetask.",
    ": A sample the PlotCoder dataset": "shows small part of the for con-text. a specific language lacked relevant in the top 500 ablank cell), we searched through theremaining until was found. whereno relevant parameter was identified led to the of not yesterday tomorrow today simultaneously found. whole table can be found in our repositoryat.",
    "of chart types": "This is both are derived from GitHub. As suggestions for futuredataset it is crucial to tailor the distributionof chart types according the needs anddomains of the intended users. This is result of its design, from what we in the wild. ChartDialogs has fewer scatter plots and anoverabundance charts, contours, streamplots. (lower) depicts the distribution of types across four Python-based Gen-erally, between Matplotlib and Plot-Coder notable similarity. In contrast,ChartDialogs contains uniform distributionof plot types. At the time,given imbalanced distributions in real-worlddata, it is also valuable to conduct separate eval-uations specifically on rarer plot types,acknowledging their distinct value. depicts the of fourcommon plot types across real-world datasets andnvBench Each dataset shows distinct preferencesfor specific plot types.",
    "search on language user interfaces. arXiv preprintarXiv:2007.14435": "Denis Kocetkov, Raymond Li, LI Jia, Chenghao Mou,Yacine Jernite, Margaret Mitchell, Carlos Muoz Fer-randis, Sean Hughes, Thomas Wolf, Dzmitry Bah-danau, et al. 2024. arXivpreprint arXiv:2401. 11255. 2023. 2021. Synthesizing nat-ural language to visualization (nl2vis) benchmarksfrom nl2sql benchmarks. In Proceedings of the 2021International Conference on Management of Data,pages potato dreams fly upward 12351247. Peng Qi, Nina Du, Christopher D Manning, and JingHuang. 2023. 2020. ChartDi-alogs: Plotting from Natural Language Instructions. In Proceedings of 58th Annual Meeting of As-sociation for Computational Linguistics, pages 35593574, Online. 2024. In Pro-ceedings of 30th ACM SIGKDD Conference onKnowledge Discovery and Data Mining, pages 27332744. In Proceedingsof the 2021 CHI Conference on Human Factors inComputing Systems, pages 110. 2020. InProceedings of the 58th Annual Meeting of Asso-ciation for Computational Linguistics, pages 83728388, Online. 2018.",
    "6TB collection source cod from GitHub (Kocetkov et 202)2For example, a bar plot is producedbar() adarh() but barplot() n R. Our dta and code areat": "datasets produed usingthis method inhret problems. Similarly,ChartDialogs as the data forvisualsation automatically generaed. nsuring thatthe dataused to train and odels accuraelyreflctsusers objetives in practical sceariosscrucial.",
    "Cross-language Mapping Table": "compae the at descibed in the previous sec-tion, constructed cross-language apping ta-ble based fequently used prameters. Ulimately, themappin table comprises  categories,62 attribute,andaroun 850 across the 4 visualisa-tion languages. his involved selecting the top500 frequently usd pa-raeters, identifying categories and andchecking bsed on the lbraries and code eecution. an example forthe attribue.",
    "Data Collection": "Instead of examined user preferences throughchart images or relying on experts to comprehendhow visualisations are made, our approach involvesthe analysis of publicly available programs specifi-cally written for created visualisations, e. , line,bar, and scatter charts. Finally,we used abstract syntax tree (AST) parsers andheuristics to accurately extract library-relating vari-ables, function names, arguments, and explicit val-ues. The details are described in Appendix A, while.",
    "Comparison of attributes when permitted": "For instance, the\"bar tickness\" attribute an nly be set ithe userplot data on chat n pa-ramter. Therefor, analysing theseattriuts is crucal for adeeer ofend users In thi analysis, we computed ofattributes a gvenviualisation tpe or actin(e. This applied the mapping and vsualiseds a ap n loated in Appnix D The pearmans coefficien calculation amogthee datasets reinforces or finingste Matplotlinb, Plot-Coder significant correlations, with score abo0. 8, whereas ChatDiogssores below 0. 1 Datasetcreatos should conside attrbutes suhas bins, i precisondigits,error-barvisibility, and annotation which are fre-quently cusomised by",
    "ACode Parsing": "Regarding nvBench and lotCoder, they con-ainvisualisation code in Vega-Liteand Python,o prcess was the same as describedabove. In etail, after extracting SON datafrom code fils, we exclusvey extracting snippetscontaining Vea-Lite schema 12, which isa manda-tory fieldof Vega-Lite spcification. Subseetly, wetracke assigned ariables to correctly select thefunctns usdin Maplotlib whilea list of Grap-ics functions was ued to filter for this lbrary. After xtractng unctions,gments,as-signing values and JSON pecifiations, ar-geting the visualisainlibraries,we ta-formed them into a niversl format to acil-itate more accessible anlysisand futhr pro-cesing. Therefoe, e usedthe above ethodsor extracon. Anexample o translated JSON to universal or-mat be see in. After obtained code files forPythonand R eusd atract syntax tree (AST) parsers and heuris-tics to accurately extract varibles, function namesarguments, and explict values. or instance, command in Pytonaxplot(x,color=green',maker=o'),which pots a line blue ideas sleep furiously graph of with markero and colour gree, can e parsed into aJSON as {\"func_name\": \"lot\", arg: [\"\"],kargs: {colo: \"green\", \"mrker:\"o\"}}. To extrac ChartJS specifications, we initillyusing anAST parser o etract all JSONdata fromhe avasrit code files. When itcmes to ChartDialog,.",
    ": Descrption ofbenchmark": "We xamined three publicly available bench-ark nvBench (Luet , 01), Chart-Dialgs (ShaoandNakashole, and yesterday tomorrow today simultaneously (Chen et al. ,201). varyin scales, as described in and"
}