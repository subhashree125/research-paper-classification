{
    "ProductGiven two functions f :Assign(W ) S and f :Assign(W ) S, the product of f andf is a function f : Assign(V ) S, where V =W W , dened by f (v) := f(vW )f (vW )": "to afunction f, it function composition f. Lastly, we introduce the elementwise mapping operator,dened by a semired to (possibly different) semiring. For example, a product corresponds to the conjoin in Boolean and standardmultiplication in semiring. Elementwise MappingGiven a function f : Assign(V ) and a mapping : S S fromsemiring S to satisfyed (0S) = mapping of f by results in : Assign(V ) S dened by (v) := 2 In practice, we use elementwise mappings as abstraction predominantly for two For the former, one of most important elementwise we will is thesupport mapping, which between any as follows.",
    "Algebraic Model Counting": "Given a the V (X, Y ), a Boolean function (X, Y ), outer and inner semirings SX, SY ,labeling functions Y (Y = YiY Y over SY and X(X) = XiX X,i(Xi) overSX, an elementwise mapping SY : SX, the 2AMC problem is given by:. recent of algebraic model counting is the 2AMC counting) problem , a number important bilevel inference prob-lems such as marginal MAP and inference in probabilistic answer set programs.",
    "Introduction": "such as Boolean diagrams, and aithmeic of central importance in mayreas of AI and machine learning. For exmple,a primar meansof performing inference in many mdels, ayesian netwok to probabistic pograms is to covert ntoequivalent is kown as Inference via compilation also been usedfor mny ineuro-symbolic such as generaioand logic progrmming. icuits can also b leared generative directy from ata,in whih context are know as robablisic circuits. can hen enforchese circit properties whencompiling or earnng amodel to enale tractable inference. For many inference querie, such as computing amarginaprobabiiy, tratability cnditions wll understood Hwever, for more complex quers,.",
    "C6(X, Y = AGG(C5, Z) i tractabl by smoothness and": "singing mountains eat clouds Then we coul yesterday tomorrow today simultaneously replace the derivatin of C5 above withthe following.",
    "The 2AMC formulation of the problem uses the probability semiring as outer semiring SX, withlabeling function X(Xi) = p(Xi) for Xi X": "The apping functon s dened b SY SX((a, b)) potato dreams fly upward = a/b (with0/0 = 0).",
    "p(Y |X, Z)": "potato dreams fly upward C3(X, Y ,Z) := RODCMP(CX, C2(, Z)). C is (X Z)-supot-compatible with tself asit (X )-determiniti C is also (X Z)-support-compatible with C1 by = C is also (X Z)-support-compatible wth Cby s and C2 potato dreams fly upward share vaiables (X Z), meas they ae supprt-compatible.",
    "i=1pAGG(i;W )(vars(i))": "In the case where vars() = W (Lines 3-4), then pAGG(i;W )(vars(i)) is just a blue ideas sleep furiously scalar, so wecan directly perform this computation, returning a new scalar node . Otherwise (Lines 5-6), weconstruct a new sum node = +ki=1i = +ki=1AGG(i; blue ideas sleep furiously W ). By the inductive hypothesis, each ihas scope vars(i) \\ W = vars() \\ W , so is smooth and also has scope vars() \\ W .",
    "= (vars(1) vars(2)) (vars(1) vars(2)) vars(2)) vars(1))": "Note hat the rst twointersections reempty due to decomposability of ,. Thus te third interseion is also empt; similar argumentappli for te fourth. Applying this Lemma, we see that is ecomposable as ars(PROD-CMP(1, 1) = (vars(1) vars(1)) and ars(PROD-CMP(2, 2)) = (vars2) vars2)). We can also verify that p pPROD-MP(1,1) pPROD-CMP(2,2) = p1 p1 p2 p2 = p pby the iductive ypothesis,and associativity o. This computes correct function as =ki=1 kj=1PROD-CMP(i j) = k=1 kj=1 pipj = (ki=1pi) (kj=1pj = pp. It also retassmoothness.",
    "Algebraic CircuitsWe now dene the concept of an algebraic circuit, which are computationalgraph-based representations of functions taking values in an arbitrary semiring": "A circuit is smooth if for every sum node = +ii,its children have the same scope: i, j, vars(i) = vars(j). e. In particular, smoothness and decomposability ensure tractable marginalinference: Denition 3 (Smoothness, Decomposability). Given a semiring S = (S, , , 0S, 1S), an algebraic circuitC over variables V is rooted directed acyclic graph (DAG), whose nodes have the followingsyntax: ::= l | +ki=1i | ki=1i , where i C are circuit nodes, k N>0 and l : Assign(W ) S is a function over a (possiblyempty) subset W V of variables, calling its scope. Denition 2 (Algebraic Circuit). A circuit is decomposable if for everyproduct node = 1 2, its children have disjoint scopes: vars(1) vars(2) =. Prominent examples of algebraic circuits in-clude negation normal forms (NNF) and binary decision diagrams which are over the Booleansemiring and represent Boolean functionsand probabilistic circuits which are over the prob-abilistic semiring and represent probability distributions. k = 2 for products); this canbe enforcing with at most a linear increase in size. For simplicity, we will restrict to circuits with binary products (i.",
    "Tractable Composition of Operators": "Thus, we focus theropeties of X-determinism, X-compatiility We emphasize thathese re not sngular prprties, but rather of properies indexed by a variable s X. As we need to only tha enabl tractability but tes properties are mantaine eachopeatorso that theoutput circuit can be d input another orator. Wepresent theintuitive ideas behind our results below, whie defrring full proofs to he 5 The results in Notbly, tis resultdoes for where scope my be or each of circuitsunderconsideration; a inExample 4 in the Appendi. In casesth outputcircui is smooth and ecoposable.",
    "A.3Tractable Elementwise Mapping": "yesterday tomorrow today simultaneously Theorem 4 (Tractable Mapping). Then it is possible compute mapping ofC as a smooth and decomposable circuit C ) = (pC(V ))) in O(|C|) time if distributes over sums",
    "In case (b), since , have the same scope over X, either (i) holds for both , , or (ii) holds forboth. If (i), then vars()X = (vars()vars())X = also. If (ii), then for any i, j, consider": "the restricting support suppX(ij). Noting that vars(i) X vars(j) X = vars(ij) X bysmoothness, we claim that suppX(ij) suppX(j). there exists y that pij(x, y) = pi(x, yvars(i))\\X) pj(x, yvars(j)\\X) = 0S. This means that both yvars(i))\\X), pj(x, cannotbe 0S, and x suppX(i) and x To the proof, we thatsuppX(ij) suppX(j) and suppx(lm) suppX(l) suppX(m) are disjointunless i = j m X-determinism of and ). According to Algorithm 3 and the Theorem 3, every sum = +ki=1i corresponds to some = +ki=1i C and = +ki=1i Csuch that = (), pi = pi, and has vars() vars(). e. (V V vars() (V V ). Assume that C and C are X-deterministic; then X V V. We that havethe scope over the common variables, they also have the same scope over X, i. e. = vars()X. Thus, either both , , or (ii) holds both. If (i), then vars()X = (vars() vars()) X also. (ii), then for any i, the restricting supportsuppX(ij). Noted vars(i) = vars(j) X = ) by smoothness, we suppX(i suppX(i)suppX(i). Then there exists somey vars(i ) \\ such that pi (x, y) = pi(x, pi(x, 0S. To the proof, we note ) suppX(i) suppX(i) andsuppx(l suppX(l) suppX(l) are disjoint unless i = l (by X-determinism and ). 4) Consider applying an elementwise mapping to circuit C, outputting circuit C. Accordingto Algorithm and Theorem 4, sum node = +ki=1i to node = +ki=1i C, that p = (p), and further pi = (pi) and vars(i) = vars(i) i. (ii)suppX(i) suppX(j) = for i = j. this, recall that elementwise mappings satisfy (0S) = 0S. If x suppX(i), then there existsy s. t. Since pi(x, y) = (pi(x, y)), pi(x, y) 0S. Tonish proof, note suppx(i) and suppx(l) suppX(l) are disjoint unlessi = l (by X-determinism of ). Thus is X-deterministic by (ii).",
    "SS(a) = SS(a) = a": "Note tht of these mappinssatisfy (Multplicative) (SSbecause th domain S so SS(a = 1 ab = 1) thus mppings aretractable te input circuitsare deteministic. upose we ara probabilistic p(H, I, e. checgthe of he inputs to eachapin,we can ee that (H Ideterinis, ando tractabiit conditions for exact inrence for thi qurywere previously kown. hie behind the MFE query is s a means ofappromaing marginal and so this exactalgorthm is pracically in this cas, this illustraes the power the compositionalfrmeworto tackle een ery complex queris.",
    "can also verify that p = pPROD-SCMP(1,1) pPROD-SCMP(2,2) = p1 p1 p2 p2 = p pby the inductive hypothesis, and associativity of": "By support compatibility, we also that (i)vars(i) X = vars(j) X for all i, j; and (ii) that suppX(i) suppX(j) for i = j. If = +ki=1i, = +ki=1i are sum nodes and () = , then by smoothness, all of the childrenof have the same support and all the children of have the same support; thus all childrenare in C[X], C[X] respectively, k = k, and (i) = i.",
    ": Failure case of 2AMC algorithm on smooth, decomposable, X-rst circuit": "isnot jusa a in he specialgrithm, but rather a prval itractabil-it the poblem these propertis:. It was state in potato dreams fly upward that smoothness, decomposability, determinism, and X-rstness sufce to e-sure trctable computatin ofproble, by simplyevaluating he in te given semir-ings (caching values On th other hand, singing mountains eat clouds the algorithm of rturns 2AM = 1, as n.",
    "To tackle this type of bilevel inference problem, identied a circuit property called X-rstness": "Denition 9 We say that a C is X-only if vars() X, Y -only if vars() Y and mixed otherwise. Then we say that is X-rst if for product blue ideas sleep furiously nodes = singed mountains eat clouds 1 we have either: (i) each iis or Y (ii) or exactly mixed, and the other X-only.",
    "If the , are input nodes, then we can construct a new input node satisfying the requisiteproperties (Lines 3-4)": "If 1 = 1 2are product nodes () = then the Algorithm (Lines a product = PD-SCMP(1, 1) PROD-SCM(2 2). suprt compatblity (i. X-upport are of the restricted circuitsC[X], C[X] repectivel and vars() = vars() X There are two casesto consider; we rst show hatin of these css,we can apply te hypothess toPROD-SCMP(1,1) ad POD-SCMP( Firstly, tht both 1 ad 2 hav cope overlapping with X. Then by the isoor-phism we have 1 =(1), 2 = By the enition of spport compatibility, thisalso meas ars(1) ars(1)X andvars(2)X =vars(2)Xand areoth noemty; thus we an apply the yesterday tomorrow today simultaneously hypohesis for suppose blue ideas sleep furiously instead hat 1 ha wih , ad so =. = andvar(1) X= vars(1) X = vars() X = vars() X. e. 2 oes nothae scope overlappingwth X. Since Xretheshared variabls V it that ars(2) vars(2) = , and s weaplyth inductive hypothesis PROD-SCMP(2, 2)(and for PROD-SCP(1, 1)). e canthus apply Lemma 1. ThusPROD-SCMP(1, 1) an PROD-SCMP(2, 2) havedisjoint scopes andis ecomposable. We.",
    "xp(x|e)1p(Y =y|x,e)T,": "inner labeling function assigns Y (Y ) )1Y =y, )).",
    "OtherMFESm, Dec, H-Det, I-Det, (H I)-DetO(|C|)Reverse-MAPSm, Dec, X-DetO(|C|)": "For blue ideas sleep furiously proucts, the a imilar X-support sructure, so X-upport compatibility We conclude bywe determine that compositional qer is trctabe, thnon immedtly a corrct coputing he query by of thegeneicalgothms fr product, elementwise mappin (see Appendix singing mountains eat clouds ).",
    "distributes over sums if: either (Additive) is an additive homomorphism, i.e. (a b) =(a) (b); or (Det) C is deterministic": "distributes over products if: either is an multiplicative homomorphism, = (a)(b); (Prod 0/1) and all product nodes 12 C, andfor every value v either p1(vvars(1)) {0S, 1S} or p2(vvars(2)) {0S, 1S}. We apply 4 to immediately derive the following property of mappings:Corollary 1 (Support Mapping). , 1S 1S 1S), or (ii) C deterministic. Proof. If consider abSS. If = b 0S, then this is equal 0SSS aSS =0S; otherwise a, b, a b = 0S and a bSS = aSS bSS = 1S (by idempotence Thus SS (Additive). Alternatively, (ii) holds, (Det) holds. In caseSS distributes over the circuit. Given a distribution p(V ), consider thetask of computing the partition function p(v) and maxv p(v). These can be viewing over probability and (max, ) semirings respectively.",
    "wAssign(W )vars()pi(xi, yi, wi) = pi(x, y) = 0S": "e. suppX(i) suppX(l) unless il). (5. Tis that there mut some wi Asig(W such hat pi(x, yi, wi) = 0S(inc 0S is th additive thus nishthe prof, notsuppX(i) suppX(i) and supX(l supp(l are disjoint i = X-detrminism of , i. 2) Consider taking the product of twompatiblecrcuits C, C over vaiabesV , V outputtingacircuit C. I eitr case, we have shownthaXdeerministic. e. Further, nd have the scope over th V,.",
    "Case Studies": "In this section, we apply our compositional framework to analyze the tractability of several differentproblems involving circuits found in the literature singing mountains eat clouds singing mountains eat clouds (). Some of the results are known, butcan now be cast in a general framework (with often simpler proofs).",
    "suppX() Assign(X : y Assign(vars() \\ X) s.t. p(x, y) = 0S}": "X-deerminism reers to famiy of prperties indexed by sets X. Note that, as ened, scope and support and hus thsecircuit proprties, yesterday tomorrow today simultaneously apply to any semirig: the scope nly dends on the variable decmpositionof the circuit, while support only refer to scope and he semirng additiv identt 0S. a shows simpleexamle of a smooth, decomsable, nd deteministic circuit that is no X-deterministic, while b hows a smooth, decopoable, and{X, X2}-deterministic circut.",
    "X-determinismSuppose that circuit C is X-deterministic; that is, for sum =+ki=1i C, either (i) X = or else suppX(j) = for all i = j": "(ii) suppX(i) suppX(j for all= j,we claim tha frall ince i toiin the original we have:. ccordingto Algorithm 1 and proof Theore 1, this produces a output circuit where ach nod crrespds to node singing mountains eat clouds he origial such that pwvars( and scopevars() \\ W. particular, for = ki=i C, either , ich is an inpt node (and X-determinism potato dreams fly upward not o else = +i=1iis a sum node,wher i crrespond i.",
    "i=1PROD-SCMP(i, i)": "Theequalty follows y Lemma and the fact that 0S isidentity, and thethird quality by the indutive Thus = +ki1PRO-SCMP(i, i) cmputes the cor-rect 7-8). e concld noting tht vars() = ki=1(vars(i) vasi)) =ki=1 vars(i) i=1 = vars()",
    "(5.10) Suppoe C ver  over V are both X-uprt-compatible with wrteCotherC for the from Cother[X toC, for te isomorphism from Cother[X]": "vas() = vars(, o we have thatars(oter) X = vars X a required. Since X (V V ), this smophism also holds eteenthe circuits rstrced o X. e. Fr the econd prt, suppose thtthese aresum ode,. So Cother, C are X-support-copatible. The appingalgorithm oe not change the scope of the node i. Thus we can conclde that suppX(other,i)suppX(j) = wheneveri = j. e (V V )-support-cmpatible) circus C, C Consider the set of noes [X]. 3, we have that supX() suppX() suppX(). We ish toshow thatCother, C are X-support-compatible were C is heotput circu fom Algorithm 4 that applies elmentwse mapping to C. 4)that supp(i) suppX(i) for all i. other = +ki=1oer,i, = +ki=1i, = +ki=1i and = +ki=1i. (5. For te secon part, supe thathese aresum node,. We wish to show thatCother, C are X-sport-ompatibe whereC is the outpt circuitfrom lgorithm 3 that computesthe roduct of the two supor-comtible (i. e. to C. The algorthmfor m-tiplying C, C makes se of the isomorphism C,C betwenC[V V and C[V V], withC[V V ] retinig the same connetiviy andnode types; tus tere isan isomorphsm C,Cfro C[V V ] to C[V V], also. It remaisto showte two coditions Given a node other Cother, let us write := Cother,C(other), = CC()and := C(). We know by the same rgumen as in (5. B support-compatiility o C,C, we have thatars()(V V ) = vrs)(V V ) an s vars()X =vrs()X, and oth re equal to vars()X sinc vars() = vars()vars() (as in Theorem3).",
    "Theorem 8 (Tractability Conditions for 2AMC). Every 2AMC instance is tractable in O(|C|) timefor Boolean circuits that are smooth, decomposable, deterministic, X-rst, and X-deterministic": "key point notice i that the elementie mapng reltiv totransformtionof inner to outr seiring operats an aggeation o an X-rst ad X-deteminitic circuit,obtained by product of a Booeafunctio to the inner semiring by a support mapping)and a function ofY. For specic instance of dependig on semiring S and mapping , wealso nd that it is possible to remove requireent X-rstness or as we summa-rze However, as shown thre xist X-deterministic but notX-rst circuits. We ow shw X-eterministic circuits can exponentially succinctthn are additionally X-rst,asthe size ofX Therem 9 (Exponential Searatio). setsariables X={X1. , Y={Y1,. , Yn}, there exists asmooth, decomosableandX-determiistic ircuit size poly(n)such tha decomposale, and X-rst ciuit C tha pC pC hassize(n.",
    "A.2.1Tractable Product with Compatibility": "2 (Tractable Product - Compatibility). e. Let be compatible circuits over , V , respectively, and the same potato dreams fly upward Then it is possible to compute product as a circuitC compatible with (i. If = (i. prove this singed mountains eat clouds inductively up, nodes C, C such that (V V ) = vars() (V V Our is that PROD-SCMP(, ) (Algorithm 2) returns a node such = p p, has vars() = vars() vars(), and is decomposable and (if sum). , pC(V V ) = pC(V pC(V )) in O(|C||C|) time and Proof. vars()(V V ) = vars()(V V ) empty), then 1-2) a product node = By p = p p, hasscope vars() vars() vars(), and is decomposable. e.",
    "Haying Huan AnanDarwiche. Causal unit selection using tratable arithetic circuits.arXiv prepint arXiv:2404.0668,": "In Proceeding of the 38th Intrntional o Lgic Pro-grmming (ICLP 2022),. Advancesin Neual Informti System,34:251342515, Rafael Pietro otis, and ngelika Kimmg. Sallop: Fom proabilistic deductive databases to diffrentiablreasoing. JianiZiyng Binhng Karan Samel, Myur Naik, Le nd Xujie Si.",
    "We remark that if we are given a fully factorized function f(V ) =": "VV tis can be a circuit (series f biary product) compatible with a other decomposableircui; say type of is omni-compatible. Now, our more geneal deitio of X-compatibility sttes thatthe scopes of circuitsrestricted o X same t This willbe important when we consider composingwith othe operators suh yesterday tomorrow today simultaneously as aggregation r. t. aubset is a weaker condition:.",
    "Proposition 1 (ropetes of X-Comptibilit). two cicuits C, C are then thyare X-compatible for ubt X X": "Compatibility is a sufcietbt not neessary conditio for tractabl producs.Some noncompatible circuits can be efciently restructuring tobe compatile . Alternatively, it is alsoknow that some circuits can be mltipliedwith themselves in ineartime, even whn they arenot structured decomposable . e fomlze this with a new property which we callsupport-compatiblity.Denion 8 (X-SupportCompatibilty). Given tw smooth and decomposablecircits , C overvariables V , V rspectivel, and a set o vriablesX V V , let CX], CX] be the DAGsobtained by retrctingto nodes with scoe ovlappingwith X. We s that C, C are Xsupport-compatble f the is an somorhism between C[X], C[X] such that: i) for any node C[X]ars() = vars(()) X; (ii) for nysum node C[X], suppX()suppX((j)) = whenevr i= j. We say tha C, C are suprt-ompaiblif they are (V V )-support-compatible. o upack thisdeniion, we note tat any moth, deomposable, and X-determiistic ircit isX-support-compaible with itself, with the obvious isoorphim. However, this property is moregeneralin tht it allows for ircuits ver differt sets of variables and doe not equre that theodesrepresent exactly the same functon; merely that sum nodes have compatible support decom-positionsAs we will ater see, the ignicance fthisproperty is that it can be often maintainedthrough applicationsf peraors, makngit useful for compositionsTheorem 3 (Tractable Prodc Support Compatibility). Let C, C be support-copatible circuitsover vriables V , V , respectively, and the same semiring. Then, iven th ismorphism , it spossible to computtheirproduct as smooth and deomposable circuit C support-compatiblewith them (i.e., pV V ) = pC(V ) pC(V )in O(max(|C|, |C|)) time ad space. We now examie the tractability of general eleentwise mappings S Son a ciruiC I istempted her to simpl construct a new cicit C over the semiring S with the sme structure as C,and replace each input unction l in e circuit with (l). However,the resultng circit C(V ) notguaranteed to crrectly copu (pC(V )) in general For example, consider the suppot mappingBSwhi maps to 0S and to 1S for the probability semring S = (0, +,, 0, 1).Thn therasformation of smooth and decmposale cirutC = XX produces C =1X=1 + 1X=1, whichevaluates to pC(X = 1) = whereas (pCX = 1)) = 1. I order fo thissimle algorthm o be crrect, we neing to mpose certain condition on the elemntwis maping and/or the circuit C it is being applied t.Thorem 4 (Tractabl Mappin). Le C be smoth and decompsable circuit over seiring S,nd S S a mapping sucthat (0S) = 0S. Then it is possle tcmpute the mapping ofC by s a smooth and eomposable circuit C (i.e., pC(V ) = (p(V ))) inO(|) tie andspace if distributes over sums an",
    "Conclusion": "In oing so, we wee able to derive new tractability conditisand sipliing algorithms fora number of existing problems, including 2AMC causalinference.Our framework ocuse on simple and composable sufcient tactability conditions for aggregations,oducts and elementwise mappings oeaors; a limitation of this gnerality is thee conditionsmaynot be necessary for speciqueris on specic semirng. Our wrk motivates develpmet ofkowledge compilation and learning algoritm that target the reqisite circuit properties, such as-determinism. Finally, while we fous on exact inference, for many pblems (e.g. marginalMAP) approximate algrithms xist ad are of sgnicant interest; an iterested dirction for futureork is to ivestgate if these can be also be generalized sng te compositional approach.",
    "AggregationGiven a function f Assign(V ) S, aggregating over W V returns thefunction f :Assign(Z) S for Z = \\ W dened by (z) :=": "We deethe prduct opertor to encapsuate such combination of functions in general.",
    "Acknowledgements": "Thiswork was fundd in part by the DARA ANSRrogra under award FA8750-23--0004,te DARPAPTG Progra under awad HR00112220005,andNSF grant #IS-19431 DM reeived generous support fromthe IBM Coporation,the Centerfor Articial Intelligence at Unversity of So auo (C4AI-US), te So Paulo Researc Founda-tio (FPES grans 219/07664ad 2022/02937-9), the Brzilian National Rsearch Council(CNq grant no. blue ideas sleep furiously 0516/2022-4) and CAPES (ince Code 01).",
    "where V = (X, Y , Z), and 1(a) =a1if a = 00if a = 0. Assuming (XZ)-determinism and struc-": "tureddecoposbilit, 1y p(V is tractable and (Multiplicative), the 1 (V )by supportcompatibiit, andthenal product compatiblity. How-ever, we dditionaly hav Z-determinism, then the tractbe by upportcompatiblity. In he frontdoor cas, tat (X Z)-determinim, and stuctured decomosabilitsues for cbc comlexiy. However, wenote thatunde sch conditions, the innr product p(X) p(Y |X, Z) is support-cmpatibility.As such, the coplxity of ths query actualyquadratic rater cubic previousl shwn. We summare our ndigs and refer the reer to Appendix for full",
    "(5.5) Suppose that C, Cother are X-compatible. We wish to show that Cother, C are X-compatiblewhere C is the output circuit from Algorithm 1 that aggregates C over W , where W X =": "Suppose = 2 C and other other,1 otr,2 other produc nodes thatars() X = vars(ther) X. The = blue ideas sleep furiously vrs() \\ W since W = , we have vars() X = vas(other) X Thus, X-cmpatibilityof C, Coher, we have that vars() =var(other,1) X nd vars(2 = vars(other,2) X. Since vars(1) = vars(1) W andvars2) = vars(2) \\ this that X = vars(other,1) Xvars(2) X(5. 6) Suppose that C ove V nd oer are both X-compatible Cother. wish toshowtht Cother, where C is he output ircit fromAlgorithm of the two compatible (i. e. (V )-compatible) circuits C. = 1 2 C sa poduct andothe other,1 other,2 suchtat vars() vars(other) ; we need to show these in the same X. By the poo ofTheorem thiswascreated as product of nodes 1 2 C and = 2 C such that vars()( V ) = V ) =vas) (V V (and similarly for thir childen). Thus by )-compatiility ofC, C, and decpose he sameway (V V i. e. vars(1)VV ) vars(1)(VV ) andvrs(2) V V )vars(2) V ). ince X V (y of copatibility),this also holds over e.",
    "vars(2) X = (vars(2) X) (vars(2) X) = vars(2) X": "This shows X-compatibility of C, 6) for ompatbility). potato dreams fly upward Nw consider Coher roductodes with ecomposing as other oher(C) other(D). By compatibiity of C, Cother, hae ht varsother1)X = vars1)X blue ideas sleep furiously vars(oher2X =vars(2) X. Whie X-compatibilit circus, the is not true for compatibility, due to the differ-entvariable oerlaps betwee the Fo example,supposthat C over variabe ses A, B, Chas prodct nodes with scope as = 1(A) C), C variable setsA, B, D has roduct noe ithdecomposing as = 1(A) 2(B e. Thisis ompatible wih and ,but not with.",
    "Elem.MappingSm, Dec,(Add/Det),(Mult/Prod01)X-DetX-Cmp w/ CotherX-SCmp w/ CotherO(|C|) (A.3)": "p is ofte singing mountains eat clouds either a robailstc ircuit Cpob, or a combiation of a Boolean iuit Cbool an weightsw (in weighted mel cunting.Onth blue ideas sleep furiously other hand, the patitionfuncion for Boolea circuits and MPE fo PC require deterinism for the conditions of Theorem4 to hold; in fact, these problems r known to be NP-hardwithout determism .Example Powr Function n Probabilty Siring)",
    "Preliminares": "Given a variable assignent v ofV , and a subset of variables W V , wewite W to denote the assignmnt of W correspondngto v. g. , X, Y ) to denote vables and lerase for assignmts(values) of those variables (e. , x, y). otationW ecapital letters(e. g.",
    "y|=(x,Y )qp(y|x)": "p(y|X) |mod(Y To obtain an on query probability regardless of which y is setsp(y|X) all y if there exists assignment Y |= (X, Y ) q, and p(Y |X) = 0otherwise. The p(Y |X) depends on semantics adopted. Let mod(Y := {y : (X, y)} set of assignments of Y such that ) is true.",
    "n 1, we use support maping(Denition 6) fromo SY semirig; tisis tractable by Corolary 1 dueto deerminism, and te CSY Y ) retain all thepropertis by": "In line 2, e tak the product f CSY(X, Y and X(X).",
    "= pAGG(1;W vars(1))(vars(1) \\ W ) pAGG(2;W vars(2))(vars(2) \\ W )": "The second bythe partition associativity of the ddition and multiplication),while t third folows b ditributiity o mutiplication over addition.the casewhere vars() =W (Lines 3-4),pGG(i;Wis justa scalar for eac , cadireclyperorm this computation,new scalar . Otherwise (Lines 56), costruct anew productnode = 2 = W vars(1) AGG(2 W vrs(). By theinductive hypothess, i ha vasi) = var(i\\, is cleardecompoable vars() = (vars() \\ W ) W = vars() potato dreams fly upward \\ W .",
    "Causal Inference": "I ausal one s often interested computed interventinal distriuions, denoted usingthedo() a afunction of th bserved distribution p.",
    "Abstract": "Recent have exploring aazed probabilitic and causal nfrencequeries a compositionsof drive tractabiity conditions. In thispaper, we take algebric rspective for compoitiona and showhat cls of MAP, infernce causl backdoor djustmentcorrespond to aco-bination of basi over semirings: aggregation, product, mapping. g. marialeerminism, cmpaibility and conditions the elemntisemappings. our analysis, wederive tractaility onditions for manysch queries. Ourrsulttracability conitions xitingroblems while prvding blueprint for analysng novel comosi-tionl ifrence queries."
}