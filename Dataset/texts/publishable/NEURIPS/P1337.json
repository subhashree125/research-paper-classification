{
  "Abstract": "Computational modeling of aerodynamics is a key problem in aerospace engineer-ing, often involving flows interacting with solid objects such as airfoils. Deepsurrogate models have emerged as purely data-driven approaches that learn directmappings from simulation conditions to solutions based on either simulation orexperimental data. Here, we consider modeling of incompressible flows over solidobjects, wherein geometric structures are a key factor in determining aerodynamics.To effectively incorporate geometries, we propose a message passing scheme thatefficiently and expressively integrates the airfoil shape with the mesh representation.Under this framework, we first obtain a representation of the geometry in the formof a latent graph on the airfoil surface. We subsequently propagate this representa-tion to all collocation points through message passing on a directed, bipartite graph.We demonstrate that this framework supports efficient training by downsamplingthe solution mesh while avoiding distribution shifts at test time when evaluatedon the full mesh. To enable our model to be able to distinguish between distinctspatial regimes of dynamics relative to the airfoil, we represent mesh points inboth a leading edge and trailing edge coordinate system. We further enhance theexpressiveness of our coordinate system representations by embedding our hybridPolar-Cartesian coordinates using sinusoidal and spherical harmonics bases. Weadditionally find that a change of basis to canonicalize input representations withrespect to inlet velocity substantially improves generalization. Altogether, thesedesign choices lead to a purely data-driven machine learning framework known asGEOMPNN, which won the Best Student Submission award at the NeurIPS 2024ML4CFD Competition, placing fourth overall. Our code is publicly available aspart of the AIRS library (",
  "Introduction": "The numerical solution of PDEs has many applications across a wide variety of disciplines. Due tothe high cost of numerical simulation, machine learned surrogate models of dynamics have recentlygained traction [Lu et al., 2021, Li et al., 2021, Tran et al., 2023, Helwig et al., 2023, Zhang et al.,2024]. Inverse design, wherein a physical system is optimized according to a design objective, hasgreat potential for acceleration by neural surrogates due to the requirement of a many solver calls toevaluate candidate designs [Zhang et al., 2023]. A prominent example is airfoil design optimization,where each proposed airfoil geometry is evaluated under a variety of operating conditions accordingto metrics such as drag and lift [Bonnet et al., 2022, Yagoubi et al., 2024]. In this work, we aim toaccelerate airfoil design by developing neural surrogates trained to generalize over flow conditionsand airfoil geometries. Due to the high influence of the airfoil shape on the resulting dynamics, it isnot only key to learn an expressive representation of the airfoil shape, but to efficiently incorporate",
  "this representation into the predicted fields. Furthermore, to handle a large number of simulationmesh points, the design of architectures that are amenable to efficient training strategies is vital": "To tackle these challenges, we propose a geometry-aware message passing neural network thatfirst extracts a geometric representation of the airfoil shape, and then predicts the surrounding fieldconditioned on this representation. For efficient training, the architecture is specifically designedto handle subsampled meshes during training without degradation in the solution accuracy on thefull mesh at test time. We additionally propose a variety of physically-motivated enhancementsto our coordinate system representation, including multiple coordinate systems centered at variouskey points of the airfoil, the use of both polar and Cartesian systems, and embeddings in sinusoidaland spherical harmonics bases. We furthermore find that a change of basis to canonicalize inputrepresentations with respect to inlet velocity substantially improves generalization. We validate ourresulting framework, known as GEOMPNN, on the AirfRANS [Bonnet et al., 2022] dataset in theNeurIPS 2024 ML4CFD Competition [Yagoubi et al., 2024]. Our designs are proven to be effectivethrough extensive experiments.",
  "Airfoil Design with the Reynolds-Averaged Navier Stokes Equations": "The AirfRANS dataset [Bonnet et al., 2022] models the two-dimensional incompressible steady-stateReynolds-Averaged NavierStokes (RANS) equations over airfoils of various shapes and undervarying conditions with the purpose of accelerating airfoil design optimization. Given the geometryand dynamics parameters for a particular instantiation of the system, the task is to predict variousphysical quantities on all mesh points, enabling computation of forces acting on the airfoil. Theseforces are described by the drag CD and lift CL coefficients, and are important in determining theeffectiveness of a particular airfoil design. In the NeurIPS 2024 ML4CFD Competition [Yagoubi et al., 2024], 103 solutions are provided astraining examples, along with an in-distribution test set of 200 solutions and an out-of-distribution(OOD) test set of 496 solutions. In .1, we describe the inputs provided for each example,and in .2, we discuss the fields to be predicted, as well as the means by which modelperformance is evaluated.",
  "System Descriptors": "For each set of simulation conditions, the mesh coordinates are provided as Cartesian coordinatesX R2 centered at the leading edge of the airfoil1, with the airfoil geometry described by the pointson the surface of the airfoil Xsurf X. Throughout the following sections, we refer to Xsurf as thesurface mesh, and X as either the mesh or the volume mesh. For x Xsurf, the function n : X R2returns the surface normal for each point on the airfoil surface, and returns the null vector n(x) = 0for x X \\ Xsurf not on the surface of the airfoil. In addition to the airfoil geometry, simulationconditions are defined by the inlet velocity vector v R2. The distance function d : X R mapsx to its orthogonal distance to the airfoil surface Xsurf. We augment the base features to includedistance to the leading edge of the airfoil x. The overall base input features for each mesh pointare given byzbase(x) := [x, n(x), v, d(x), x] R8.(1)",
  "Modeling Task and Evaluation": "Given inputs zbase(x) for the mesh X, solving the steady-state RANS equations entails predicting thesteady-state fluid velocity in the x direction ux and y direction uy, the steady-state reduced pressurep, and the steady-state turbulent viscosity t[Bonnet et al., 2022]. The value of these functions mustbe predicted for each x X. Given these quantities, the lift CL and drag CD coefficients can becomputed. We report errors for normalized fields, where the normalization is such that the field hasmean 0 and standard deviation 1 across the training set. 1In the original version of the AirfRANS dataset, the mesh coordinate system places the origin approximatelyat the leading edge of the airfoil, which we define as the left-most point in Xsurf. We re-orient the coordinatesystem to place the origin exactly at the leading edge.",
  ": Full mesh (left) and subsampled mesh (right). To reduce training costs, we randomlysample 32K mesh points for each training example at each epoch. Evaluation is conducted at the fullresolution": "The NeurIPS 2024 ML4CFD Competition follows the LIPS framework [Leyli Abadi et al., 2022] toevaluate model performance. Models are assessed along three dimensions, resulting in an overallGLOBAL SCORE out of 100. On the in-distribution test set, an in-distribution ML-related performancescore (ML SCORE) is determined in terms of the degree of error across all 200 examples on these fourvariables, as well as pressure p on the surface Xsurf, and computation time. To assign an in-distributionphysics compliance score (PHYSICS SCORE), CL and CD are computed using the predictions andcompared to the ground truth. An out-of-distribution generalization score (OOD SCORE) is assignedby computing both the ML-related performance score and the physics compliance score on the 496out-of-distribution examples. The GLOBAL SCORE is calculated by taking a weighted average acrossML SCORE, PHYSICS SCORE, and OOD SCORE.",
  "Training Procedures": "All models are implemented in PyTorch [Paszke et al., 2019] and PyTorch Geometric [Fey andLenssen, 2019] and are optimized using the Adam optimizer [Kingma and Ba, 2015] using the1cycle learning rate scheduler [Smith and Topin, 2019] with a maximum learning rate of 1 103for 600 epochs with a batch size of 1. As the number of mesh points |X| is greater than 179K onaverage, it is inefficient to supervise the solution on the entirety of the mesh points on each trainingupdate [Bonnet et al., 2022]. Instead, we randomly sample 32K points from each mesh every epochand only supervise the solution on these points, as shown in . During inference, predictionsare made on the full mesh. For all experiments, we train 1 model per field ux, uy, p, and t, resultingin 4 total models per experiment. We repeat each experiment 8 times.",
  "As baselines, we train an MLP and GNN, both per field. The MLP is applied point-wise over themesh as{MLP(zin(x))}xX ,": "where we set zin(x) = zbase(x). We denote the input graph for the GNN by G(Z(X), A(X), E(X)),whereZ(X) := {zin(x)}xX(2)are the input node features, A(X) is the edge set, and E(X) are the input edge features. The edge setA(X) is constructed via a radius graph with radius r = 0.05 such that the neighborhood of x X isgiven byN (x) := {y : y X, x y r}.(3)If the number of neighbors |N (x)| exceeds a threshold M, M neighbors are sampled randomlyfrom N(x). Here, we set M = 4. The base edge features for x X and y N (x) are given by",
  "Methods and Results": "The top performing method from the previous iteration of the competition achieved a GLOBALSCORE of 47.042 using Gaussian processes [Casenave et al., 2024]. As can be seen from ,both the MLP and GNN underperform Casenave et al. . We further analyze the performance ofbaselines in .1 and use these insights to devise an approach for more effectively encodingthe geometry of the airfoil in .2. We explore augmenting the coordinate system of themesh in .3 and enhance the expressiveness of this representation with coordinate systemembeddings in .4. To canonicalize input representations with respect to the direction ofthe inlet velocity, we introduce a change of basis in .5.1. To handle extreme values in thepressure field, we apply a log transform to targets as described in .5.2.",
  "Airfoil Geometry Encoding": "As the MLP is applied point-wise and does not model any spatial interactions, it does not effectivelyencode the shape of the airfoil, despite the importance of shape in determining the resulting solutionfields. As can be seen in , the GNN improves both the PHYSICS SCORE and OOD SCORErelative the MLP, which could be due to the ability of message passing to encode the shape ofthe airfoil via message passing between the surface mesh points Xsurf. However, the GNN doesnot substantially improve the ML SCORE relative to the MLP, for which we offer two potentialexplanations. First, there does not exist a dedicated mechanism for encoding the geometry, as parameters in messagepassing layers are simultaneously used to update representations for mesh points not on the surface,that is, x X \\ Xsurf. This sharing likely limits the expressiveness of the airfoil representation.Second, due to the locality of message passing [Gilmer et al., 2017, Battaglia et al., 2018], anyrepresentation of the airfoil shape which the model manages to learn cannot be propagated beyondthe few-hop neighbors of the surface mesh points. Although the solution values on mesh pointsoutside of this radius are affected by the airfoil geometry, the ability of the GNN to propagate thisinformation across the mesh is limited, and therefore, these relationships are not effectively modeled.",
  "y-velocity": ": Difference in errors between subsampled and full resolution for MLP and GNN. We analyzethe effect of increasing evaluation resolution by assessing the relative difference in the test error onthe full resolution compared to the error on the subsampled resolution, defined in Equation (5). Ascan be seen, increasing resolution substantially increases the error on each field for the GNN. Notethat error on the turbulent viscosity field is omitted due to overfitting for both the MLP and GNN.",
  "K.(5)": "While the MLP is applied point-wise and therefore experiences no distribution shift, we can seea substantial degradation in the performance of the GNN on the subsampled mesh versus on thefull-resolution mesh, possibly due to a shift in the neighborhood structure. Bonnet et al. suggest repeatedly sampling the mesh and applying the GNN in a loop until all mesh points havebeen sampled during evaluation. However, our initial attempts showed that a high number of forwardpasses of the model were needed to cover all mesh points, and sampling without replacement betweeniterations led to an even more severe distribution shift in the neighborhood structure. This furthermotivates us to look beyond generic message passing algorithms for this problem.",
  "Geometry Encoding with SURF2VOL MESSAGE PASSING": "Our analysis in .1 suggests that to improve model performance, we need to retain the abilityof the GNN to encode the airfoil geometry, and furthermore integrate dedicated mechanisms for repre-senting this shape and subsequently distributing this representation across the mesh. Simultaneously,we would like to engrain the ability of the MLP to avoid error degradation when transferring from thesubsampled training meshes to the full-resolution evaluation meshes to avoid test-time distributionshifts. With these design goals in mind, we propose SURF2VOL MESSAGE PASSING. Under this scheme,we obtain a latent graph representation of the airfoil geometry. We then associate every point x Xwith a neighborhood Ns2v(x) Xsurf of the latent graph using directed SURF2VOL edges fromy Ns2v(x) to x, thereby forming a directed bi-partite graph. The global propagation of the latentairfoil representation is then facilitated by the SURF2VOL edges. The latent graph representation of the airfoil geometry is obtained via L = 4 layers of learned messagepassing over the mesh points y Xsurf following a standard message passing scheme [Gilmer et al.,2017, Battaglia et al., 2018]. The input graph G(Z(Xsurf), A(Xsurf), E(Xsurf)) is formed analogouslyto Equations (2) to (4) using radius r = 0.05 and threshold M = 8, and the final output of thisgeometric encoding is a latent representation zsurf(y) for all y Xsurf as",
  "Increased Evaluation Resolution and Spatial Interactions": "As discussed in .1.2, the GNN demonstrates substantial degradation when the number ofmesh points is increased. To avoid a distribution shift with the SURF2VOL model, during training, wedo not subsample the nodes of the input surface graph G(Z(Xsurf), A(Xsurf), E(Xsurf)) for obtainingthe geometric representation in Equation (6). As there are less than 1,011 nodes on the airfoil surfaceon average, the cost of maintaining the full surface graph is minimal. While we still subsamplethe volume mesh X, there are no interactions between pairs of volume nodes. This avoids anyshifts in the neighborhood structure for the volume node x, as because we do not downsample the",
  ".012y-velocity": ": Results for the SURF2VOL model compared to the SURF2VOL+GNN on the subsampledtest set. Although the SURF2VOL+GNN adds additional operations in the form of message passingbetween volume nodes following each SURF2VOL MESSAGE PASSING layer, it does not offer asubstantial improvement in performance on any of the fields. surface graph, the SURF2VOL neighborhood Ns2v(x) is unchanged between training and evaluation.In , we empirically verify that the error on the full and subsampled test set is roughly equalfor the SURF2VOL model. One of the main ways the SURF2VOL model avoids distribution shift with increased resolution is byonly modeling the interaction between pairs of surface nodes and the directed interaction from surfacenodes to volume nodes. However, this does not account for interactions between pairs of volumenodes. To assess the importance of volume node interactions, we add a volume message passinglayer between each SURF2VOL MESSAGE PASSING layer to form the SURF2VOL+GNN model. Toremove the effect of any potential distribution shift, we compare the SURF2VOL+GNN model to theSURF2VOL model on the test set randomly subsampled to the same resolution as the training set. Ascan be seen from the results in , despite the additional operations, this modification does notoffer a substantial benefit for any of the fields. This suggests that the most important interactions inthis problem are surface-surface and surface-volume. To understand the limited benefit of volume-volume interactions, note that in the present problem,the target solution is steady-state. This is in contrast to time-evolving dynamical systems, wherespatial processing mechanisms such as convolutions play a key role in modeling physical phenomenasuch as advection and diffusion [Gupta and Brandstetter, 2023, Zhang et al., 2024]. Alternatively,steady-state problems featuring an input field such as the coefficient function in Darcy Flow [Liet al., 2021] may similarly benefit from spatial processing mechanisms such as message passing [Liet al., 2020] or attention [Cao, 2021, Li et al., 2023, Hao et al., 2023]. However, as can be seenfrom Equation (1), the input fields featured in the present problem are primarily positional in nature,e.g., coordinates and distances, whereas the inlet velocity v is a global feature shared by all meshpoints. We therefore suggest that spatial processing mechanisms enabling communication betweenadjacent volume mesh points may be of limited benefit in such problems. : Spatial regimes of dynamics. Interactions between the airfoil and flow are unique ineach of these three regions, creating distinct patterns of dynamics. Therefore, coordinate systemrepresentations should enable the model to distinguish between each of these regions.",
  "Augmented Coordinate System": "In this section, we describe enhancements to our coordinate system representation to more faithfullyrepresent relations between the airfoil geometry and mesh regions in which interactions with theairfoil give rise to distinct patterns of dynamics. In .3.1, we introduce a trailing edgecoordinate system, while in .3.2, we discuss the addition of angles to input features.",
  "Airfoil/downstream and aboveFreestreamAirfoil/downstream and below": ": Regions by angle in the leading edge coordinate system. Polar angles can be used to deriveboth which of the regions along the x-axis defined in a mesh point is in, as well as where thepoint is vertically with respect to the airfoil. The same information is contained in the Cartesian formof the leading edge coordinate system, although the model must learn interactions between the x andy coordinates in order to derive it. As can be seen in , the dynamics occurring in each of these regions are distinct from oneanother. In the freestream region Xfs, the behavior of the flow is largely independent of the airfoil.Upon entering Xaf, the airfoil surface deflects, compresses, and slows down air particles. Theseinteractions are then carried downstream of the airfoil in the region described by Xds, where particlesare still influenced by the airfoil geometry but no longer come into direct contact with its surface. It istherefore important for the model to be able to distinguish which partition a given mesh point belongsto for faithful modeling of the dynamics. Given the input representation zin(x) for the mesh pointx = [xy] shown in Equation (1), it is straightforward for the model to determine whether x Xfsor x Xaf Xds via sign(x), as can be seen in a. However, distinguishing between Xafand Xds is more challenging, as unlike xlead, xtrail can vary across airfoil geometries, for exampleaccording to the length xtrail xlead of the airfoil. We therefore introduce a trailing edge coordinatesystem Xtrail R2 to better enable the model to distinguish between these regions. The trailing edgecoordinate system, shown in b, places the origin at xtrail X, and is defined as",
  "Hybrid Polar-Cartesian Coordinates": "Although the TRAIL model is able to distinguish between the regions defined in , otherdistinctive regions are present which require the model to derive interactions between horizontaland vertical coordinates. For example, for x = [xy] X, sign(x) determines whether the meshpoint is in Xfs or Xaf Xds, while sign(y) indicates whether the mesh point is above or below thesurface of the airfoil. If x Xfs, then whether it is above or below the airfoil largely has no effecton the resultant dynamics, although if x Xaf Xds, the dynamics above the airfoil are uniquefrom those below, e.g., the generation of lift requires pressure on the lower surface of the airfoil to begreater than pressure on the upper surface [Liu, 2021].",
  ": Comparison of the TRAIL and POLAR models to the SURF2VOL model": "To simplify learning, we extend model inputs to include the polar angle of x = [xy] with respectto polar axis as (x) := atan2(y, x). As zin(x) also includes x, the inputs can beseen to now contain both polar and Cartesian coordinates. Instead of learning interactions betweencoordinates, this enables derivation of relationships directly from (x). As shown in , thissimplification can be seen through the previous example, where (x) (0,",
  "Coordinate System Embedding": "To enhance the expressiveness of input coordinates xR,we expand them to[B1(x), B2(x), . . . , Bnbasis(x)], where {Bi}nbasisi=1is a nbasis-dimensional basis. In the first linearlayer W of the embedding module, the model can then learn arbitrary functions of the coordinatesnbasisi=1wiBi(x). In .4.1, we describe our embedding of Cartesian coordinates and dis-tances using sinusoidal basis functions, while in .4.2, we discuss spherical harmonic angleembeddings. In both cases, we take nbasis = 8.",
  "i=0 R2nbasis.(7)": "The division by s in the denominator of Equation (7) is to account for the spacing of the grid points,as Vaswani et al. developed this scheme for x Z+ as a sequence position. While the spacingbetween consecutive sequence positions is 1 for the setting considered by Vaswani et al. ,for a computational mesh, the spacing between adjacent points can be substantially smaller. Wefurthermore set d dependent on s and the size of the domain L as d = 4L",
  "We form the SINE model by augmenting the input node features of the POLAR model with sinusoidalembeddings of coordinates and distances aszin(x) = [zbase(x), ztrail(x), zpolar(x), zsine(x)] R131": "zsine(x) := [PE(x), PE(x), PE(d(x)), PE(x), PE(x)] R112,where with a slight abuse of notation, we vectorize PE asPE(x) := [PE(x), PE(y)] R4nbasis.(8)Input SURF2VOL edge features are similarly augmented in the SINE model with sinusoidal embed-dings of edge displacements and distances asein(y, x) = [ebase(y, x), epolar(y, x), esine(y, x)] R55",
  ": Comparison of the SINE and SPH models to the POLAR model": ": Turbulent viscosity and inlet velocity in the leading edge coordinate system (left) and inthe canonicalized leading edge coordinate system (right). The direction of the inlet velocity, shownin red, is strongly associated with the direction of the non-zero parts of the turbulent viscosity field.After canonicalizing the coordinate system such that the inlet velocity is parallel with the x-axis,the non-zero parts of the turbulent viscosity are concentrated in the region around the x-axis for allexamples. where the coefficients C,k R are obtained from the order Legendre polynomial P. However, ascan be seen in Equation (9), since Y 0 () is composed of powers of cosine, it is an even function, andas such, it cannot distinguish between and . We therefore define a set of odd basis functionsY 0 () as",
  "esph(y, x) := SpH(4(y x)) R64": "Results for the SINE and SPH models are shown in . Both the SINE and SPH modelsimprove on the GLOBAL SCORE and the OOD SCORE of the POLAR model. While the SINE modelachieves a better ML SCORE due to improvements in the turbulent viscosity field error, the SPHmodel achieves a new best error on the pressure field and improves the PHYSICS SCORE.",
  "Turbulent Viscosity and Pressure Transformations": "In the previous sections, we have discussed techniques that we apply to all four models trained topredict velocities ux and uy, pressure p, and turbulent viscosity t. However, as can be seen from theerrors in , compared to velocity, the pressure and turbulent viscosity fields are particularlychallenging to accurately model. We therefore introduce specific techniques for enhancing modelgeneralization on each of these fields. In .5.1, we derive a change of basis to canonicalizeinput features with respect to inlet velocity. We additionally re-parameterize our model to predict thelog-transformed pressure, as discussed in .5.2.",
  ": Pressure field with the least range (left) and with the greatest range (right)": "the x-axis. This effectively canonicalizes the coordinate system with respect to the inlet velocity, atechnique which has been applied in machine learning to improve generalization [Puny et al., 2022,Lin et al., 2024]. In the case of t, as can be seen in , the association between v andt implies that many of the non-zero parts of t will occur in the region along the x-axis in thecanonicalized coordinate system, resulting in a substantially less difficult modeling task.",
  ",": "where v = [v1v2]. Rv is obtained by deriving the matrix that rotates v to be parallel withthe x-axis, that isRvv = [v0] .For the models trained to predict turbulent viscosity and pressure, we extend the input node featuresfor the INLET model from those for the SPH model to additionally include coordinates, angles, andsurface normals in the canonicalized coordinate system as",
  ": Log-transformed pressure field with the least range (left) and with the greatest range(right)": "p is necessary for accurate prediction of the lift coefficient CL. However, this large differential leadsto a more challenging prediction target. As can be seen in Figures 18 and 19a, there is a large amountof variance between the low pressure region above the airfoil and the high pressure region below theairfoil. Note that p(x) is the gauge pressure, which represents the deviation of the absolute pressurepabs from the freestream pressure p as",
  "given byp(x) = sign(q(x))(exp(|q(x)|) 1)": "Results for the GEOMPNN model are shown in . We compare to the SPH model, whichpreviously had the best error on the pressure field, and the INLET model, which previously had thebest GLOBAL SCORE. The GEOMPNN model improves both metrics, and also achieves a lowerrelative error for the lift coefficient.",
  "Conclusion": "We propose GEOMPNN to accelerate the steady-state solution of the RANS equations over airfoilsof varying geometries subjected to different simulation conditions. Integral to the architecture ofGEOMPNN is the incorporation of an expressive geometric representation of the airfoil in modelpredictions using SURF2VOL MESSAGE PASSING. We furthermore demonstrate that the designof GEOMPNN enables efficient training on subsampled meshes with no degradation in predictionquality on the full mesh. We design physically-inspired coordinate system representations anda canonicalization scheme to enhance the generalization capabilities of GEOMPNN. Extensiveexperiments validate our design choices and show that GEOMPNN can accurately and efficientlymodel dynamics for a range of airfoil geometries and simulation conditions.",
  "This work was supported in part by National Science Foundation under grant IIS-2243850": "P. W. Battaglia, J. B. Hamrick, V. Bapst, A. Sanchez-Gonzalez, V. Zambaldi, M. Malinowski,A. Tacchetti, D. Raposo, A. Santoro, R. Faulkner, et al. Relational inductive biases, deep learning,and graph networks. arXiv preprint arXiv:1806.01261, 2018. F. Bonnet, J. Mazari, P. Cinnella, and P. Gallinari. Airfrans: High fidelity computational fluiddynamics dataset for approximating reynolds-averaged navierstokes solutions. Advances inNeural Information Processing Systems, 35:2346323478, 2022.",
  "J. K. Gupta and J. Brandstetter.Towards multi-spatiotemporal-scale generalized PDE model-ing.Transactions on Machine Learning Research, 2023.ISSN 2835-8856.URL": "Z. Hao, Z. Wang, H. Su, C. Ying, Y. Dong, S. Liu, Z. Cheng, J. Song, and J. Zhu. Gnot: Ageneral neural operator transformer for operator learning. In International Conference on MachineLearning, pages 1255612569. PMLR, 2023. J. Helwig, X. Zhang, C. Fu, J. Kurtin, S. Wojtowytsch, and S. Ji. Group equivariant fourier neuraloperators for partial differential equations. In International Conference on Machine Learning,pages 1290712930. PMLR, 2023.",
  "D. P. Kingma and J. Ba. Adam: A method for stochastic optimization. In ICLR (Poster), 2015. URL": "M. Leyli Abadi, A. Marot, J. Picault, D. Danan, M. Yagoubi, B. Donnot, S. Attoui, P. Dimitrov,A. Farjallah, and C. Etienam. Lips-learning industrial physical simulation benchmark suite.Advances in Neural Information Processing Systems, 35:2809528109, 2022. Z. Li, N. Kovachki, K. Azizzadenesheli, B. Liu, K. Bhattacharya, A. Stuart, and A. Anandku-mar. Neural operator: Graph kernel network for partial differential equations. arXiv preprintarXiv:2003.03485, 2020. Z. Li, N. B. Kovachki, K. Azizzadenesheli, B. liu, K. Bhattacharya, A. Stuart, and A. Anandkumar.Fourier neural operator for parametric partial differential equations. In International Conference onLearning Representations, 2021. URL",
  "Y. Liu, L. Wang, M. Liu, Y. Lin, X. Zhang, B. Oztekin, and S. Ji. Spherical message passing for3d molecular graphs. In International Conference on Learning Representations, 2022. URL": "L. Lu, P. Jin, G. Pang, Z. Zhang, and G. E. Karniadakis. Learning nonlinear operators via deeponetbased on the universal approximation theorem of operators. Nature machine intelligence, 3(3):218229, 2021. A. Paszke, S. Gross, F. Massa, A. Lerer, J. Bradbury, G. Chanan, T. Killeen, Z. Lin, N. Gimelshein,L. Antiga, et al. Pytorch: An imperative style, high-performance deep learning library. Advancesin neural information processing systems, 32, 2019. O. Puny, M. Atzmon, E. J. Smith, I. Misra, A. Grover, H. Ben-Hamu, and Y. Lipman. Frameaveraging for invariant and equivariant network design. In International Conference on LearningRepresentations, 2022. URL L. N. Smith and N. Topin. Super-convergence: Very fast training of neural networks using large learn-ing rates. In Artificial intelligence and machine learning for multi-domain operations applications,volume 11006, pages 369386. SPIE, 2019.",
  "E. W. Weisstein. Spherical harmonic. wolfram. com/, 2004": "M. Yagoubi, D. Danan, M. Leyli-Abadi, J.-P. Brunet, J. A. Mazari, F. Bonnet, A. Farjallah, P. Cinnella,P. Gallinari, M. Schoenauer, et al. Neurips 2024 ml4cfd competition: Harnessing machine learningfor computational fluid dynamics in airfoil design. arXiv preprint arXiv:2407.01641, 2024. X. Zhang, L. Wang, J. Helwig, Y. Luo, C. Fu, Y. Xie, M. Liu, Y. Lin, Z. Xu, K. Yan, et al.Artificial intelligence for science in quantum, atomistic, and continuum systems. arXiv preprintarXiv:2307.08423, 2023. X. Zhang, J. Helwig, Y. Lin, Y. Xie, C. Fu, S. Wojtowytsch, and S. Ji. Sinenet: Learning temporaldynamics in time-dependent partial differential equations. In The Twelfth International Conferenceon Learning Representations, 2024. URL"
}