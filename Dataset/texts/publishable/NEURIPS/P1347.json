{
  "Abstract": "This paper introduces lateral thinking to implement System-2 reasoning capabilitiesin AI systems, focusing on anticipatory and causal reasoning under uncertainty.We present a framework for systematic generation and modeling of lateral thinkingqueries and evaluation datasets. We introduce Streaming agentic Lateral Thinking(SALT), a multi-agent framework designed to process complex, low-specificityqueries in streaming data environments. SALT implements lateral thinking-inspiredSystem-2 reasoning through a dynamic communication structure between special-ized agents. Our key insight is that lateral information flow across long-distanceagent interactions, combined with fine-grained belief management, yields richerinformation contexts and enhanced reasoning. Preliminary quantitative and qualita-tive evaluations indicate SALTs potential to outperform single-agent systems inhandling complex lateral reasoning tasks in a streaming environment.",
  "Introduction": "The rapid advancement of artificial intelligence (AI) has revolutionized our ability to process andunderstand vast amounts of text and multi-modal content. State-of-the-art AI models now demonstrateremarkable capabilities in answering complex hypothetical questions based on user-provided context,exhibiting traits reminiscent of \"System 1\" thinking as described by Kahneman (2011). A key component of human intelligence is the ability to reason under uncertainty and anticipate futureevents. Many critical events in personal, financial, and security domains do not occur instantaneouslybut are preceded by identifiable precursors. For instance, a user might be interested in monitoring risksto a specific industry supply chain arising from emerging geopolitical events (). Recognizingearly signals and tracking their development over time enables proactive planning and appropriateresponses as events unfold. These cognitive abilities require sophisticated reasoning about: 1) possible event chains underuncertainty, 2) dynamic evaluation of event chain probabilities as new information emerges, and3) intelligent aging and retrieval of information from long-term to short-term memory. Such traitsare hallmarks of \"System 2\" thinking, essential for advanced cognitive processes that distinguishhuman-level intelligence (Kahneman (2011)).",
  "arXiv:2412.07977v1 [cs.AI] 10 Dec 2024": ": Conceptual overview of the SALT framework. This diagram illustrates the multi-agentstructure and dynamic communication flow in processing lateral reasoning queries, such as \"monitorthe risk to the supply chain of American semiconductor companies\". The right side shows a timelineof events that gradually unfold in a datastream over time. The left side depicts the specialized agentnetwork, representing different topics in the problem space. This network structure is dynamicallygenerated to address the specific lateral reasoning query. Connecting lines between agents and eventsindicate the reasoning criteria employed by each agent to interpret the temporal context. particularly valuable in complex, dynamic environments where conventional methods fall short. Weposit that a multi-agent architecture Wu et al. (2023) presents a promising solution for continuouslyprocessing a large volume of anticipatory questions. By leveraging specialized agents for distinctdomains, this system enables parallel processing of domain-specific data and facilitates cross-domainconnections. This distributed approach mirrors the non-linear pathways of lateral thinking, allowingfor the discovery of novel patterns that traditional, sequential reasoning methods would miss. In this work, we introduce a systematic framework for generating and modeling lateral thinkingqueries and associated evaluation datasets. This framework addresses the challenge of low-specificityqueries in real-world applications, where individuals can express interest in specific outcomes butcannot describe every possible combination of event sequences leading to those outcomes. Buildingon this framework, we present Streaming agentic Lateral Thinking (SALT), a multi-agent systemdesigned to simultaneously process multiple complex, low-specificity queries in streaming dataenvironments. SALT implements lateral thinking-inspired System-2 reasoning through a dynamiccommunication structure between specialized agents. SALT operates by monitoring evolving information around assigned topics, with agents exchangingprobabilistic observations (subsequently referred to as belief statements\") to form and temporallymaintain hypotheses about query-focused outcomes. Unlike static multi-agent systems, SALTs agentnetworks communication structure continuously adapts based on the relevance of agent expertiseand the newly formed beliefs. This dynamic topology enables the system to find unconventionalpathways for information flow, addressing scenarios where information is continuously changing andthe immediate context rarely contains the full answer to a user query.",
  "Related Work": "From an algorithmic perspective, a complex event can be decomposed into sub-events. See and 3 for more illustrative examples. The process of robust prediction of such complex eventscan generally be reduced to three steps: 1) accurate identification of its sub-events when or beforethey occur, 2) the ability to connect these sub-events as they emerge over time through a single ormultiple data sources, and 3) maintenance of the combined or partially materialized event informationsuch that that memory complexity does not increase monotonically and lead to system failure. Eachof these steps has been extensively studied across various fields in computer science, includingdatabases, natural language processing, and symbolic or probabilistic reasoning methods. Drawingstrong inspiration from this prior literature, SALT introduces large-language model Achiam et al.(2023); Ram et al. (2023)-based implementation of each of these steps. Streaming query/reasoning Complex event processing has been studied extensively over the pastthree decades, initially motivated by the advent of online financial markets and subsequently by thegrowth of cyber data streams and social media. A common approach among these prior solutionsChandrasekaran et al. (2003); Choudhury et al. (2015); Della Valle et al. (2009): 1) A querydecomposition approach where the complex query processing task is decomposed into a data-flowgraph, with nodes representing operators that process a stream through SQL, graph, or differentmodels, and 2) an event graph that guides how partial results are joined to produce a final answer.Maintenance of materialized partial query results and their aging over time is a key performance issuefor such systems Barbieri et al. (2010); Ren and Pan (2011). As discussed in the next section, SALTderives these decomposition graphs from user-specified queries, initiates an agent network structureWu et al. (2023), and pursues a dynamic inter-agent communication strategy for dataflow. Induction and exploitation of Knowledge Schema Scaling up such methods on unstructured, noisydata streams extracted from text and other modalities introduces new challenges, including queryevent interpretation from text Lee et al. (2015), induction of unseen events Huang and Ji (2020), andevolution of underlying knowledge schema Yu et al. (2021). In the current work, we do not restrictSALT to any specific event or knowledge (graph) schema. This choice is primarily driven by the goalto support multiple user queries drawn from a wide range of diverse but related domains. Recentwork Ghafarollahi and Buehler (2024) illustrates the benefits of grounding the beliefs generated in anLLM-Agent network via a knowledge graph. Probabilistic approach Probabilistic approaches to event detection have been studied in the past forstructured data streams, with possible worlds\" representing a probabilistic assignment of variousevents occurring in the data stream Cormode and Garofalakis (2007). Formulation of query processingoperators in a Hidden Markov Model fashion and development of probabilistic stream algebra wereproposed by R et al. (2008). In the broader context beyond event detection, belief propagationmethods have been the cornerstone of probabilistic graphical models Murphy et al. (2013). Morerecently, loopy belief propagation methods have been combined with graph neural networks topropose neural message propagation with embeddings Satorras and Welling (2021), inspiring theimplementation of the message propagation and belief synthesis steps in our proposed algorithm.",
  "The components of the SALT architecture are defined as follows": "Agents: Each agent Ai in the network is associated with a set of topics Ti = {t1, t2, ..., tn}.See and the appendix for examples. In a multi-query setting, we compute an union ofall query specific topics and use the resultant set to initilize the network. Network Topology: The agents are connected in a graph structure G(V, E), where verticesV represent agents and edges E represent information flow pathways between agents. Thisgraph dynamically evolves based on the context of each batch in the stream. Belief Statements: Agents generate and maintain a set of belief statements Bi ={b1, b2, ..., bm}. Each belief statement bj is characterized by a tuple (s, c, t, r), wheres is the statement text, c is a confidence score, t is a timestamp, and r is a list of relevantreference ids. We provide an example of a belief statement in the next page. PROBLEM DEFINITION Given the aforementioned setup, SALT aims to optimize the functionf(S, Q, A, G) H, where S = {s1, s2, ..., st, ...} is an incoming data stream, Q = {q1, q2, ..., qm}is a set of user queries, A = {A1, A2, ..., An} is a set of specialized agents, and G(V, E) is a dynamicgraph representing inter-agent connections. For each batch st, SALT updates G, generates and refines belief statements Bi(t) for each agent Ai,and synthesizes these to produce a set of hypotheses H(t) = {h1, h2, ..., hk}. The objective is tomaximize i relevance(hi, Q) and i accuracy(hi) while minimizing computational complexityC(f) and ensuring |Bi(t)| M for some memory bound M, i, t. This formulation encapsulatesSALTs goal of continuously generating accurate, relevant hypotheses from streaming data using adynamically adapting multi-agent system, subject to real-time processing and memory constraints. Question: What actions are American semiconductor companies likely to take in response tothese vulnerabilities and risks?Context: [Query context can be initialized from a batch of articles or prior belief statements.]Response: American semiconductor companies are likely to take several actions, includingdiversifying their supply chains to reduce dependency on any single region, investing in increasedcybersecurity measures to protect against cyberattacks, and advocating for diplomatic solutionsto reduce geopolitical tensions. They might also increase collaboration with internationalpartners to bolster their supply chain resilience and seek governmental support for policies thatencourage domestic manufacturing capabilities.Confidence: 0.9Timestamp: 127References: [article-103, article-104] We now proceed to describe three key steps in SALT: initialization of the agent network, initiation ofnew belief statements and updating pre-computed beliefs, and sharing across the network topologyto synthesize new belief statements. The latter two steps are executed iteratively for each batch ofincoming streaming data. Agent Initialization SALT is first initialized by translating the user-specified question set into aset of topics. In Algorithm 1, the ExtractTopics function uses a pre-trained topic classificationmodel to identify relevant topics from the input questions. The CreateAgent function handles theconstruction of simple RAG agents, and the BuildGraph function creates initial connections betweenagents based on topic similarity. An example output from ExtractTopics is provided in sectionA.1.",
  "Dynamic Network Topology": "While the multi-agent system described in prior subsections has a defined graph structure, allconnected agents do not necessarily communicate with each other for every query. Consider asystem which has two agents, one that specializes in the weather events\", and another specializesin agricultural commodities market\". Assume these two agents are connected via the network, andthe purpose of such a multi-agent system is to predict how extreme weather events may affect thefarmimg industry in the Pacific Northwest. Given a set of articles that pertains only to weather, itdoes not necessarily make sense to share those belief statements with our commodities\" agent.",
  "wij = sim(Ti, Tj)(1)": "Here wij is the connection weight between agents Ai and Aj, which handle topics Ti and Tjrespectively. sim(Ti, Tj) is the topic similarity and is a coefficient which controls the relativeimportance of this particular connection. This construction is important for avoiding simple diffusion-like dynamics. If there were only a communication network structure without any further selectivebehavior, the network of agents will eventually converge on a nearly static belief set.",
  "Dataset": "To rigorously evaluate SALTs performance, we developed a comprehensive dataset of lateral thinkingquestions and scenarios, accompanied by novel complexity metrics. This section details our datageneration process and benchmarking methodology. Dataset Creation We generated a synthetic dataset comprising 30 lateral thinking queries using acombination of state-of-the-art language models (Claude-3.5 and GPT-4o) and human expert curation.Each query was crafted to investigate trends with potential cross-industry impacts such as Monitorextreme weather patterns for impacts on agricultural commodity prices\". We also generated multiplescenarios for each query, designed to emulate real-world situations typically reported in mainstreamnews media. For example, the Monitor extreme weather patterns for impacts\" query can be mappedto three scenarios: a) Severe droughts in Brazil lead to surge in coffee futures prices\", b) Unexpectedfrost in Florida causes orange juice futures to spike\" and c) Extended heatwave in Europe results inwheat shortage and price increase\". Article Generation For each scenario, we generated between 20 and 100 articles, each presentingunique developments related to the specific scenario. To ensure diversity and realism in the corpus,we parameterized the article generation process along several dimensions: a) perspective (e.g.,conservative, liberal), b) length (ranging from 200 to 1000 words), c) temporal distribution (e.g.,uniformly distributed over a 6-month period vs. clustered within a 2-week window).",
  "Lateral Reasoning Complexity Metrics": "To quantitatively model the workload complexity and ensure a balanced distribution, we proposefour novel metrics for each query-scenario pair. Well illustrate each metric using our Taiwan Straittensions scenario from : 1. Lateral Measure (L): Quantifies the number of intermediate causal steps between thetrigger event and the outcome. Range: 1-7. Example: L = 3 for our Taiwan scenario:increased military presence disruption of global semiconductor supply chains stockmarket volatility. 2. Time Lag Complexity (T ): Measures the temporal distance between the trigger event andits final impact, in days. Range: 0-21 (for this rapid-evolving scenario). Example: T = 14for our Taiwan scenario, where significant economic impacts manifest two weeks after theinitial spike in tensions. 3. Outcome Uncertainty Coefficient (U): Quantifies the unpredictability of the relationshipbetween the trigger and its effects on a normalized scale. Range: 0-1. Example: U = 0.9for our Taiwan scenario, due to the highly volatile nature of geopolitical crises and theirpotential for rapid escalation or de-escalation. Diversity Assurance: To ensure a wide range of lateral thinking challenges, we categorized queriesinto 10 broad domains (e.g., geopolitics, technology, climate change) and ensured balanced represen-tation across these categories (). We also varied the complexity levels (based on our proposedmetrics) across the dataset. a illustrates the diversity of the queries via complexity metricsdiscussed above. For illustration of a single query and its metrics see in appendix.",
  "Experimental Setup": "We explore four model variants in our experiments as listed below. As the name suggests, SingleTem-poralReasoningAgent is an agent that processes the batched data stream and executes as prompt ona rolling window of historical articles. It runs each of the user-specified queries separately with noinformation exchange between multiple query execution. See section B for implementation details.",
  "SALT-GPT4o: SALT with GPT-4o": "For brevity, we refer to SingleTemporalReasoningAgent with Claude (or GPT-4o) as Temporal-Claude (or Temporal-GPT4o) in subsequent discussions. We use our custom dataset of lateralthinking queries, as described in . For this preliminary study, we selected a subset of 30queries from the full dataset to evaluate our models. This relatively small set was chosen to ensurewe can manually verify the quality of generated articles and reasoning output from each target model.",
  "Results": "Lateral context augmentation drives outperformance Results comparing SALT and SingleTem-poralAgents are provided in . We observe that our agent network-based system achievessignificantly better performance across both hypothesis generation and citation retrieval compared tothe single agent based systems. SALT-Claude-Sonnet-3.5 outperforms its corresponding baselineimplementation by 39.77% and 29% in citation retrieval and hypothesis quality. Salt-GPT-4o out-performs Temporal-GPT-4o by 60% and 87.63%. Overall, Claude-Sonnet-3.5 based agents performbetter than GPT-4o in retaining facts and generating overall hypotheses. Key insight While our study is preliminary and larger-scale experiments are needed to conclusivelyestablish the superiority of lateral thinking, a consistent pattern emerges: SALTs reasoning is drivenby a significantly larger and diverse context size as measured by the number of belief statementsand supporting article count. This suggests that the key to its success lies in its ability to performlateral thinking over related contexts, sometimes multiple hops away in the agent network. Thesystems capacity to ensure that relevant information from distant articles is communicated to theappropriate agents appears to be crucial. However, further research is necessary to fully understand theinformation flow within the agent network and to validate this hypothesis. This insight, if confirmed,could represent a significant advancement in an AI systems ability to reason across diverse andseemingly unrelated information sources arriving at different points of time. Qualitative Analysis Answers generated by SALT are more a) information-rich and b) characterizedby higher specificity. Below we present a brief case study analyzing results to the query: Monitor ifany new economic activity develops as a result of changing climate patterns\".",
  ". Balanced perspective on opportunities and challenges: SALT outputs provide a morenuanced view of both opportunities and risks:": "SALT-GPT-4o mentions: \"The exploitation of Arctic resources raises environmentalconcerns and potential conflicts over territorial claims. Increased maritime activity inthe Arctic also brings risks of oil spills, noise pollution affecting marine life, and theintroduction of invasive species.\" SALT-Claude states: \"These new economic activities come with significant challengesand potential conflicts. The competition for resources in the Arctic is intensifying,leading to increased militarization and the need for new governance structures tomanage conflicting claims.\"",
  "Conclusions": "This paper advances AI reasoning by introducing lateral thinking for agents to address low-specificityanticipatory and causal questions in streaming setting. We present a framework for generating lateralthinking queries and datasets, and introduce SALT, a multi-agent system implementing System-2 reasoning. Preliminary studies reveal SALTs superior performance over single-agent systems,suggesting a novel phenomenon: lateral information flow across long-distance agent interactions,combined with fine-grained belief management, yields richer information contexts and enhancedreasoning. Rigorous testing of this hypothesis on large-scale datasets will be subject of future work.",
  "Kevin Murphy, Yair Weiss, and Michael I Jordan. Loopy belief propagation for approximate inference:An empirical study. arXiv preprint arXiv:1301.6725, 2013": "Ori Ram, Yoav Levine, Itay Dalmedigos, Dor Muhlgay, Amnon Shashua, Kevin Leyton-Brown, andYoav Shoham. In-context retrieval-augmented language models. Transactions of the Associationfor Computational Linguistics, 11:13161331, 2023. Christopher R, Julie Letchner, Magdalena Balazinksa, and Dan Suciu. Event queries on correlatedprobabilistic streams. In Proceedings of the 2008 ACM SIGMOD international conference onManagement of data, pages 715728, 2008. Yuan Ren and Jeff Z Pan. Optimising ontology stream reasoning with truth maintenance system. InProceedings of the 20th ACM international conference on Information and knowledge management,pages 831836, 2011.",
  "Victor Garcia Satorras and Max Welling. Neural enhanced belief propagation on factor graphs. InInternational Conference on Artificial Intelligence and Statistics, pages 685693. PMLR, 2021": "Qingyun Wu, Gagan Bansal, Jieyu Zhang, Yiran Wu, Shaokun Zhang, Erkang Zhu, Beibin Li, LiJiang, Xiaoyun Zhang, and Chi Wang. Autogen: Enabling next-gen llm applications via multi-agentconversation framework. arXiv preprint arXiv:2308.08155, 2023. Pengfei Yu, Heng Ji, and Prem Natarajan. Lifelong event detection with knowledge transfer. InProceedings of the 2021 Conference on Empirical Methods in Natural Language Processing, pages52785290, 2021.",
  "B.1Implementation": "The SingleTemporalReasoningAgent processes streaming information and generates evolving hy-potheses over time. Its core functionality involves maintaining a temporal context of past assessmentswhile continuously integrating new information. The agent processes articles in chronological batches,capturing the progression of events and insights. For each user query, it generates hypotheses byconsidering both the current batch of articles and, optionally, the previous hypothesis, implementinga form of persistence in its reasoning process. This method enables the agent to build upon pastknowledge, refine its assessments, and provide updated insights as new information becomes available.The agent employs a planner (or master agent) for hypothesis generation, adding adaptability to thereasoning process. As detailed in Algorithm 1, the agent manages the flow of information by sortingand filtering articles, generating hypotheses, and presenting results, creating a systematic process forcontinuous reasoning over time-based data streams. Algorithm 4: SingleTemporalReasoningAgentInput: User queries Q, Planner P, Articles A, Parameters paramsOutput: Temporal context of hypotheses HInitialize H as empty dictionary;Sort A chronologically;A FilterArticlesByDateRange(A, params.start_date, params.end_date);while A is not empty do"
}