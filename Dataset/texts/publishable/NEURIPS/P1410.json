{
  "Abstract": "Inferring the 3D structure underlying a set of multi-view images typically requiressolving two co-dependent tasks accurate 3D reconstruction requires precisecamera poses, and predicting camera poses relies on (implicitly or explicitly)modeling the underlying 3D. The classical framework of analysis by synthesiscasts this inference as a joint optimization seeking to explain the observed pixels,and recent instantiations learn expressive 3D representations (e.g., Neural Fields)with gradient-descent-based pose refinement of initial pose estimates. However,given a sparse set of observed views, the observations may not provide sufficientdirect evidence to obtain complete and accurate 3D. Moreover, large errors in poseestimation may not be easily corrected and can further degrade the inferred 3D.To allow robust 3D reconstruction and pose estimation in this challenging setup,we propose SparseAGS, a method that adapts this analysis-by-synthesis approachby: a) including novel-view-synthesis-based generative priors in conjunction withphotometric objectives to improve the quality of the inferred 3D, and b) explicitly",
  "arXiv:2412.03570v1 [cs.CV] 4 Dec 2024": "reasoning about outliers and using a discrete search with a continuous optimization-based strategy to correct them. We validate our framework across real-worldand synthetic datasets in combination with several off-the-shelf pose estimationsystems as initialization. We find that it significantly improves the base systemspose accuracy while yielding high-quality 3D reconstructions that outperform theresults from current multi-view reconstruction baselines.",
  "Introduction": "Consider the images of the robot shown in . From just these few images, we humans can easilyunderstand the 3D structure of this object it has a cylindrical base supporting a tall body fromwhich an arm extends to the front. We do this by aggregating the information across images into aconsistent 3D mental model, e.g., the front view informs us of the width of the body and the sideview(s) about the extended arm. But how do we know which image is to the front or to the sideto begin with? As evidenced in seminal research of mental rotation , we understand viewpointsby forming mental 3D models. Thus, to form mental 3D models, we need to understand the (relative)viewpoints across images, but doing so in turn requires a mental 3D model! This co-dependency in inferring shape and pose is one that any computational approach aiming torecover 3D from multiple views also needs to deal with. Indeed, classical approaches like Structure-from-Motion (SfM) tackle the two together and infer 3D and camera viewpoints. However,these correspondence-based methods can only infer sparse 3D representations and are not robustgiven a small set of images with limited overlap. To allow 3D inference in such sparse-view settings,recent learning-based approaches have pursued sparse-view reconstruction approaches , butassuming known precise camera poses. Separately, there have been several methods which predict camera viewpoints given a set of images. While these methods have led to impressiveresults for both 3D reconstruction and pose inference, their singular focus on only one task withouttackling the other limits their utility the 3D reconstruction methods requiring precise camerascannot be easily used in real-world applications, and pose estimation methods that do not model 3Dare typically limited in their accuracy. We present SparseAGS, a framework that unifies the advances in learning-based pose estimation and3D reconstruction using the former as an initialization and building on the latter for obtaining accu-rate 3D reconstruction. Specifically, we adopt an analysis by synthesis approach where we jointlyoptimize pose and 3D to explain the observed pixels. However, unlike prior methods whichsimply leverage photometric-error-driven gradient-based updates for pose and 3D, we additionallyleverage generative priors for more complete (and accurate) 3D despite input images thatmay only partially capture the object. However, current off-the-shelf novel-view generative models only allow 3-DoF camera parameterization which is insufficient beyond synthetic settings, wefinetune a SoTA model to allow 6-DoF camera variation when querying novel views. We find thatsuch generative priors not only contribute to the 3D reconstruction quality but also result in moreaccurate camera poses. Moreover, we also explicitly account for large possible errors in initial cameraestimation and prevent these from degrading 3D reconstruction via identifying outliers, and alsoimprove poses via a combination of a discrete search and continuous optimization. Compared to prior joint reconstruction and pose estimation methods that are designed to improvenear-perfect initial cameras , SparseAGS can leverage off-the-shelf pose estimates, therebyallowing robust inference in real-world scenarios. We demonstrate its efficacy using both, real-world and synthetic datasets in conjunction with several state-of-the-art pose estimation methods asinitialization. We find that our approach significantly improves the initial camera estimates and yieldshigh-fidelity 3D reconstructions (and novel view renderings). In summary, our contributions are: We introduce an analysis-by-generative-synthesis framework that jointly estimates 3D and cameraviewpoints given a sparse set of input images, by integrating a 6-DoF novel-view generative priorin an analysis-by-synthesis approach",
  "Related Work": "Sparse-view Pose Estimation. Traditional correspondence-based Structure-from-Motion methods often fail to estimate camera poses in sparse-view settings. Several approaches instead seekto leverage data-driven priors, for example learning energy-based or denoising diffusion models to predict cameras. While these approaches predict global camera representations, someworks have demonstrated the benefit of denser camera parametrizations by predicting raymaps or pointmaps . As an alternative paradigm to direct camera prediction, some recent methods instead estimate relative poses by inverting the view-conditioned synthesis capabilitiesof diffusion models . While these methods have led to remarkable improvements in cameraestimation, these are still susceptible to some imprecision and occasional outliers which our 3D-reasoning-based approach can correct. Sparse-view 3D Reconstruction. This line of work aims to recover 3D from sparsely sampledviews, aiming to infer complete 3D representations that faithfully reflect the content captured bythe input images while making reasonable guesses for invisible areas. The progress of diffusionmodels has greatly advanced this direction, as they are capable of learning strong naturalimage priors from data. Inspired by DreamFusion , which generates 3D scenes given textualdescriptions leveraging a text-to-image diffusion model , SparseFusion learns a view-conditioned diffusion model on multi-view image collections for novel view synthesis and thendistills the learned novel-view distributions into a single consistent 3D representation. DreamSparse further improves the performance by utilizing internet-scale natural image priors learned byStable Diffusion . Although these methods present impressive results, they assume precise cameraposes are available, which limits their applications. FORGE addresses this by jointly inferringboth camera poses and 3D structure in a single forward pass, though the quality of its reconstructionsremains constrained by pose estimation accuracy without further refinement or correction. Pose-free Sparse-view 3D Reconstruction. Some recent works have attempted tobypass the reasoning about camera poses and directly infer novel views or 3D representations fromunposed images. An unposed variant of the Scene Representation Transformer encodes a set ofinput images into latent features and synthesizes novel views given the corresponding query rays (w.r.t.the viewpoint of the first image) using a transformer encoder and decoder. UpFusion improvedupon this by learning a diffusion model and distilling a consistent 3D representation via ScoreDistillation Sampling , whereas LEAP and PF-LRM can directly predict (volumetric ortriplane) 3D representations in a feedforward manner. While these methods demonstrate promisingresults, their geometry-free approach cannot easily capture the specific details across input imagesand they struggle to improve the 3D estimation with additional input images. Analysis-by-synthesis Approaches. Approaching visual perception as an inverse graphics task isclassical idea in computer vision , and has been leveraged for inferring scene properties(e.g., object pose) by synthesizing visual content as close to observations as possible .Closer to our setup, prior approaches jointly optimize camera pose and 3D representation (e.g., NeRF) to explain the observed images but these methods are designed for dense observationsand only handle small pose errors. Closer to our work, SPARF focuses on the sparse-viewsetup, leveraging estimated pixel correspondence as prior knowledge in addition to the standardphotometric loss. However, reliably extracting such correspondences can be challenging, and falsematch estimates may even confuse pose refinement, leading to degraded 3D reconstruction.",
  "incur larger errors in other views?": ": (a) Overview of SparseAGS: Given estimated camera poses from off-the-shelf models,our method iteratively reconstructs 3D and optimizes poses leveraging diffusion priors. (b) DetailedView of Each Component: We use rendering loss and multi-view SDS loss for 3D reconstructionwhile the rendering loss is propagated back to refine camera poses. At the end of each reconstructioniteration, we identify outliers by checking if their involvement in 3D inference yields larger errors inother views, implying the inconsistency of their poses with others. images. If f is differentiable, we can jointly optimize the 3D representation and camera poses viagradient descent . However, this approach may not work well in the sparse-view setting (i.e., N is small) as the 3D representation can overfit to the input images without forming a plausiblestructure, degrading both, pose estimation and 3D reconstruction. Analysis by Generative Synthesis. To address this issue, we propose to introduce generative priorsinto analysis by synthesis, so we term our method analysis by generative synthesis. In addition tothe known-view objective (Eq. 1), we leverage diffusion priors to optimize renderings fromrandomly sampled novel views () as well",
  "minE log p(f()|, I, )(2)": "where p is the likelihood of the novel view rendering conditioned on the viewpoint and inputs(I, ), modeled by the diffusion model . The gradients for this objective can be obtained viaScore Distillation Sampling (SDS) , and intuitively, they encourage the renderings of the 3Drepresentation to be plausible based on image distributions learned by the diffusion model. In the following, we first introduce a few preliminaries about an efficient single-view-to-3D approach(Sec. 3.2), on which we build our multi-view reconstruction method, MV-DreamGaussian, enablinganalysis by generative synthesis in the wild (Sec. 3.3). Then, we present our complete frameworkthat involves dealing with imprecise cameras (Sec. 3.4). An illustration of our approach is in .",
  "Preliminaries: DreamGaussian": "DreamGaussian generates 3D from a single image with a two-stage approach, achieving asatisfactory trade-off between speed and fidelity. The first stage optimizes 3D Gaussians (parameterized by ) using a combination of photometric loss (Eq. 1, except that the camera poseis not optimized) and SDS loss (Eq. 3) with a view-conditioned diffusion model, Zero-1-to-3 .Specifically, for a randomly sampled novel view , scheduled noise at timestep t is added tothe latent of its rendering (the noisy latent is denoted by zt). The training objective minimizes thedifference between the predicted noise and the added noise, approximating the negative log-likelihoodof the rendered image. The gradient of SDS loss is given by",
  "(3)": "where w(t) is a weighting function, () is a U-Net trained to predict the added noise given thenoisy latent zt, conditioned on the timestep t, reference image I1, and the relative camera pose .This stage efficiently builds the geometry of the object with rough texture, which takes 500 trainingsteps (in about 1 minute). In the second stage, 3D Gaussians are converted to a textured mesh withMarching Cubes , and only its texture is optimized. This stage takes another 50 steps and canfinish within 30 seconds on a single GPU. We find DreamGaussian to be a suitable starting point to perform analysis by generative synthesis,but note that it has some key limitations: (1) 3-DoF Camera Parameterization. DreamGaussianadopts a 3-DoF camera parameterization (i.e., radius, elevation, and azimuth) to accommodate thecamera definition in Zero-1-to-3 . While this parameterization is sufficient for synthetic data,it cannot well represent the 6-DoF camera poses of real-world images. (2) Single Input Image.DreamGaussian is designed for the singe-view-to-3D task. In contrast, we aim for the reconstructed3D to reflect the details captured by multiple input images faithfully. This requires an approach tohandling information from multi-view images.",
  "We adapt DreamGaussians two-stage method and extend it to (1) handle real-world images with6-DoF camera parameters and (2) utilize sparse-view images as input": "Generative Priors in the Wild. Zero-1-to-3 offers desirable generative priors that enablesingle-view-to-3D generation of DreamGaussian. However, it assumes no in-plane camera rotationand that all possible camera poses are strictly directed toward a common origin. We find theseassumptions are over-restrictive for real-world images. Therefore, we propose to replace the 3-DoFcamera condition in Zero-1-to-3 with a 6-DoF one, represented as an 18-dimensional vector:[Flatten(rel), log(f xrel), log(f yrel)](4)where rel is the relative extrinsic matrix (44) between the source view and target view, and f xrel(f yrel) is the ratio of the focal length along the x- (y-) axis between them. We include the focal lengthterm to account for the object scale change due to cropping. This simple camera parameterizationeffectively represents 6-DoF cameras in the wild. Details regarding finetuning Zero-1-to-3 for 6-DoFcamera conditioning are deferred to Sec. C in the appendix. We note that recent work, ZeroNVS ,also discussed this 3-DoF issue of Zero-1-to-3 and proposed a 6-DoF+1 camera parameterizationfor scene-level novel view synthesis. However, this approach is not directly applicable to our object-centric setting, as it is trained using images with complex backgrounds and leverages depth priors toaddress scale ambiguity. Leveraging the Generative Priors from Multiple Views. DreamGaussian only uses the generativepriors from a single reference image via SDS loss. To make LSDS aware of the visual cues frommultiple input images, we modify Eq. 3 as",
  "i=1 (zt; t, Ii, i)(6)": "N is the total number of input views, Ii is the ith input image, and i is its relative camera posew.r.t. the sampled novel view . We average the noise predictions from all input views that sharethe same timestep t. This method draws inspiration from the implementation of Stable-Dreamfusion, but we do not weigh the predicted noises based on the relative closeness of camera poses. Therationale behind this is that the camera poses in our setting are not always reliable, and relying tooheavily on close views could introduce significant conflicts during the 3D optimization process. With these modifications, our multi-view reconstruction approach, termed MV-DreamGaussian, iscapable of reconstructing 3D from sparse images in the wild by leveraging diffusion priors. Whendescribing its use in our overall framework, we use the notation = MV-DG(I, ) to denote the 3Drepresentation inferred via this pipeline given a set of input images I and associated viewpoints .",
  "Here, we introduce the complete framework of SparseAGS (see for an overview) that: a)leverages off-the-shelf pose estimation methods and b) incorporates our multi-view reconstruction": "approach MV-DG (Sec. 3.3) to jointly infer accurate 3D and camera viewpoints. A key challenge weseek to overcome is that the estimated camera viewpoints may have significant errors and that naivelyusing all images to infer 3D can result in suboptimal estimates. Pose Refinement via Gradient Descent. During 3D reconstruction via MV-DreamGaussian, we back-propagate gradients from the photometric loss (Eq. 1) back to update camera poses (implementingcustom CUDA kernels to enable this gradient computation). This process allows the camera posesto become more precisely aligned as 3D reconstruction progresses. We denote by = GD(I, , )the resulting camera viewpoints from this optimization given the set of input images I, and 3Dreconstruction and initial poses . With this pose-and-3D co-optimization, we can instantiate a version of our analysis-by-generative-synthesis framework by iteratively refining poses and reconstructing 3D given initial pose estimates0 from an off-the-shelf system:",
  "For k = 1 K :k = MV-DG(I, k1);k = GD(I, k, k1)(7)": "For clarity, we present separate formulas for the reconstructed 3D k and the updated poses k,though they are part of the same optimization process. Notably, in each iteration, we initialize thecamera poses using the output from the previous iteration (k1), while the 3D representation (k) isreset and reconstructed from scratch. Dealing with Outliers. Although the above iterative optimization framework can allow us to inferconsistent poses and 3D reconstructions, it is susceptible to local optima and not robust to largeerrors in initial pose estimates. To overcome this, we additionally detect outliers, i.e., imageswith possibly large pose errors that degrade the quality of 3D reconstruction. We then modify ourapproach to leverage only the estimated inliers for 3D reconstruction while also separately performinga discrete search to update the outlier viewpoints. Iterative Outlier Identification. Our key insight is that an outlier image not only exhibits highreprojection error, making it difficult to reconstruct on its own, but also that including it as a trainingimage for 3D reconstruction degrades the overall quality, thus leading to poorer reconstruction evenfrom other views! We operationalize this insight by classifying an image as an outlier if removing itfrom training significantly improves performance on other images. More formally, let Ii denote theset of images after removing the ith one and let E(, I, ) denote the average reprojection error of a3D representation over images I with (predicted) poses . We consider an image i as an outlier if",
  "E(MV-DG(I, ), Ii, i) >> E(MV-DG(Ii, i), Ii, i)(8)": "i.e., adding the image to training set significantly increases the error for other views. For efficiency,instead of considering all images as outlier candidates, we iterate over images in decreasing order ofreprojection error. Given this procedure to detect outliers, at each iteration (except k = 1) we modifythe above framework to first filter out the outliers found in previous iterations (along with the newoutlier candidate that gives the largest reprojection error at the last iteration):",
  "Iinlierk1, inlierk1 filter-outliers(I, k1, k1)(9)": "and only use the estimated inliers for optimizing 3D: k = MV-DG(Iinlierk1, inlierk1). This filter-and-reconstruct loop stops when either the selected outlier candidate is determined to be an inlier (i.e., thecondition 8 is not satisfied) or the number of remaining inliers falls below a threshold (e.g., 4). Correcting Outlier Poses. While identifying the outliers allows us to prevent them from influencingthe 3D inference, the finally recovered model may not capture the details from all images. Wethus also attempt to correct the pose estimates for the outliers via a discrete search (followed bycontinuous optimization). Using the currently estimated 3D (reconstructed from only the inliers),for each image in the outlier set, we re-estimate its camera pose via render-and-compare. We firstdensely sample pose candidates on a sphere and render images from the current 3D. We rank thepose candidates by measuring both pixel-space error (i.e., MSE) and perception error (i.e., LPIPS). The pose candidate with the highest cumulative rank is selected as the optimal solution. Onceall identified outliers are corrected, another reconstruction is performed to form a consistent 3Drepresentation with all images using the updated poses. Our overall framework is very efficient (largely due to an efficient implementation of the recon-struction step), typically taking 5-10 minutes given 8 input images, with increased inference timedepending on the number of estimated outliers. We include a brief analysis of the inference time ofour system in Sec. B.",
  "InputInitial PoseOurs (w/ 3D)SPARF": ": Qualitative Comparison on Camera Pose Accuracy. Given initial poses from off-the-shelf methods (top to bottom: DUSt3R , Ray Diff. and RelPose++ ), the refined posesfrom SPARF are compared with the output of SparseAGS. The estimated cameras are alignedwith ground truth (in black) with an optimal similarity transform. More results are available in .",
  "DUSt3R52.393.882.2w/ SPARF59.7(+7.4)87.8(-6.0)81.9(-0.3)w/ SparseAGS83.7(+31.4)96.2(+2.4)93.5(+11.3)": "Datasets.We primarily evaluate ourmethod on a real-world multi-viewobject-centric dataset NAVI . Thisdataset includes high-quality foregroundmasks, precise camera poses, and 3Dmeshes. For each of the 35 objects inNAVI, we randomly select 5 multi-viewsequences for pose estimation and recon-struction. Additionally, we assess ourmethod on synthetic datasets, includingGSO , ABO , and OmniObject3D. Results for the synthetic datasetsare provided in Sec. E of the appendix. Baselines. To evaluate camera pose ac-curacy, we select three sparse-view poseestimation baseline methods: RelPose++, Ray Diffusion , and DUSt3R. The first two are trained exclusivelyon CO3D , while DUSt3R is trained on a mixture of eight datasets, representing different levels ofprecision in initial camera poses. Our method initializes and improves the pose estimates from thesebaselines, and we also compare with SPARF , a sparse-view pose-NeRF co-optimization method.For evaluation of novel view synthesis, we mainly compare our method with unposed sparse-viewreconstruction approaches, LEAP and UpFusion (we include comparison with SPARF inSec. D). We conduct experiments with varying numbers of input images (N = 6, 8, 10, 16). Metrics. For pose accuracy, we follow prior works and report the following metrics: (1)Rotation accuracy: we compare pairwise relative rotation between the predicted cameras and groundtruth. We report the proportion of samples with errors less than a specified threshold, such as 5and 15 degrees. (2) Camera center accuracy: we align the predictions and ground truth using anoptimal similarity transform and report the proportion of camera centers within 10% of the scene",
  "(DUSt3R)Zoom In": ": Qualitative Comparison with LEAP on Novel View Synthesis. We use two poseestimation baselines (Ray Diffusion and DUSt3R ). SparseAGS better preserves details fromthe input images and shows enhanced performance with more accurate initial camera poses. Moreresults are available in of the appendix. scale relative to the ground truth. We evaluate our 3D representation via novel-view synthesis andreport PSNR and LPIPS for the rendered views. In our ablation study, we also assess the 3Dgeometry using the F1 score, comparing our recovered geometry against the ground truth 3D meshes.",
  "Evaluation": "Camera Pose Accuracy. We compare SparseAGS with SPARF on pose accuracy given eightinput images quantitatively in Tab. 1 (numbers are in percentage) and qualitatively in . We findthat SparseAGS consistently yields larger improvements than SPARF, which sometimes even leadsto degraded accuracy (marked by red numbers). We attribute this to the unreliable correspondencesextracted by SPARF (we include an example in ), as the input images in NAVI may exhibitmore significant viewpoint changes compared to scene-level datasets, e.g., DTU where SPARF : Quantitative Comparison of 3D Reconstruction on NAVI . We compare our methodwith two unposed approaches: LEAP and UpFusion , using varying numbers of input images(N). We adopt two pose initializations (Ray Diff. , DUSt3R ) reporting PSNR and LPIPS.",
  "LEAP12.840.291812.930.290212.980.2890UpFusion13.300.274713.270.2744//SparseAGSRay Diff.13.630.269715.300.230416.800.1960SparseAGSDUSt3R15.560.217317.030.187018.030.1660": "is originally tested. Note that training SPARF (or other NeRF-based methods) is far more expensivethan ours, and it may take more than 10 hours. Whereas our method typically finishes in 5-10 minutes.More analysis and detailed comparisons with SPARF on pose accuracy and novel view synthesis arein Sec. D. We vary the number of input images (N = 6, 10, 16) and report camera pose accuracy in Tab. 2 (weonly test RelPose++ with six images as inference with more than eight images is not supported).SparseAGS consistently enhances baseline performance for both rotation and camera center accuracy,with particularly significant gains for stricter metrics (e.g., Rot.@5). Moreover, the improvementstend to further increase with the number of input images. These results demonstrate that our methodis robust to varying levels of initial camera poses and generalizes well across different input numbers.",
  "SparseAGS(DUSt3R)": ": Qualitative Comparison with Up-Fusion on Novel View Synthesis. Weuse two pose estimation baselines (Ray Diffu-sion and DUSt3R ) as in . Notethat the left eye and symbol 2 of the ChickenRacer is missing in UpFusions output, prob-ably because of the first-image bias, whileSparseAGS preserves these details. 3D Reconstruction.In , we compareSparseAGS with two unposed approaches, LEAP and UpFusion , reporting metrics for 3Dreconstruction (novel view synthesis). Our methodconsistently outperforms both baselines across dif-ferent numbers of input images and with two poseestimation initializations. While SparseAGS showscontinuous improvements with an increasing num-ber of input images, the performance of LEAP andUpFusion nearly saturates in terms of both PSNRand LPIPS. We hypothesize that unposed methodsstruggle to utilize additional input images beyondtheir training capacity without further training ad-justments (LEAP is trained using five views, whileUpFusion is trained with a maximum of six images).In contrast, our method is flexible w.r.t. the numberof input images, eliminating the need for re-training.A qualitative comparison with LEAP and UpFusionis presented in and , respectively. Theresults show that SparseAGS better preserves the details in input images by explicitly modelingcameras and produces higher-quality novel view synthesis with more precise initial camera poses.",
  "metrics, we report the F1 score of reconstructed meshes, which reflects their alignment with groundtruth meshes": "(Appropriate) Generative Priors Improve Analysis by Synthsis. We find that adding generativepriors (Eq. 2) to naive pose-3D co-optimization (Eq. 1) improves both pose accuracy and 3Dreconstruction quality (comparison between (1) and (3) shows consistent improvements in all metrics).However, vanilla Zero-1-to-3 is not suitable for providing such priors in real-world scenarios, aswe observed a drop in camera rotation and center accuracy (compare (1) with (2) in Rot.@15 ). This is because 3-DoF camera parameterization cannot well represent the camera poses inthe wild. Although the numerical improvements may appear marginal (e.g., in PSNR), presentsa qualitative comparison of 3D reconstruction with and without our 6-DoF novel-view generativepriors. Supervision on novel views via SDS helps form a consistent 3D representation. Outlier Removal and Correction. The presence of outlier initial cameras introduces significant chal-lenges to pose-3D co-optimization. Our iterative outlier removal and correction pipeline effectivelyaddresses this issue. For instance, comparing (3) with (4) shows a substantial improvement: Rot.@5increased from 34.6% to 60.3% (25.7% absolute improvement), PSNR improved from 13.44 to 15.30,and increased from 57.2 to 68.2 (11.0 point absolute improvement). These results confirmthe effectiveness of our approach.",
  "Conclusion": "In this work, we presented SparseAGS, a framework for joint pose estimation and 3D reconstruction combining off-the-shelf pose estimation methods with a novel-view synthesis generative prior forrobust inference in real-world sparse-view captures. Limitations. While our experiments demonstrated clear improvements over initializations andstronger performance compared to prior 3D reconstruction methods, there are several challengesthat remain. First, our approach does rely on some reasonable off-the-shelf pose estimates andcannot succeed if a large fraction of the predictions have a large error. Secondly, SparseAGS (similarto existing baselines) does not deal with truncation or occlusion and cannot be directly applied toscenarios with close-up images of parts of objects or cluttered scenes with one object occluding theother. Finally, we focused here on an object-centric setting, and it would be interesting to extend ourapproach to broader settings, e.g., deploying our framework in conjunction with methods that learnnovel-view generative priors for scenes.",
  "Acknowledgements": "We thank Zihan Wang and the members of the Physical Perception Lab at CMU for their valuablediscussions. We especially appreciate Amy Lin and Zhizhuo (Z) Zhou for their assistance in creatingfigures, as well as Yanbo Xu and Jason Zhang for their feedback on the draft. We also thank HanwenJiang for his support in setting up the LEAP baseline for comparison. This work was supported in part by NSF Award IIS-2345610. This work used Bridges-2 at Pitts-burgh Supercomputing Center through allocation CIS240166 from the Advanced CyberinfrastructureCoordination Ecosystem: Services & Support (ACCESS) program, which is supported by NationalScience Foundation grants #2138259, #2138286, #2138307, #2137603, and #2138296. Shawn T Brown, Paola Buitrago, Edward Hanna, Sergiu Sanielevici, Robin Scibek, andNicholas A Nystrom. Bridges-2: A platform for rapidly-evolving and data intensive research.In Practice and experience in advanced research computing, 2021.",
  "Weihao Cheng, Yan-Pei Cao, and Ying Shan. Id-pose: Sparse-view camera pose estimation byinverting diffusion models, 2023. arXiv preprint arXiv:2306.17140": "Jasmine Collins, Shubham Goel, Kenan Deng, Achleshwar Luthra, Leon Xu, Erhan Gundogdu,Xi Zhang, Tomas F Yago Vicente, Thomas Dideriksen, Himanshu Arora, et al. Abo: Datasetand benchmarks for real-world 3d object understanding. In CVPR, 2022. Matt Deitke, Ruoshi Liu, Matthew Wallingford, Huong Ngo, Oscar Michel, Aditya Kusupati,Alan Fan, Christian Laforte, Vikram Voleti, Samir Yitzhak Gadre, et al. Objaverse-xl: Auniverse of 10m+ 3d objects. In NeurIPS, 2023. Matt Deitke, Dustin Schwenk, Jordi Salvador, Luca Weihs, Oscar Michel, Eli VanderBilt,Ludwig Schmidt, Kiana Ehsani, Aniruddha Kembhavi, and Ali Farhadi. Objaverse: A universeof annotated 3d objects. In CVPR, 2023. Laura Downs, Anthony Francis, Nate Koenig, Brandon Kinman, Ryan Hickman, Krista Rey-mann, Thomas B McHugh, and Vincent Vanhoucke. Google scanned objects: A high-qualitydataset of 3d scanned household items. In ICRA, 2022.",
  "Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bjrn Ommer.High-resolution image synthesis with latent diffusion models. In CVPR, 2022": "Chitwan Saharia, William Chan, Saurabh Saxena, Lala Li, Jay Whang, Emily L Denton, KamyarGhasemipour, Raphael Gontijo Lopes, Burcu Karagol Ayan, Tim Salimans, et al. Photorealistictext-to-image diffusion models with deep language understanding. In NeurIPS, 2022. Mehdi SM Sajjadi, Henning Meyer, Etienne Pot, Urs Bergmann, Klaus Greff, Noha Radwan,Suhani Vora, Mario Lucic, Daniel Duckworth, Alexey Dosovitskiy, et al. Scene representationtransformer: Geometry-free novel view synthesis through set-latent scene representations. InCVPR, 2022. Kyle Sargent, Zizhang Li, Tanmay Shah, Charles Herrmann, Hong-Xing Yu, Yunzhi Zhang,Eric Ryan Chan, Dmitry Lagun, Li Fei-Fei, Deqing Sun, et al. Zeronvs: Zero-shot 360-degreeview synthesis from a single real image. In CVPR, 2024.",
  "Zhizhuo Zhou and Shubham Tulsiani. Sparsefusion: Distilling view-conditioned diffusion for3d reconstruction. In CVPR, 2023": "Sec. A: Broader social impacts. Sec. B: Analysis of inference time. Sec. C: Implementation details. Sec. D: More detailed comparisons with SPARF . Sec. E: Additional results on three synthetic datasets. Sec. F: More qualitative comparison on camera pose accuracy with SPARF . Sec. G: More qualitative comparison on novel view synthesis with LEAP .",
  "ABroader Impacts": "Our method leverages generative priors from diffusion models, enabling 3D reconstruction and poseestimation in the wild. This may benefit the generation of 3D assets for common users. However, weacknowledge that the web-scale data used for training these diffusion models may include content withpotential negative social impacts, such as biased representations or harmful stereotypes. Therefore,while our approach benefits from the richness of the data, we must remain vigilant about the ethicalimplications and strive to mitigate any adverse effects.",
  "BAnalysis of Inference Time": "For 8-image inference using a single RTX A5000 GPU, one reconstruction with MV-DreamGaussiantakes about 2 minutes to complete, and the render-and-compare for each outlier takes around aminute. Our full pipeline (using RayDiffusion initialization) detected an average of 0.94 outliersper sequence on NAVI, resulting in an inference time of around 9 minutes. We believe additionalengineering efforts can further optimize and reduce inference time.",
  "CImplementation Details": "Finetuning Zero-1-to-3 with 6-DoF Camera Conditioning. To learn the 6-DoF camera condi-tioning for novel view synthesis in the wild, we first initialize the weights of Zero-1-to-3 using theZero123-XL checkpoint and replace the original camera condition with ours. We then onlyfinetune the layers associated with camera conditioning (i.e., the linear projection and cross-attentionlayers) while freezing all other layers. This approach is more efficient than all-layer finetuning. Toalleviate the synthetic data bias learned by the vanilla Zero-1-to-3, we include the training samplesfrom CO3D along with the Objaverse renderings provided by Liu et al. for finetuning.For computational resources, we used 8 V100 GPUs, setting a batch size of 36 per GPU with agradient accumulation of 6. The model was trained for 23,500 iterations, taking ~4 days. Iterative Outlier Removal Details. For the outlier condition specified in inequality 8, we employLPIPS as the reprojection error metric, applying a threshold of 0.05. The reconstruction loopterminates when the average reprojection error reduction falls below this threshold or if the numberof estimated inliers drops below a predefined count. Specifically, we use a threshold of 4 inliers for N= 6 and N = 8, 6 inliers for N = 10, and 12 inliers for N = 16. These iteration counts generally sufficeto handle outliers given the current capabilities of state-of-the-art pose estimation systems. Comparing with Pose-free Methods. To compare with pose-free methods, we follow these steps toobtain their novel view renderings: First, we normalize the ground truth camera poses to match thescale of the coordinate systems used by these methods. Next, we render target images from novelviews using their relative camera poses with respect to the first input image. Additionally, we adjustthe camera intrinsics (focal length and principal point) during inference to align the foreground maskof the rendered images with the ground truth to reduce scale difference.",
  "DMore Detailed Comparisons with SPARF": "In addition to our main text comparing to SPARF for pose estimation, here we also present NovelView Synthesis (NVS) metrics. We report the results in Tab. 5, using DUSt3R pose (N = 6, 8) asinitialization. Due to SPARFs long training time (about 10 hours per instance), we could only include : Expanded Comparison of Pose Accuracy and Novel View Synthesis with SPARF .In addition to the primary metrics presented in the main text, we report Average Rotation Error andImprovement Rate (IR), which indicates the percentage of sequences with reduced pose error. SeeSec. D for further analysis and detailed explanations.",
  "DUSt3R8.7151.679.5/////w/ SPARF18.1757.368.60.5413.420.305915.440.2584w/ SparseAGS5.9981.792.50.9317.020.187417.480.1695": "70 sequences (2 sequences per object) in these two experiments. Notably, for a direct comparison onNVS, we removed backgrounds from the input images, whereas no masking was applied in Tab. 1.This may slightly disadvantage SPARF, as backgrounds provide additional cues for pose registrationand correspondences. The results indicate that SparseAGS outperforms SPARF in pose accuracy and novel view qualityas well. In fact, we found that SPARF can often make the poses worse compared to the (relativelyaccurate) DUSt3R initialization (measured via Improvement Rate that indicates the percentage ofsequences with reduced pose error). This is likely because the correspondences leveraged by SPARFin its optimization are not robust and are susceptible to false matches see for an example. As an attempt to compare novel view quality despite the difference in pose accuracy, we report *PSNRand *LPIPS, which are measured only on the sequences where SPARF improves pose accuracy andfind that even in these, our approach outperforms it. We also observed that while SPARF works wellon novel views close to the input, floaters constantly appear with significant viewpoint changes. Incontrast, our generative prior leads to a more consistent 3D representation.",
  "Though our main focus is real-world data, we apply our approach to three synthetic datasets (GSO,ABO, OmniObject3D) for a complete evaluation of our approach. We use ID-Pose as a baseline,": "which inverses the novel-view-synthesis ability of Zero-1-to-3 for pose estimation and adopts a3-DoF camera parameterization. Here, we also use the vanilla Zero-1-to-3 for multi-view SDS lossto accommodate this camera definition and for fair comparison. We report the results on camerarotation accuracy in Tab. 6. Across these datasets, our approach consistently improves performanceon two metrics, even though ID-Pose uses the same backbone model (vanilla Zero-1-to-3) as we do.These results demonstrate that our approach more effectively leverages the generative priors fromZero-1-to-3, achieving better pose accuracy. Plus, we also show that our method is applicable tosynthetic data, showing strong generalization abilities across different datasets."
}