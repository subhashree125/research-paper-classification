{
  "Abstract": "Modern image generation (IG) models have been shown to capture rich semanticsvaluable for image understanding (IU) tasks. However, the potential of IU mod-els to improve IG performance remains uncharted. We address this issue using atoken-based IG framework, which relies on effective tokenizers to project imagesinto token sequences. Currently, pixel reconstruction (e.g., VQGAN) dominatesthe training objective for image tokenizers. In contrast, our approach adopts thefeature reconstruction objective, where tokenizers are trained by distilling knowl-edge from pretrained IU encoders. Comprehensive comparisons indicate that to-kenizers with strong IU capabilities achieve superior IG performance across avariety of metrics, datasets, tasks, and proposal networks. Notably, VQ-KDCLIPachieves 4.10 FID on ImageNet-1k (IN-1k). Visualization suggests that the su-periority of VQ-KD can be partly attributed to the rich semantics within the VQ-KD codebook. We further introduce a straightforward pipeline to directly trans-form IU encoders into tokenizers, demonstrating exceptional effectiveness for IGtasks. These discoveries may energize further exploration into image tokenizerresearch and inspire the community to reassess the relationship between IU andIG. The code is released at",
  "Introduction": "Image understanding (IU) and image generation (IG) have been the core pursuits of computer visionresearch for a long time. Thanks to the progress in generative models and network ar-chitectures , IG has witnessed remarkable advancements in recent years. These advancementsspurred extensive research on leveraging powerful IG models for IU tasks (). Studies haveshown that IG models can benefit IU tasks in various ways, including data augmentation throughsynthetic data generation , improved representation learning , and utilizingintermediate features from IG models for solving perception tasks . However, the reciprocalquestion remains largely uncharted: how might IU models aid IG tasks? The primary focus of this paper lies in the AutoRegressive (AR) IG framework, which is gainingconsiderable attention for its excellence in generating high-quality images and videos .This framework operates in a two-stage process. The first stage learns a tokenizer to map imagesinto sequences of discrete tokens. Subsequently, the second stage trains a proposal network tomodel the token sequences. As underlined by prior research , the quality of the tokenizerssignificantly influences overall IG performance. Meanwhile, tokenizers and IU encoders adhereto a similar structure as they both aim to map images into latent representations, either discreteor continuous. As a result, the token-based IG framework provides an optimal environment for",
  ": Extensive studies have tried to adopt IG models for IU. However, few attempts have beenmade to use IU models in IG": "investigating the relationship between IU and IG. Through comprehensive studies, we demonstratethat existing IU models from representation learning can be useful in generative models, even if theyare not specifically designed for the IG task. Our study involves training three components within the AR framework: tokenizer, decoder, andproposal network. Traditionally, pixel reconstruction has been the dominant objective for trainingtokenizers, such as VQGAN and FSQ . To the best of our knowledge, we are the first to sys-tematically demonstrate that feature reconstruction (VQ-KD ) achieves better IG performance. 1This approach distills knowledge from pretrained IU encoders to tokenizers. Therefore, the trainingstrategy of the IU encoder is crucial for the performance of the tokenizer. In this regard, we inves-tigate four representative IU encoders: ViT , CLIP , DINO , and MAE . FollowingVQGAN , we train decoders to restore pixel values from discrete tokens, and proposal networks(AR or NAR) that can model the distribution of image tokens. The models are then evaluated usingvarious metrics, including codebook usage, Frechet Inception Distance (FID) , Inception Score(IS) , perplexity (PPL), etc. Initially, we compare the above tokenizers on IN-1k for class-conditional IG. VQ-KD achieves 4.10FIDAR, outperforming VQGAN (15.78 FIDAR) by a large margin. FSQ experiments confirm that thesuperiority of VQ-KD is not solely attributable to the specific quantization operation or high code-book usage. More generally, VQ-KD consistently outperforms across different proposal networks,datasets, and tasks. We analyze VQ-KD from multiple perspectives. By visualizing the codebook, we discover thatcodes from VQ-KD carry more semantics than VQGAN, which makes them easier to model andsubsequently improve the IG quality. Building upon this insight, we propose a straightforwardpipeline to efficiently transform IU encoders into tokenizers, outperforming VQ-KD on the MS-COCO dataset. We also find that tokenizers with weaker IU capabilities require larger proposalnetworks for effective AR modeling and show less robustness to variations in the training images.Finally, we conduct qualitative analysis to present the visual results. In sum, the key insights from our study include the following: 1) This research is the first to demon-strate that IU models can substantially enhance IG through VQ-KD; 2) Tokenizers with strong IUcapabilities consistently outperform conventional VQGAN-based methods across various metrics,datasets, tasks, and network architectures; 3) The VQ-KD codebook encapsulates more semanticsthan VQGAN, contributing to the superiority of VQ-KD in IG.",
  "Generation": ": The token-based IG framework. Solid and dashed lines represent training and inferencepipelines, respectively. During training, the tokenizer T tokenizes an image I into discrete codesz. A proposal network P is trained to model the distribution p(z), while a decoder D learns toreconstruct I. During inference, we sample codes z from P, which guides D to perform generation. Vanilla VQGAN suffers from limitations like low codebook usage, limited semantic representa-tion ability, and the trade-off between modeling efficiency and image quality. To address thesechallenges, researchers have focused on improving the codebook. ViT-VQGAN adopts a ViT-based autoencoder to create more expressive code vectors. SeQ-GAN improves the per-ceptual loss and decoder to balance between semantic compression and detail preservation. SQ-VAE improves VQ-VAE with stochastic quantization and a trainable posterior categorical dis-tribution. VQ-WAE builds upon SQ-VAE by encouraging the discrete representation to be auniform distribution via a Wasserstein distance. HQ-VAE employs random re-initialization ofinactive code vectors. CVQ-VAE selects encoded features as anchors to update dead codes.VQ-KD adopts knowledge distillation instead of image reconstruction as the objective to trainVQ-VAE. LFQ and FSQ adopt bounded scalar quantization techniques from neural com-pression to harness the potential of extra-large codebooks. Furthermore, several works explore the potential of multiple codebooks. VQ-VAE-2 extendsVQ-VAE to a multi-scale hierarchical organization. RQ-VAE and MoVQ aim to representeach feature as a stack of tokens, where RQ-VAE adopts an iterative way to factorize features into aseries of residuals and MoVQ models features across multiple channels via specialized modulation. Token-based Image Generation.Inspired by the success of GPT , VQ-VAE and mostof its derivative works adopt AR transformers to model the token sequence. This approachleverages techniques from text generation to enhance IG performance.However, the decodingtime of AR models scales linearly with the length of the token sequence. To accelerate decoding,MaskGIT introduces a bidirectional transformer, referred to as the NAR proposal network. Given the versatility of token-based modeling, both AR and NAR proposal networks can be easilyextended to conditional IG scenarios. For instance, VQGAN uses a class token as the condition inits AR proposal network for class-conditional IG. With an NAR proposal network, MUSE adoptstext embeddings to predict masked image tokens in Text-to-Image generation.",
  "Token-Based Image Generation": "We start with the two-stage IG framework in Sec. 3.1. Subsequently, Sec. 3.2 details the architectureand training protocol for the tokenizers under consideration. Sec. 3.3 explains the evaluation bench-mark. Sec. 3.4 further outlines our main observations derived from the IN-1k experiments. Lastly,we validate the observations under different settings in Sec. 3.5.",
  ": The architecture and training objective of different image tokenizers": "downsample factor. Let a codebook C be a set of N code vectors {ci}Ni=1 RNd, where eachcode vector ci Rd corresponds to a specific code i. A quantizer Q then maps x into a sequenceof codes z = {zi}Li=1, where L = h w defines the sequence length and zi is an integer thatfalls within the range [1, N]. Let czi denote the code vector that corresponds to code zi. Similarly,C(z) = {czi}Li=1 RLd represents a sequence of code vectors associated with the code sequencez. The encoder E, quantizer Q, and codebook C collectively form an image tokenizer T . The proposal network P models the distribution over z, where the distribution is denoted asp(z). Early proposal networks are implemented as an AR transformer, which sequentially modelsp(zi|z1:i1) and formulates p(z) as hwi=1 p(zi|z1:i1). While the AR transformers can be trainedin parallel, it has to sequentially decode z during inference, which renders it inefficient. Therefore,NAR proposal networks are being prevalent , which typically adopt bidirectional transformers tomodel z. We denote the two types of proposal networks as PAR and PNAR, respectively. Finally, a decoder D maps the code vectors to the pixel space. In training, D takes C(z) as inputand learns to reconstruct the original image I as I RHW 3. In inference, a sequence of codes zis sampled from p(z), translated to C(z), and then fed into D to generate an image I.",
  "where cos(, ) represents cosine similarity": "In this study, we examine VQ-KD using four types of pretrained teachers, including fully-supervised, text-supervised, contrastive, and Masked Image Modeling (MIM). We use VQ-KDCLIPand VQ-KDDINO to represent VQ-KD tokenizers trained with CLIP and DINO teachers,respectively. VQ-KDMAE and VQ-KDViT represent tokenizers trained with MAE and ViT teachers. The latter two teachers are pretrained on IN-1k utilizing a ViT-B/16 architecture.",
  "We detail how we fairly compare different tokenizers for token-based IG here": "For each tokenizer, we train a proposal network P and a decoder D to constitute an image generator.In training, the tokenizer is frozen to ensure fairness. Thus, P and D can be trained in parallel. Wefollow VQGAN to train the AR proposal network and the decoder. The NAR proposal networkis trained following MAGE . Implementation details can be found in Appendix B. Our benchmark adopts various metrics to comprehensively evaluate the image tokenizers. Givenan image tokenizer, we assess the effectiveness of its encoding process by evaluating the codebookusage. To assess the generative capabilities of the image tokenizers, we evaluate IS and FID on the generated images I. We assess the reconstruction capabilities of the image tokenizers byreporting the reconstruction FID (rFID). In addition, we present the PPL scores to appraise the ARmodeling proficiency of the image tokenizers. A low PPL score implies that PAR easily models z.Details about the evaluation metrics can be found in Appendix C.",
  "We evaluate the class-conditional IG performance of VQGAN, FSQ, and VQ-KD tokenizers onIN-1k. The results in Tab. 1 leads to the following observations": "VQ-KD significantly enhances generation quality over VQGAN. Equipped with either AR orNAR proposal networks, VQ-KD tokenizers consistently outperform VQGAN and FSQ, as evi-denced by superior FID and IS metrics. In particular, VQ-KDViT attains an FIDAR of 11.40 and anFIDNAR of 8.45, both less than half of those from VQGAN (24.11 FIDAR and 20.03 FIDNAR). Tab. 2 presents a system-level comparison between VQ-KDCLIP and other class-conditional IG mod-els on IN-1k at a resolution of 256 256. With a 1.4B AR proposal network, VQ-KDCLIP achievesan FID of 4.10, surpassing prior AR, NAR, and several VQ-based diffusion models.",
  "VQ-KDCLIP (ours)AR1.4B4.10": "The superiority of VQ-KD is irrel-evant to the quantization operationand codebook usage. Both VQ-KDCLIPand FSQ record 100.0% codebook usageand 4.96 rFID, but VQ-KDCLIP achieveslower FIDAR and higher ISAR scores.Moreover, VQ-KD proves robustness tohigh codebook usage, with the PPL met-ric of most VQ-KD tokenizers surpass-ing VQGAN. In contrast, FSQ lags be-hind VQGAN in terms of PPL, suggest-ing that the high codebook usage of FSQhinders PAR from modeling the code se-quence z. As demonstrated in Sec. 4.1,this difference is likely due to the richsemantics in the VQ-KD feature map. Tokenizers with stronger semantic understanding tend to deliver superior IG performance.Considering the FID and IS metrics, we find that VQ-KD tokenizers with supervised teachers(CLIP and ViT) consistently surpass those with unsupervised teachers (DINO and MAE). WhileVQ-KDDINO achieves the lowest rFID and PPL, its 13.15 FIDAR is worse than VQ-KDCLIP (11.78)and VQ-KDViT (11.40). This trend can be attributed to the superior capability of supervised modelsin capturing semantics compared to the unsupervised ones.",
  "Further Verification": "The superiority of VQ-KD holds across proposal networks. As seen in Tab. 1, all VQ-KD tok-enizers surpass VQGAN and FSQ in the FIDNAR and ISNAR metrics. In particular, VQ-KDViT scoresthe lowest FIDNAR at 8.45 and VQ-KDCLIP scores the highest ISNAR at 121.33. In contrast, VQ-GAN only achieves an FIDNAR of 20.03 and an ISNAR of 48.30. It is also worth mentioning thatVQ-KDCLIP and VQ-KDViT show slightly better performance than VQ-KDDINO and VQ-KDMAE,further supporting our conclusion that superior semantic understanding in supervised models playsa significant role in enhancing the quality of IG.",
  "VQ-KDCLIP82.25.4872.3129.8011.17VQ-KDViT100.03.70117.1023.5115.49VQ-KDDINO100.02.69129.9317.5511.50VQ-KDMAE100.03.51317.9844.0115.60": "The superiority of VQ-KD holds across datasets. We conduct unconditional IG experiments onthe MS-COCO dataset , which contains images of greater complexity than IN-1k. As demon-strated in Tab. 3, VQ-KDDINO achieves a FIDAR metric of 17.55, significantly outperforming VQ-GAN (38.43) and FSQ (44.64). Since the ViT teacher in VQ-KDViT is pretrained on IN-1k, the rFIDand FIDAR metrics of VQ-KDViT are slightly inferior to VQ-KDDINO. Note that the PPL metric ofVQGAN is misleadingly favorable, due to its low codebook usage (2.4%). The superiority of VQ-KD holds across tasks. Text-to-Image (T2I) experiments are conducted onthe MS-COCO Captions dataset . As shown in Tab. 3, the FIDT2I metric of VQ-KD tokenizersrange from 11.17 to 15.60, while VQGAN and FSQ only achieves 24.11 and 23.36, respectively.",
  "Codebook Visualization": "We delve into the superiority of VQ-KD by visualizing its codebook. From IN-1k, we randomlychoose four categories: golden retriever, pirate ship, valley, and sea anemone. For each imagebelonging to these categories, we deploy t-SNE to project the feature map x and the codevectors C(z) into a two-dimensional space. x is colored according to the image category and C(z)is illustrated in black. As depicted in , the feature space of VQ-KD shows superior organizationcompared to VQGAN. In the VQ-KD feature space, x from the same category are grouped together.This implies that each code in the VQ-KD codebook conveys clear semantics. As codes with similarsemantics are likely to present concurrently in an image, it becomes easier for the proposal networkto model the code sequence z. Conversely, each code in the VQGAN codebook is shared by multiplecategories, resulting in semantics ambiguity. Hence, as illustrated in Tab. 1, the PPL metric forVQGAN is higher than VQ-KD, even though its codebook usage is considerably lower.",
  "Clustering Pretrained Models as Tokenizers": "To better harness the semantics in IU encoders, we propose a straightforward pipeline that transformsIU encoders into tokenizers via feature clustering. Given a pretrained IU model T, we employ itto encode the feature map xT and subsequently utilize a clustering approach to acquire Nclusters. The cluster centroids constitute a codebook C. T remains frozen during training, whichsignificantly accelerates the training process. As shown in Tab. 4, ClusterViT presents 13.40 FIDAR,10.58 FIDT2I, and 0.245 CLIP score on MS-COCO, outperforming all tokenizers in Tab. 3. Thissuggests that pretrained models with simple feature clustering can become good tokenizers. How-ever, the cluster-based tokenizers behave worse in terms of rFID, since they encode little appearancedetail in xT , which is essential for exact reconstruction. As a result, their FID and IS metrics onIN-1k are marginally weaker than those of their VQ-KD counterparts.",
  "ClusterCLIP14.00110.2617.2283.72": "We examine the IG performance of to-kenizers with a large-scale proposal net-work. Following VQGAN, we adopt GPT-2 XL as PAR, which comes with 1.4B pa-rameters. In line with Tab. 1, VQ-KDViTleads with 9.23 FIDAR, while VQ-KDCLIPachieves the highest IS metric at 150.63.Upon comparing with Tab. 1, tokenizerswith stronger IU capabilities exhibit lessimprovement in the FIDAR metric. For in-stance, VQ-KDMAE improves significantlyfrom 26.85 to 17.11, while VQ-KDCLIP re-veals a marginal enhancement from 11.78to 11.27.This suggests that a small-scale PAR is sufficient for tokenizers withstrong IU capabilities, whereas those withweaker IU abilities benefit from a large-scale PAR.",
  "Influence of Strong Data Augmentation": "We investigate the impact of strong data augmentation on the AR modeling performance of tok-enizers. Specifically, we employed a strong random crop, where the crop scale ranges from 0.08 to1.0, introducing greater variability into the training data. As shown in Tab. 5, all tokenizers exhibitworse FIDAR metrics than their counterparts in Tab. 1. Interestingly, tokenizers with stronger IU ca-pabilities demonstrate greater robustness to the strong data augmentation. For instance, VQ-KDViTexperiences a minor increase in FIDAR of just 1.92 (from 11.40 to 13.32), whilst VQ-KDMAE recordsa considerable leap of 9.78 (from 26.85 to 36.63).",
  "ViT-L/144.0380.5610.31146.21ViT-H/143.6097.329.64161.13ViT-G/143.8077.798.70152.71": "We incorporate OpenCLIP models ofvarying sizes as teacher models to trainthe VQ-KD tokenizers. As illustrated inTab. 6, the FIDAR metric sees a reduc-tion from 10.31 to 8.70 when the size ofthe OpenCLIP model escalates from ViT-L/14 to ViT-G/14. Given that larger Open-CLIP models inherently possess strongerIU capabilities, these findings further cor-roborate the superiority of image tokeniz-ers with more potent IU capabilities.",
  "Codebook Size and Dimension": "The size and dimension of the codebook exert a significant influence on the IG performance of to-kenizers . Tab. 7a showcases the performance of VQ-KDCLIP with varying codebook sizes.Large codebooks aid the tokenizers in representing fine-grained semantics, contributing to a consis-tent decrease in the rFID metric from 6.59 to 4.53. The IS metric also shows favor towards largercodebooks, with size 214 leading to the highest IS metric of 131.51. However, choosing the correctcode from a large codebook is harder than from a small codebook, hindering PAR from achievinglower FID scores with larger codebooks. Tab. 7b demonstrates the influence of codebook dimension. High-dimensional codes carry moreinformation but lead to lower codebook usage. As a result, the rFID metric initially drops from 4.96to 4.64, then increases drastically to 6.80. Similar to Tab. 7a, the FID and IS metrics favor differentcodebook dimensions. FID favors 128-dimensional codebooks, where codebook usage is relativelylow. In contrast, IS favors 32-dimensional codebooks, possibly due to a superior diversity.",
  "Qualitative Analysis": "The reconstruction quality of various tokenizers is demonstrated in . Original images aredisplayed in the first row. Regions where VQGAN and FSQ fail to reconstruct are highlighted withred boxes. In contrast, VQ-KD reconstructions are visually more accurate. Since the IU encoder inCluster emphasizes encoding semantics over visual details, Cluster fails to preserve all visual detailsduring reconstruction. Nonetheless, the reconstruction results of Cluster still appear more naturalthan VQGANand FSQ, especially in the highlighted areas. and further illustrates the ARand NAR generation results, showcasing the superior visual performance of VQ-KD and Cluster.",
  "Conclusion": "In this paper, we show that image understanding (IU) models can be useful in image generation(IG). Through comprehensive studies, observe that the VQ-KD tokenizers significantly enhancegeneration quality over VQGAN, irrelevant of the quantization operation and codebook utilization.Within the VQ-KD tokenizers, stronger IU capabilities tends to deliver superior IG performance.Further verification shows that the superiority of VQ-KD holds across proposal networks, datasets,and tasks. Lastly, we analyze VQ-KD from multiple angles, including clustering pretrained modelsas tokenizers, scaling up the proposal network, influence of strong data augmentation, large teachermodels in VQ-KD, and codebook size and dimensions.",
  "Acknowledgement": "This research is supported in part by National Key R&D Program of China (2022ZD0115502),National Natural Science Foundation of China (NO. 62122010, U23B2010), Zhejiang ProvincialNatural Science Foundation of China under Grant No. LDT23F02022F02, Key Research and Devel-opment Program of Zhejiang Province under Grant 2022C01082, Pioneer and Leading GooseR&D Program of Zhejiang (No. 2024C01161).",
  "Yoshua Bengio, Nicholas Leonard, and Aaron Courville. Estimating or Propagating GradientsThrough Stochastic Neurons for Conditional Computation. arXiv preprint arXiv:1308.3432,2013": "Tom B. Brown, Benjamin Mann, Nick Ryder, Melanie Subbiah, Jared Kaplan, Prafulla Dhari-wal, Arvind Neelakantan, Pranav Shyam, Girish Sastry, Amanda Askell, Sandhini Agar-wal, Ariel Herbert-Voss, Gretchen Krueger, Tom Henighan, Rewon Child, Aditya Ramesh,Daniel M. Ziegler, Jeffrey Wu, Clemens Winter, Christopher Hesse, Mark Chen, Eric Sigler,Mateusz Litwin, Scott Gray, Benjamin Chess, Jack Clark, Christopher Berner, Sam McCan-dlish, Alec Radford, Ilya Sutskever, and Dario Amodei. Language Models are Few-Shot Learn-ers. In NeurIPS, 2020.",
  "Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising Diffusion Probabilistic Models. InNeurIPS, 2020": "Drew A. Hudson, Daniel Zoran, Mateusz Malinowski, Andrew K. Lampinen, Andrew Jaegle,James L. McClelland, Loic Matthey, Felix Hill, and Alexander Lerchner. SODA: BottleneckDiffusion Models for Representation Learning. arXiv preprint arXiv:2311.17901, 2023. Gabriel Ilharco, Mitchell Wortsman, Ross Wightman, Cade Gordon, Nicholas Carlini, Ro-han Taori, Achal Dave, Vaishaal Shankar, Hongseok Namkoong, John Miller, Hannaneh Ha-jishirzi, Ali Farhadi, and Ludwig Schmidt. Openclip. 2021.",
  "Diederik P. Kingma and Max Welling. Auto-encoding variational bayes. ICLR, 2014": "Dan Kondratyuk, Lijun Yu, Xiuye Gu, Jose Lezama, Jonathan Huang, Rachel Hornung,Hartwig Adam, Hassan Akbari, Yair Alon, Vighnesh Birodkar, Yong Cheng, Ming-ChangChiu, Josh Dillon, Irfan Essa, Agrim Gupta, Meera Hahn, Anja Hauth, David Hendon, AlonsoMartinez, David Minnen, David Ross, Grant Schindler, Mikhail Sirotenko, Kihyuk Sohn, Kr-ishna Somandepalli, Huisheng Wang, Jimmy Yan, Ming-Hsuan Yang, Xuan Yang, Bryan Sey-bold, and Lu Jiang. VideoPoet: A Large Language Model for Zero-Shot Video Generation.arXiv preprint arXiv:2312.14125, 2023.",
  "Christian Szegedy, Vincent Vanhoucke, Sergey Ioffe, Jonathon Shlens, and Zbigniew Wojna.Rethinking the Inception Architecture for Computer Vision. In CVPR, 2016": "Yuhta Takida, Yukara Ikemiya, Takashi Shibuya, Kazuki Shimada, Woosung Choi, Chieh-HsinLai, Naoki Murata, Toshimitsu Uesaka, Kengo Uchida, Wei-Hsiang Liao, and Yuki Mitsu-fuji. HQ-VAE: Hierarchical Discrete Representation Learning with Variational Bayes. arXivpreprint arXiv:2401.00365, 2023. Yuhta Takida, Takashi Shibuya, Wei Hsiang Liao, Chieh Hsin Lai, Junki Ohmura, Toshim-itsu Uesaka, Naoki Murata, Shusuke Takahashi, Toshiyuki Kumakura, and Yuki Mitsufuji.SQ-VAE: Variational Bayes on Discrete Representation with Self-annealed Stochastic Quanti-zation. Proc. Mach. Learn. Res., 162, 2022.",
  "Jiahui Yu, Xin Li, Jing Yu Koh, Han Zhang, Ruoming Pang, James Qin, Alexander Ku,Yuanzhong Xu, Jason Baldridge, and Yonghui Wu. Vector-Quantized Image Modeling WithImproved Vqgan. In ICLR, 2022": "Jiahui Yu, Yuanzhong Xu, Jing Yu Koh, Thang Luong, Gunjan Baid, Zirui Wang, Vijay Va-sudevan, Alexander Ku, Yinfei Yang, Burcu Karagol Ayan, Ben Hutchinson, Wei Han, ZaranaParekh, Xin Li, Han Zhang, Jason Baldridge, and Yonghui Wu. Scaling Autoregressive Modelsfor Content-Rich Text-to-Image Generation. TMLR, 2022. Lijun Yu, Jose Lezama, Nitesh B. Gundavarapu, Luca Versari, Kihyuk Sohn, David Minnen,Yong Cheng, Agrim Gupta, Xiuye Gu, Alexander G. Hauptmann, Boqing Gong, Ming-HsuanYang, Irfan Essa, David A. Ross, and Lu Jiang. Language Model Beats Diffusion Tokenizeris Key to Visual Generation. arXiv preprint arXiv:2310.05737, 2023. Lili Yu, Bowen Shi, Ramakanth Pasunuru, Benjamin Muller, Olga Golovneva, Tianlu Wang,Arun Babu, Binh Tang, Brian Karrer, Shelly Sheynin, Candace Ross, Adam Polyak, RussellHowes, Vasu Sharma, Puxin Xu, Hovhannes Tamoyan, Oron Ashual, Uriel Singer, Shang-Wen Li, Susan Zhang, Gargi Ghosh, Yaniv Taigman, Maryam Fazel-Zarandi, Asli Celikyilmaz,Luke Zettlemoyer, and Armen Aghajanyan. Scaling Autoregressive Multi-Modal Models: Pre-training and Instruction Tuning. arXiv preprint arXiv:2309.02591, 2023. Manlin Zhang, Jie Wu, Yuxi Ren, Ming Li, Jie Qin, Xuefeng Xiao, Wei Liu, Rui Wang, MinZheng, and Andy J. Ma. DiffusionEngine: Diffusion Model is Scalable Data Engine for ObjectDetection. arXiv preprint arXiv:2309.03893, 2023.",
  "ADatasets": "The experiments are conducted on two image datasets:ImageNet-1k (IN-1k) and MS-COCO . The IN-1k dataset contains approximately 1.28 million training images and 50, 000validation images across 1, 000 diverse categories. The MS-COCO dataset comprises 82, 783 im-ages for training and 40, 504 for validation. Each image is annotated with several captions. For a given image, we first resize its shorter side to s pixels, where s symbolizes the input size.Subsequently, a central crop is performed to derive an image fragment sized s s pixels. Ourdefault augmentation strategy incorporates a random crop (between 0.8 and 1.0) partnered withrandom horizontal flipping.",
  "BImplementation Details": "The image tokenizers under consideration generate token sequences of length 256 upon a 256256input image. All tokenizers remain frozen throughout the training of the decoder and the proposalnetworks. Experiments are performed using 8 A100 80GB GPUs. The approximate training timesfor the VQ-KD tokenizer is around 30 hours, the decoder requires roughly 68 hours, while the ARproposal network and NAR proposal network necessitate about 29 hours and 72 hours, respectively.In total, a single experiment takes approximately 200 hours training. The CNN-based VQGAN tokenizers, with 27.9M parameters, are trained following the identicalprocedure employed for decoders. The codebook dimension of VQGAN is 256. FSQ levels L areset to (8, 8, 5, 5, 5), equivalent to codebook size 8, 000. As per BEiT v2 , an AdamW optimizer is utilized to train the VQ-KD tokenizers. The learningrate warms up linearly to 104 for 25, 000 steps, subsequently decaying to 105 under a cosineschedule. Unless specifically stated, VQ-KD tokenizer is trained with an input size of 224 224and codebook dimension of 32. VQGAN is adopted for training both the decoder and the AR proposal networks. Both D andPAR training span 260, 000 steps with a collective batch size of 96 for IN-1k and 24 for MS-COCO.The decoder is a CNN-based VQGAN decoder, consisting of 40.5M parameters. The decodersutilize the Adam optimizer with learning rates set at 5.4 105, 1 = 0.5, and 2 = 0.9.Their discriminators are also trained via Adam optimizer, employing learning rates of 4.32 104,while keeping the constants identical. Subsequent training of AR proposal networks relies on theAdamW optimizer with 1 = 0.9, 2 = 0.98, and a 0.2 weight decay. An initial learning rateof 104 is set, after which it decays to 0 on a cosine schedule. The AR proposal network is a GPT-2Medium , with 335M parameters. We follow MAGE for training NAR proposal networks. PNAR is trained for 300 epochs with acollective batch size of 512 on ImageNet-1k. NAR proposal networks are trained with the AdamWoptimizer with 1 = 0.9, 2 = 0.95, and a 0.05 weight decay. The learning rate warms up linearlyto 3 104 throughout 10 epochs before decaying to 0 following a cosine schedule. The encoderof PNAR is a ViT-B/16, with 86M parameters.",
  "CEvaluation": "Codebook usage is defined as the proportion of codes from the codebook that have been used atleast once when encoding the dataset. A low value for codebook usage might be an indication of thecodebook collapse issue. IS provides a measure of both the fidelity and diversity of I. However, IS significantly relies on theclassification capabilities of a pretrained Inception-v3 model . Complex images are likely to bemisinterpreted as lacking fidelity by IS. Therefore, we limit the use of IS to IN-1k experiments only. To circumvent the limitations of IS, FID computes the statistical distance in the Inception-v3 featurespace between the real images I and the generated images I. A lower FID score indicates that I isstatistically similar to I. rFID is defined as the FID between I and their reconstructed counterparts I. Obtaining a low rFIDscore requires that the image tokenizer encode sufficient visual details within the codes C(z) toenable accurate reconstruction by the decoder.",
  "The answer NA means that the paper has no limitation while the answer No meansthat the paper has limitations, but those are not discussed in the paper": "The authors are encouraged to create a separate Limitations section in their paper. The paper should point out any strong assumptions and how robust the results are toviolations of these assumptions (e.g., independence assumptions, noiseless settings,model well-specification, asymptotic approximations only holding locally). The au-thors should reflect on how these assumptions might be violated in practice and whatthe implications would be. The authors should reflect on the scope of the claims made, e.g., if the approach wasonly tested on a few datasets or with a few runs. In general, empirical results oftendepend on implicit assumptions, which should be articulated. The authors should reflect on the factors that influence the performance of the ap-proach. For example, a facial recognition algorithm may perform poorly when imageresolution is low or images are taken in low lighting. Or a speech-to-text system mightnot be used reliably to provide closed captions for online lectures because it fails tohandle technical jargon.",
  "If applicable, the authors should discuss possible limitations of their approach to ad-dress problems of privacy and fairness": "While the authors might fear that complete honesty about limitations might be used byreviewers as grounds for rejection, a worse outcome might be that reviewers discoverlimitations that arent acknowledged in the paper. The authors should use their bestjudgment and recognize that individual actions in favor of transparency play an impor-tant role in developing norms that preserve the integrity of the community. Reviewerswill be specifically instructed to not penalize honesty concerning limitations.",
  "If the contribution is a dataset and/or model, the authors should describe the stepstaken to make their results reproducible or verifiable": "Depending on the contribution, reproducibility can be accomplished in various ways.For example, if the contribution is a novel architecture, describing the architecturefully might suffice, or if the contribution is a specific model and empirical evaluation,it may be necessary to either make it possible for others to replicate the model withthe same dataset, or provide access to the model. In general. releasing code and datais often one good way to accomplish this, but reproducibility can also be provided viadetailed instructions for how to replicate the results, access to a hosted model (e.g., inthe case of a large language model), releasing of a model checkpoint, or other meansthat are appropriate to the research performed. While NeurIPS does not require releasing code, the conference does require all sub-missions to provide some reasonable avenue for reproducibility, which may dependon the nature of the contribution. For example(a) If the contribution is primarily a new algorithm, the paper should make it clearhow to reproduce that algorithm.",
  "(b) If the contribution is primarily a new model architecture, the paper should describethe architecture clearly and fully": "(c) If the contribution is a new model (e.g., a large language model), then there shouldeither be a way to access this model for reproducing the results or a way to re-produce the model (e.g., with an open-source dataset or instructions for how toconstruct the dataset). (d) We recognize that reproducibility may be tricky in some cases, in which case au-thors are welcome to describe the particular way they provide for reproducibility.In the case of closed-source models, it may be that access to the model is limited insome way (e.g., to registered users), but it should be possible for other researchersto have some path to reproducing or verifying the results.",
  ". Experimental Setting/Details": "Question: Does the paper specify all the training and test details (e.g., data splits, hyper-parameters, how they were chosen, type of optimizer, etc.) necessary to understand theresults?Answer: [Yes]Justification: Implementation details are illustrated in appendix B.Guidelines: The answer NA means that the paper does not include experiments. The experimental setting should be presented in the core of the paper to a level ofdetail that is necessary to appreciate the results and make sense of them.",
  ". Experiment Statistical Significance": "Question: Does the paper report error bars suitably and correctly defined or other appropri-ate information about the statistical significance of the experiments?Answer: [No]Justification: Given the massive amount of experiments conducted in this paper, providingerror bars would be computationally prohibitive.Guidelines: The answer NA means that the paper does not include experiments. The authors should answer Yes if the results are accompanied by error bars, confi-dence intervals, or statistical significance tests, at least for the experiments that supportthe main claims of the paper. The factors of variability that the error bars are capturing should be clearly stated (forexample, train/test split, initialization, random drawing of some parameter, or overallrun with given experimental conditions).",
  ". Experiments Compute Resources": "Question: For each experiment, does the paper provide sufficient information on the com-puter resources (type of compute workers, memory, time of execution) needed to reproducethe experiments?Answer: [Yes]Justification: Compute resources are described in appendix B.Guidelines: The answer NA means that the paper does not include experiments. The paper should indicate the type of compute workers CPU or GPU, internal cluster,or cloud provider, including relevant memory and storage.",
  ". Broader Impacts": "Question: Does the paper discuss both potential positive societal impacts and negativesocietal impacts of the work performed?Answer: [Yes]Justification: Potential societal impacts of the work are discussed in appendix E.Guidelines: The answer NA means that there is no societal impact of the work performed. If the authors answer NA or No, they should explain why their work has no societalimpact or why the paper does not address societal impact. Examples of negative societal impacts include potential malicious or unintended uses(e.g., disinformation, generating fake profiles, surveillance), fairness considerations(e.g., deployment of technologies that could make decisions that unfairly impact spe-cific groups), privacy considerations, and security considerations. The conference expects that many papers will be foundational research and not tiedto particular applications, let alone deployments. However, if there is a direct path toany negative applications, the authors should point it out. For example, it is legitimateto point out that an improvement in the quality of generative models could be used togenerate deepfakes for disinformation. On the other hand, it is not needed to point outthat a generic algorithm for optimizing neural networks could enable people to trainmodels that generate Deepfakes faster. The authors should consider possible harms that could arise when the technology isbeing used as intended and functioning correctly, harms that could arise when thetechnology is being used as intended but gives incorrect results, and harms followingfrom (intentional or unintentional) misuse of the technology. If there are negative societal impacts, the authors could also discuss possible mitiga-tion strategies (e.g., gated release of models, providing defenses in addition to attacks,mechanisms for monitoring misuse, mechanisms to monitor how a system learns fromfeedback over time, improving the efficiency and accessibility of ML).",
  "Guidelines:": "The answer NA means that the paper does not use existing assets. The authors should cite the original paper that produced the code package or dataset. The authors should state which version of the asset is used and, if possible, include aURL. The name of the license (e.g., CC-BY 4.0) should be included for each asset. For scraped data from a particular source (e.g., website), the copyright and terms ofservice of that source should be provided. If assets are released, the license, copyright information, and terms of use in the pack-age should be provided. For popular datasets, paperswithcode.com/datasets hascurated licenses for some datasets. Their licensing guide can help determine the li-cense of a dataset.",
  "According to the NeurIPS Code of Ethics, workers involved in data collection, cura-tion, or other labor should be paid at least the minimum wage in the country of thedata collector": "15. Institutional Review Board (IRB) Approvals or Equivalent for Research with HumanSubjectsQuestion: Does the paper describe potential risks incurred by study participants, whethersuch risks were disclosed to the subjects, and whether Institutional Review Board (IRB)approvals (or an equivalent approval/review based on the requirements of your country orinstitution) were obtained?Answer: [NA]Justification: The paper does not involve crowdsourcing nor research with human subjects.Guidelines:",
  "The answer NA means that the paper does not involve crowdsourcing nor researchwith human subjects": "Depending on the country in which research is conducted, IRB approval (or equiva-lent) may be required for any human subjects research. If you obtained IRB approval,you should clearly state this in the paper. We recognize that the procedures for this may vary significantly between institutionsand locations, and we expect authors to adhere to the NeurIPS Code of Ethics and theguidelines for their institution."
}