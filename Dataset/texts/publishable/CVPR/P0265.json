{
  "Bo LiUChicago & UIUC": "AbstractWe present ChatScene, a Large Language Model (LLM)-based agent that leverages the capabilities of LLMs to gener-ate safety-critical scenarios for autonomous vehicles. Givenunstructured language instructions, the agent first generatestextually described traffic scenarios using LLMs. These sce-nario descriptions are subsequently broken down into severalsub-descriptions for specified details such as behaviors andlocations of vehicles. The agent then distinctively transformsthe textually described sub-scenarios into domain-specificlanguages, which then generate actual code for predictionand control in simulators, facilitating the creation of diverseand complex scenarios within the CARLA simulation envi-ronment. A key part of our agent is a comprehensive knowl-edge retrieval component, which efficiently translates spe-cific textual descriptions into corresponding domain-specificcode snippets by training a knowledge database contain-ing the scenario description and code pairs. Extensive ex-perimental results underscore the efficacy of ChatScenein improving the safety of autonomous vehicles. For in-stance, the scenarios generated by ChatScene show a15% increase in collision rates compared to state-of-the-art baselines when tested against different reinforcementlearning-based ego vehicles. Furthermore, we show thatby using our generated safety-critical scenarios to fine-tunedifferent RL-based autonomous driving models, they canachieve a 9% reduction in collision rates, surpassing cur-rent SOTA methods. ChatScene effectively bridges thegap between textual descriptions of traffic scenarios andpractical CARLA simulations, providing a unified way toconveniently generate safety-critical scenarios for safetytesting and improvement for AVs. The code is availableat",
  ". Introduction": "Although machine learning (ML), particularly deep neu-ral networks (DNNs), has shown remarkable performanceacross a myriad of applications such as image recogni-tion , natural language processing , and health- care , they also exhibit a surprising susceptibility tosubtle and adversarial perturbations. These perturbationscan yield erroneous predictions , posing potentiallyfatal consequences in safety-critical applications like Au-tonomous Driving (AD) . For example, by attachingseemingly innocuous stickers to a Stop Sign in the real world,an autonomous vehicle (AV) can readily misinterpret it as aSpeed Limit 80 Sign , which can lead to some hazardousdriving behaviors and potential accidents.Therefore, given the potential for such adversarial ma-nipulations, it is crucial that AVs undergo exhaustive test-ing across all conceivable safety-critical scenarios to ensuretheir safe and reliable operation before large-scale deploy-ment. However, traditional real-world testing is not onlyprohibitively expensive but also demands extensive data col-lection, often requiring vehicles to be driven hundreds ofmillions of miles to accumulate sufficient safety-critical sce-narios. Consequently, the generation of simulated scenariosfor testing has been increasingly adopted as a cost-effectiveand efficient alternative.For instance, Wachi et al. employ multi-agent rein-forcement learning to train adversarial vehicles, aiming toexpose the vulnerabilities in rule-based driving algorithmswithin the CARLA platform . Chen et al. insteadfocus on generating adversarial scenarios for lane-changingmaneuvers using ensemble deep reinforcement learning tech-niques, and Feng et al. further offer a highway-drivingsimulation that incorporates further scenarios such as CutFollowing and Cut-in. Nevertheless, a key challenge remains:these methods are limited to only a narrow range of safety-critical scenarios, which may still fall short of encompassingthe complexity of real-world situations.Meanwhile, the emergence of LLMs, trained with vastamounts of data from the internet and encompassing billionsof parameters, has demonstrated a remarkable aptitude forcapturing human knowledge . These modelshave established themselves as effective tools for the ex-traction of knowledge. For instance, LLMs begin to playa pivotal role in pedagogical processes , and they arebecoming instrumental in synthesizing clinical knowledge to",
  ". Overview of our LLM-based knowledge-enabled safety-critical scenario generation agent ChatScene": "support medical practice . The legal field also benefitsfrom LLMs, with tools like Chatlaw interpreting legalregulations and judicial decisions, while in the financial sec-tor, models such as BloombergGPT are being harnessedto decode complex economic data.This naturally leads to several compelling questions: Isit possible to build an LLM-based agent that automaticallygenerates safety-critical scenarios, capturing a broader andmore intricate array of descriptions? Moreover, can theagent automatically convert these textual descriptions intoreal simulations to bolster the diversity and comprehensive-ness of scenarios available for AV testing?Addressing the initial query of generating safety-criticaldriving scenario descriptions vian LLM agent is a processthat is relatively straightforward; one can simply prompt themodel with requests such as, Provide some descriptionsfor safety-critical driving scenarios. While for the sec-ond question, the recent advancements of Scenic , adomain-specific probabilistic programming language, allowfor the scripting of scenes within CARLA using syntaxakin to Python, opens up two promising research directions:first, the possibility of guiding LLMs to autonomously scriptin Scenic, and second, the potential for finetuning a language-to-code model, such as CodeGen , to craft Scenic codederived from textual scenario descriptions. Nonetheless,these methods often encounter obstacles, such as the genera-tion of non-executable code or calls to APIs that do not existwithin Scenic, primarily due to the scarcity of available codeexamples for training.To address the challenges of direct code generation bylarge language models (LLMs), we instead adopt an indi-rect approach that leverages LLMs to first curate a retrievaldatabase comprising Scenic code snippets. These snippetsencapsulate fundamental elements of driving scenarios, suchas adversarial behaviors of surrounding vehicles, road ge- ometries, etc. The details of the construction process willbe introduced in .2. Then, during the evaluationphase, as illustrated in , our agent ChatScene mapsthe description into the corresponding simulation through afour-step process:",
  "iii. ChatScene then encodes these characteristics into em-beddings to retrieve the corresponding Scenic code snip-pets from our pre-constructed database": "iv. Finally, the retrieved snippets are assembled into a com-plete and executable Scenic script, which is capableof enacting the described scenario within the CARLAsimulation environment.For a further quantitative analysis, we utilize ChatSceneto produce a range of text descriptions for safety-criticalscenarios. These narratives are then processed by our frame-work to generate simulations, which are then evaluated usingthe Safebench platform . Within this platform, the egovehicle is controlled by a model trained under reinforce-ment learning, while our scenario generation agent aims tomanage the adversarial objects (e.g., pedestrian, cyclist, orvehicle) surrounding it. Some examples of text-to-simulationmappings are provided in , illustrating the practicalapplication of our framework.Our contributions can be concluded as: We introduce ChatScene, a novel LLM-based agentcapable of generating safety-critical scenarios by firstproviding textual descriptions and then carefully trans-forming them into executable simulations in CARLA",
  "via Scenic programming language": "An expansive retrieval database of Scenic code snip-pets has been developed. It catalogs diverse adversar-ial behaviors and traffic configurations, utilizing therich knowledge stored in LLMs, which significantlyaugments the variety and critical nature of the drivingscenarios generated. In Safebenchs evaluation of eight CARLA Challengetraffic scenarios , our methods adversarial scenesincreased the collision rate by 15% compared to fourstate-of-the-art (SOTA) baselines, demonstrating thesuperior safety-critical capabilities of our framework. Subsequent experiments involving the finetuning of theego vehicle with a subset of our generated adversarialscenarios, followed by comparative evaluations againstboth the remaining scenarios we created and those fromestablished baselines, demonstrated an additional re-duction in average collision rates by at least 9%. Our framework, in conjunction with the retrievaldatabase, not only facilitates direct code generationbut also holds potential for future adaptations in mul-timodal conversions, including text, image, and video,specifically for autonomous driving applications.2. Related WorkGeneration of safety-critical scenarios.The generationof safety-critical scenarios for autonomous vehicles (AVs)generally falls into three main categories. The first is data-driven generation , which relies on real-world data to guide vehicle behavior. While realistic, thisapproach usually suffers from the scarcity and high cost ofgathering pertinent data and the infrequency of genuinelyrisky scenarios within the collected dataset since the safety-critical scenarios usually lie on the long-tail distribution ofthe real-world scenario distribution. The second category, ad-versarial generation , intentionally con-ducts malicious attacks against the AVs by manipulatingthe behaviors of surrounding vehicles, such as pedestriansor other vehicles. While effective at creating challengingenvironments, this method may be computationally ineffi- cient and may lack diversity in the generated scenarios. Thethird approach, knowledge-based generation ,uses predefined traffic rules or physical constraints to createscenarios. Although it is more systematic and can providemore diverse scenarios, this approach can be challengingto implement, as encoding these rules into simulations canbe complex. Besides, the manually created rules are hardto cover all safety-critical situations, resulting in less riskyscenarios since they typically do not incorporate adversarialattacks or unexpected behaviors that are crucial for testingthe robustness of AVs.Our work, instead, synergies the advantages of the lattertwo categories by integrating diverse real-world knowledgerules sourced from LLMs while using Scenic to adversariallyoptimize parameters of the surrounding environment, suchas the speed of nearby pedestrians and vehicles, to enhancethe risk and complexity of the generated scenarios. LLMs for autonomous driving.LLMs have increasinglybeen explored for their potential in autonomous driving,particularly in their ability to interpret complex scenarios ina way that resembles human understanding. For instance,Fu et al. utilize GPT-3.5 in a reasoning and actionprompt style to generate API-wrapped text descriptionsof decisions made in response to observations in a highwayenvironment. On the other hand, Xu et al. propose toleverage a multimodal language model to interpret drivingscenarios and provide corresponding descriptions with theprediction for the next control signals based on the drivingvideo frames and human questions. Additionally, Zhong etal. introduces the use of the LLM to transform a usersquery about safety-critical scenarios into the correspondingdifferentiable loss function of a diffusion model to generatethe query-compliant trajectories.Our work differs from the first two studies in that wefocus primarily on the generation of safety-critical scenariosrather than using LLMs to provide descriptions or actionsfor specific driving situations. Besides, in contrast to the lastwork, our work mainly aims to create more realistic safety-critical scenario generations on a platform like CARLA and use the corresponding driving record to train or test the egovehicle controlled trained with reinforcement learning.3. MethodologyIn this section, we delineate the approach of ChatScene,an LLM agent, for the generation of safety-critical scenariosthrough the application of Scenic programming languageand a targeted retrieval mechanism. We begin with a concisemotivation, including definitions of key terminologies. Then,we focus on the construction of the retrieval database, andfollowing this, we explain the process of converting textdescriptions of safety-critical scenarios, sourced from eitherhumans or LLMs, into Scenic code. Specifically, we willbegin by breaking down the original text description into sub-descriptions for each component (e.g., adversarial behavior).Next, we encode these components into vectors, which willserve as keys to retrieve the corresponding snippets from ourretrieval database. These snippets will then be assembled toform a comprehensive Scenic script, which is then executedto run simulations within the CARLA environment.3.1. Motivation and NotationsWe notice that the Scenic programming languageis highly effective and flexible for rendering simulations inCARLA. A pertinent question naturally arises: Can we di-rectly prompt large language models like ChatGPT to writecorresponding Scenic code based on descriptions of safety-critical scenarios? Although this approach seems promis-ing, it often leads to issues like generating non-compilablecode or using APIs not present in the codebase. This mightbe due to the scarcity of Scenic examples for training theLLMs and the complexity and breadth of code generation,which can induce hallucinations in the model.However, upon examining Scenic code, we find that itcan generally be segmented into four components as shownin : (1) default map and model settings, typicallyfixed; (2) definition of adversarial behavior for surroundingvehicles; (3) the road geometry, which also influences theego vehicles spawn point; and (4) the relative spawn posi-tion of surrounding vehicles to the ego vehicle. Notably, theego vehicle is controlled by models trained via reinforcementlearning, so we dont need to define its behavior here.Based on this, we propose a more efficient method: col-lecting a database of code snippets for the last three com-ponents with corresponding descriptions instead. This ap-proach would likely reduce hallucination and allow for flexi-ble assembly of these snippets into a complete Scenic code.Then, during evaluation, for input descriptions like The egovehicle is driving on a straight road, and the car in frontbrakes suddenly as the ego approaches, our LLM agent canfirst decompose it into the sub-descriptions for each com-ponent via demonstrations easily, such as Behavior: theadversarial car suddenly brakes as the ego approaches forthe behavior component. Then, our agent will do the corre-sponding retrieval and assemble the relevant code snippets based on the embedding of these descriptions to generatecomprehensive Scenic code for simulation in CARLA. Toprovide a clearer understanding of our methodology, wedefine the following foundational concepts:Route.A route is essentially a sequence of waypoints,each marking a specific location that the vehicle is intendedto pass through during its trajectory. In the CARLA simu-lation environment, this route represents a pre-determinedpath for the ego vehicle that includes both the starting andthe terminal points.Base Scenario.A base scenario is utilized to conceptu-alize a high-level adversarial driving situation. It providesan abstract framework, such as a straight obstacle aheadof the ego vehicle, without delving into specifics regardingthe identity or adversarial behavior of the obstacle. Thisabstraction allows for a generalized approach to categorizingvarious driving challenges.Scenario.In contrast, a scenario builds upon the basescenario by infusing it with detailed attributes concerningthe obstacle and its specific behaviors. For instance, the pre-vious example The ego vehicle is driving on a straight road,and the car in front brakes suddenly as the ego approachesis a scenario derived from the foundational base scenarioas shown above, which enriches the initial description byintroducing specific dynamics of the adversarial situation.Scene.A scene represents the practical instantiation ofa scenario, detailing the specifics of an adversarial event.This includes the route of the ego vehicle, the character-istics of the surrounding adversarial vehicle (e.g., vehicletype), and environmental context (e.g., buildings or trafficsignals). Furthermore, it specifies parameters such as thepositions, velocities, and initial placements of the agentsinvolved. Notably, Scenic actually acts as a probabilisticprogramming language as shown in ; it will samplethe parameters like ADV SPEED before running the corre-sponding simulation in CARLA. This capability enables asingle Scenic script to produce various distinct scenes forthe same scenario by varying parameter values like speedwithin a predefined range.3.2. Construction of the Retrieval DatabaseThis section details our methodology for building the re-trieval database, emphasizing the systematic collection andintegration of Scenic code snippets.Collection of Snippets.Our snippet collection processinitiates with sourcing initial examples from the Scenicrepository1. These examples, covering a range of adver-sarial behaviors and geometric configurations (e.g., straightroads, intersections), are then decomposed manually intodescription-snippet pairs. Utilizing this initial combineddataset, we engage LLMs for few-shot learning to gener-ate more diverse snippets. This iterative process involves",
  ". An example for the snippets in Scenic for a given safety-critical scenario description": "generating snippets for different components, including ad-versarial behaviors, geometric layouts, and relative spawnpoints. Each newly generated snippet is rigorously evaluatedand corrected manually for its compatibility and compilabil-ity within Scenics varying API contexts (such as differencesacross agent types like pedestrians, motorcycles, and cars).In this work, we consistently use GPT-42 to collect our snip-pets. Some examples of the prompts employed to generatethese new snippets are provided in Appendix A.1.DatabaseConstructionandQueryOptimization.For every description-snippet pair,we continue toprompt GPT-4 to generate several more distinct rephrasingsof each description, maintaining the original snippet ineach pair.This approach is designed to enhance theaccuracy of retrieval. The descriptions are then encodedusing Sentence-T53 , and the database constructionand querying processes are facilitated by faiss .We construct and manage the databases for differentcomponents, i.e., adversarial behavior, road geometry, andrelative spawn positions, independently.3.3. Safety-Critical Scenario GenerationUpon the completion of the retrieval database, our LLMagent, ChatScene can now first generate a variety of de-scriptions for safety-critical scenarios and then convert theminto the corresponding simulation via Scenic code during theevaluation. The detailed process is shown as follows: i. Instruct the LLM agent: We start by instructing ourLLM agent to generate potential adversarial scene de-scriptions. An example of such a query is: Provide adescription of a safety-critical scenario where the egovehicle is driving on a straight road. ii. Description Extraction for Each Component: Toguarantee structured output for each scenario compo-nent, our LLM agent will then automatically employa set of few-shot examples to guide it in generating organized sub-descriptions, which are formatted as Be-havior: ...\\n Geometry: ...\\n Spawn Position: ... asillustrated in (a). Consequently, the agent canthen efficiently extract the corresponding descriptionsfor each component using regular expressions. Theprompts for the extraction are detailed in Appendix A.2. iii. Retrieving Scenic Code Snippets: After extractingdescriptions, our agent will utilize the Sentence-T5model to encode them. The embeddings will serve askeys for retrieving the relevant Scenic code snippets foreach component, as shown in (b) and (c). iv. Scenario Rendering and Evaluation: The Sceniccode snippets are then assembled into a complete scriptand executed to run simulations in CARLA as demon-strated in (d). More text and simulation pairsare shown in . Then, different parameter val-ues, such as ADV SPEED set between andADV DISTANCE between , will be sampledfor collecting multiple scenes. The comprehensive de-tails such as position, speed, acceleration, and collisioninformation for all vechiles in each frame. v. Refinement of Collision-Prone Parameters: To en-hance the generation of the scenes that lead to the col-lision of the ego vehicle, the sampling ranges will bedynamically adjusted based on the information gainedfrom previously collected data. Specifically, we willkeep recording the parameters associated with collisioncases and simply assume that parameters leading tocollisions roughly align with a Gaussian distributionN(, 2). Consequently, the sampling range will thenbe adjusted to [, +] for subsequent simulations.This iterative strategy has proven effective in increas-ing the probability of generating more collision-pronescenes. In the end, the most adversarially significantscenes will be kept for testing on each scenario.",
  "The complete set of simulations along with comprehen-sive statistics are released for all involved vehicles. This datawill support future research in the bidirectional conversions": ". Statistics of scenario generation on selected scenarios. We report collision rate (CR), the overall score (OS), and the averagedisplacement error (ADE) to measure the effectiveness of different scenario generation algorithms; we test three differently trained egovehicles, and the record herein represent the mean performance across these agents with all the scenes for the same base scenario. The lastcolumn shows the average over all the base scenarios, with bold numbers indicating the best performance among the 5 generation algorithms.LC: Learning-to-collide, AS: AdvSim, CS: Carla Scenario Generator, AT: Adversarial Trajectory Optimization, /: higher/lower the better.",
  "ChatScene4.3984.0635.7067.3833.8483.7403.6133.7844.567": "among text, image, and video for autonomous driving.4. ExperimentIn this section, we conduct a quantitative evaluation of ouragent in generating safety-critical scenarios. Our assessmentis twofold: First, we test the actual safety-critical nature ofthe scenes produced by our agent, specifically their potentialto provoke collisions involving the ego vehicle. Second,we evaluate the performance of the ego vehicle, which hasundergone adversarial retraining using scenarios generatedby our agent, to ascertain whether these scenarios contributesignificantly to enhancing the robustness of ego vehicle.4.1. SetupIn this work, to simulate autonomous driving, we control theego vehicle with a reinforcement learning-based model andemploy Scenic to guide the surrounding adversarial vehicle.Besides, for a more flexible and convenient implementation,we integrate Scenic into the Safebench platform andconduct all the evaluations on Safebench.AD algorithms.Safebench provides three prominent deepRL methodologies to train our ego vehicle. These are: Prox-imal Policy Optimization (PPO) , an on-policy stochas-tic algorithm; Soft Actor-Critic (SAC) , an off-policystochastic technique; and Twin Delayed Deep Determinis-tic Policy Gradient (TD3) , a deterministic off-policyapproach. The observation of the ego encompasses fouressential dimensions: the distance to the next waypoint, lon-gitudinal speed, angular speed, and a detection signal forfront-facing vehicles.Baselines.We employ two main categories of scenario-generation techniques for evaluation:Adversary-based and Knowledge-based. Adversary-based approaches, likeLearning-to-collide (LC) and AdvSim (AS) , chal-lenge AD systems by altering initial poses of agents or per-turbing trajectories. Knowledge-based approaches, suchas Carla Scenario Generator (CS) and AdversarialTrajectory Optimization (AT) , focus on scenarios ad-hering to real-world traffic rules and physical principles.Metrics.Evaluation under Safebench encompasses threecategories: Safety level (including collision rate and adher-ence to traffic signals), Functionality level (route adherenceand completion), and Etiquette level (smoothness of driv-ing and lane discipline). Our focus primarily lies on thecollision rate and a composite overall score (OS), with thelatter aggregating all metrics, further details are deferredto Appendix C.1. We also leverage the average displace-ment error (ADE) to measure scene diversity generated byeach algorithm. Specifically, it is calculated as the averageof the mean of the Euclidean distances between the positionsof the adversarial objects at each corresponding time stepacross the trajectories for each pair of scenes generated forthe same scenario.4.2. Safety-Critical Scenarios GenerationThis section explores the capabilities of our agent in gen-erating the most adversarial safety-critical scenarios whencompared to the baselines. Experiment Setup.Following Safebench , we lever-age a surrogate ego vehicle trained using SAC to choosethe most challenging scenes generated by various methods.Following this, we then evaluate these selected adversarialscenes using three distinct ego vehicles trained via SAC, . Diagnostic Report: This report presents the average test results conducted using three distinct ego vehicles across eight basescenarios. These tests are evaluated on three different performance levels for each scenario generation algorithm, offering a comprehensiveoverview of agent efficacy. CR: collision rate, RR: frequency of running red lights, SS: frequency of running stop signs, OR: average distancedriven out of road, RF: route following stability, Comp: average percentage of route completion, TS: average time spent to complete theroute, ACC: average acceleration, YV: average yaw velocity, LI: frequency of lane invasion, OS: overall score, /: higher/lower the better.",
  "PPO, and TD3. This assesses the effectiveness and gener-ality of different algorithms for generating safety-criticalscenarios": "Base Scenario and Route.We adopt eight key base trafficscenarios from the Carla Challenge , whose texts aresummarized from the NHTSA report , each with 10diverse routes for the ego vehicle. These base scenariosare: Straight Obstacle, Turning Obstacle, Lane ChangingVehicle, Passing Red-light Running, Unprotected Left-turn,Right-turn, and Crossing Negotiation. Scenario.In contrast to the baseline methods, which offeronly one single scenario per base scenario, our approachdemonstrates greater diversity. We consistently instruct ouragent to generate five unique descriptions of scenarios undereach base scenario, which are then mapped into correspond-ing Scenic scripts for simulation. Detailed descriptions ofthese scenarios can be found in Appendix B. Scene.For each route and scenario, Safebench selects ap-proximately 9 to 10 of the most adversarial scenes based ontesting with a SAC-trained surrogate model on each route,resulting in about 98 to 100 scenes for each base scenario.For our approach, the agent first generate 50 simulations perscenario and route, updating parameter ranges every 10 steps.From these, our agent then selects the two simulations thatnot only lead to a collision but also yield the lowest overallscore using the same surrogate model. Consequently, thismethod also yields a total of 100 scenes per base scenario,calculated as 2 10 5 = 100. We report the averageperformance of all the selected scenes tested on the ego ve-hicles trained with three different AD algorithms for eachbase scenario. Evaluation Results:Our experimental results, detailed in, provide a thorough evaluation of various scenariogeneration algorithms. These are assessed based on collisionrate (CR), overall score (OS), and average displacementerror (ADE), with metrics derived from testing three distinctego vehicle training paradigms across various base trafficscenarios. Notably, our agent, ChatScene, consistently outperforms existing benchmarks across all metrics for eachbase scenario.Specifically, ChatScene significantly enhances the gen-eration of safety-critical scenarios, evidenced by a marked15% increase in collision rates over the most competitiveexisting baselines. This substantial improvement in scenariocomplexity effectively challenges and evaluates autonomousdriving systems in more adversarial environments.Regarding overall performance, our agent achieves a sig-nificant relative reduction in the overall score, amounting to16% more compared to the leading baseline. This reductionunderscores the heightened complexity and challenge pre-sented by our scenarios. Additionally, a detailed diagnosticreport for the average performance on the overall eight basescenarios is provided in . This report provides a de-tailed breakdown of the overall score across three distinctlevels, encompassing a broader range of evaluations beyondthe collision rate. Notably, our generated scenarios consid-erably diminish the average route completion rate, and theycompel the ego vehicle to maintain higher average accelera-tion and yaw velocity, alongside frequent lane invasions, toavoid collisions with surrounding adversarial objects. Thesedynamics further demonstrate the effectiveness and safety-critical nature of our agent, establishing its potential to createscenarios that rigorously test autonomous driving systems.Moreover, ChatScenes superiority in scenario diversityis also confirmed by achieving the highest score in ADEmetrics. This outcome, indicative of the variability in adver-sarial objects trajectories, highlights the comprehensive anddiverse nature of our generation approach, which is essentialfor a thorough assessment of autonomous driving systems.In conclusion, our results demonstrate that ChatScenenot only elevates collision rates across all base traffic sce-narios but also significantly lowers the overall performancescores of ego vehicles. The enhanced scenario diversity alsoreinforces the effectiveness of our approach. This compre-hensive performance underlines the potential of our agentto set new benchmarks in the evaluation and testing of au-tonomous driving systems. Detailed performance for eachego vehicle trained with different AD algorithms is providedin Appendix C.2. . Evaluating ego vehicle Performance Post-Finetuning: We assess the effectiveness of various scenario generation methods basedon two key metrics: collision rate (CR) and overall score (OS). For this evaluation, we finetuned the surrogate SAC-trained ego vehicleusing the previously selected adversarial scenes for the first eight routes. The reported data represents the mean performance across thescenes from the last two routes, as provided by all methods. The PP is shorted for Pre Pretraining, which represents the correspondingperformance of the surrogate ego vehicle on the scenes for the last two routes before finetuning. The last column provides an average acrossall scenarios. /: higher/lower the better.",
  "ChatScene0.9050.9050.9060.9290.9340.9030.8930.8620.905": "4.3. Adversarial Training on Safety-Critical Sce-nariosThe aim of these experiments was to assess the effectivenessof safety-critical scenarios generated by various algorithmsin enhancing the resilience of an ego vehicle. The findingssubstantiate our hypothesis that the nature of adversarialscenarios is crucial to the robustness of the ego vehicle. Experiment Setting.For maintaining the consistency, weconduct finetuning on the same surrogate SAC-trained egovehicle under each base scenario independently, using sceneson the first eight routes generated by each algorithm, andtest the adversarially finetuned ego vehicle with the selectedscenes from the last two routes from all algorithms, whichalso resulted in around 100 test cases for each base scenarioin total. The surrogate model is finetuned with 500 epochs,utilizing a learning rate of 0.0001. We report the optimal per-formance based on evaluations conducted every 50 epochs.Further details on finetuning settings and selecting the check-points can be found in Appendix C.3. Evaluation Results. presents the performance out-comes of post-adversarial training, showcasing the efficacyof our agent in strengthening the robustness of the ego ve-hicle. Notably, when finetuned adversarially with scenariosgenerated by our method, the ego vehicle consistently sur-passed the performance of agents trained with alternativeapproaches in most base scenarios. We observed a 51%reduction in collision rates compared to the original egovehicle without finetuning, and the overall score improvedby 43% relatively. More significantly, the collision rate wasreduced by an additional 9% compared to the SOTA, whichindicates that our agent can effectively contribute to improv-ing the safety and reliability of autonomous driving systems. By exposing the ego vehicle to more challenging and di-verse scenarios, we are directly aiding in the advancementof robust autonomous vehicle algorithms.In conclusion, the experimental results demonstrate thetangible benefits of our adversarial finetuning approach. Thesubstantial reduction in collision rates, coupled with themarked enhancement in overall performance, underscoresthe potential of our agent in fortifying autonomous agentsagainst adversarial perturbations. These findings signify apivotal step towards establishing safer and more resilientautonomous driving systems, thereby fostering greater trustand reliability in real-world deployment scenarios.5. ConclusionIn this work, we introduce ChatScene, an LLM-based agentskilled at safety-critical scenario generation by automat-ically generating descriptions of safety-critical scenarios,decomposing these descriptions to retrieve the appropriateScenic code, and subsequently compiling it to run simula-tions within the CARLA environment. Our experiments re-veal that the scenarios produced by ChatScene pose greaterchallenges, substantially elevating the collision rates for theego vehicle under the same scenario compared to other meth-ods. Moreover, these generated scenarios have proven to bemore effective in fine-tuning the ego vehicles to avoid colli-sions in safety-critical situations, demonstrating the agentsutility in enhancing the robustness of autonomous vehicles.AcknowledgmentThis work is partially supported by the National ScienceFoundation under grant No. 2046726, No. 2229876, DARPAGARD, the National Aeronautics and Space Administration(NASA) under grant No. 80NSSC20M0229, and Alfred P.Sloan Fellowship. Yasasa Abeysirigoonawardena, Florian Shkurti, and GregoryDudek. Generating adversarial driving scenarios in high-fidelity simulators.In 2019 International Conference onRobotics and Automation (ICRA), pages 82718277. IEEE,2019. 3 Gerrit Bagschik, Till Menzel, and Markus Maurer. Ontologybased scene creation for the development of automated ve-hicles. In 2018 IEEE Intelligent Vehicles Symposium (IV),pages 18131820. IEEE, 2018. 3 Battista Biggio, Igino Corona, Davide Maiorca, Blaine Nel-son, Nedim Srndic, Pavel Laskov, Giorgio Giacinto, and FabioRoli. Evasion attacks against machine learning at test time. InJoint European conference on machine learning and knowl-edge discovery in databases, pages 387402. Springer, 2013.1 Tom Brown, Benjamin Mann, Nick Ryder, Melanie Sub-biah, Jared D Kaplan, Prafulla Dhariwal, Arvind Neelakantan,Pranav Shyam, Girish Sastry, Amanda Askell, et al. Languagemodels are few-shot learners. Advances in neural informationprocessing systems, 33:18771901, 2020. 1 Panpan Cai, Yiyuan Lee, Yuanfu Luo, and David Hsu. Sum-mit: A simulator for urban driving in massive mixed traffic.In 2020 IEEE International Conference on Robotics and Au-tomation (ICRA), pages 40234029. IEEE, 2020. 3 Yulong Cao, Chaowei Xiao, Benjamin Cyr, Yimeng Zhou,Won Park, Sara Rampazzi, Qi Alfred Chen, Kevin Fu, andZ Morley Mao. Adversarial sensor attack on lidar-basedperception in autonomous driving. In Proceedings of the 2019ACM SIGSAC conference on computer and communicationssecurity, pages 22672281, 2019. 1 CARLA. Carla autonomous driving challenge, 2019. 3, 7 Baiming Chen, Xiang Chen, Qiong Wu, and Liang Li. Ad-versarial evaluation of autonomous vehicles in lane-changescenarios. IEEE transactions on intelligent transportationsystems, 23(8):1033310342, 2021. 1 Aakanksha Chowdhery, Sharan Narang, Jacob Devlin,Maarten Bosma, Gaurav Mishra, Adam Roberts, Paul Barham,Hyung Won Chung, Charles Sutton, Sebastian Gehrmann,et al. Palm: Scaling language modeling with pathways. arXivpreprint arXiv:2204.02311, 2022. 1",
  "Jacob Devlin, Ming-Wei Chang, Kenton Lee, and KristinaToutanova.Bert:Pre-training of deep bidirectionaltransformers for language understanding.arXiv preprintarXiv:1810.04805, 2018. 1": "Wenhao Ding, Baiming Chen, Minjun Xu, and Ding Zhao.Learning to collide: An adaptive safety-critical scenarios gen-erating method. In 2020 IEEE/RSJ International Conferenceon Intelligent Robots and Systems (IROS), pages 22432250.IEEE, 2020. 6 Wenhao Ding, Mengdi Xu, and Ding Zhao. Cmts: A condi-tional multiple trajectory synthesizer for generating safety-critical driving scenarios. In 2020 IEEE International Confer-ence on Robotics and Automation (ICRA), pages 43144321.IEEE, 2020. 3",
  "Bradley J Erickson, Panagiotis Korfiatis, Zeynettin Akkus,and Timothy L Kline. Machine learning for medical imaging.Radiographics, 37(2):505, 2017. 1": "Kevin Eykholt, Ivan Evtimov, Earlence Fernandes, Bo Li,Amir Rahmati, Chaowei Xiao, Atul Prakash, TadayoshiKohno, and Dawn Song. Robust physical-world attacks ondeep learning visual classification. In Proceedings of theIEEE Conference on Computer Vision and Pattern Recogni-tion, pages 16251634, 2018. 1 Shuo Feng, Xintao Yan, Haowei Sun, Yiheng Feng, andHenry X Liu.Intelligent driving intelligence test for au-tonomous vehicles with naturalistic and adversarial environ-ment. Nature communications, 12(1):748, 2021. 1 Daniel J Fremont, Tommaso Dreossi, Shromona Ghosh, Xi-angyu Yue, Alberto L Sangiovanni-Vincentelli, and Sanjit ASeshia. Scenic: a language for scenario specification andscene generation. In Proceedings of the 40th ACM SIGPLANConference on Programming Language Design and Imple-mentation, pages 6378, 2019. 2, 4 Daniel J Fremont, Edward Kim, Tommaso Dreossi, ShromonaGhosh, Xiangyu Yue, Alberto L Sangiovanni-Vincentelli, andSanjit A Seshia. Scenic: A language for scenario specificationand data generation. Machine Learning, pages 145, 2022. 2,4",
  "Daocheng Fu, Xin Li, Licheng Wen, Min Dou, Pinlong Cai,Botian Shi, and Yu Qiao. Drive like a human: Rethinking au-tonomous driving with large language models. arXiv preprintarXiv:2307.07162, 2023. 3": "Scott Fujimoto, Herke van Hoof, and David Meger. Address-ing function approximation error in actor-critic methods. InProceedings of the 35th International Conference on MachineLearning, pages 15871596. PMLR, 2018. 6 Tuomas Haarnoja, Aurick Zhou, Pieter Abbeel, and SergeyLevine. Soft actor-critic: Off-policy maximum entropy deepreinforcement learning with a stochastic actor. In Proceedingsof the 35th International Conference on Machine Learning,pages 18611870. PMLR, 2018. 6 Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun.Deep residual learning for image recognition. In Proceed-ings of the IEEE conference on computer vision and patternrecognition, pages 770778, 2016. 1",
  "language models for education. Learning and individualdifferences, 103:102274, 2023. 1": "Moritz Klischat, Edmond Irani Liu, Fabian Holtke, andMatthias Althoff. Scenario factory: Creating safety-criticaltraffic scenarios for automated vehicles. In 2020 IEEE 23rdInternational Conference on Intelligent Transportation Sys-tems (ITSC), pages 17. IEEE, 2020. 3 Zelun Kong, Junfeng Guo, Ang Li, and Cong Liu. Physgan:Generating physical-world-resilient adversarial examples forautonomous driving. In Proceedings of the IEEE/CVF Con-ference on Computer Vision and Pattern Recognition, pages1425414263, 2020. 1 Ritchie Lee, Mykel J Kochenderfer, Ole J Mengshoel, Guil-laume P Brat, and Michael P Owen. Adaptive stress testingof airborne collision avoidance systems. In 2015 IEEE/AIAA34th Digital Avionics Systems Conference (DASC), pages6C21. IEEE, 2015. 3",
  "Wassim G Najm, John D Smith, Mikio Yanagisawa, et al.Pre-crash scenario typology for crash avoidance research.Technical report, United States. National Highway TrafficSafety Administration, 2007. 7": "Jianmo Ni, Gustavo Hernandez Abrego, Noah Constant, JiMa, Keith Hall, Daniel Cer, and Yinfei Yang. Sentence-t5: Scalable sentence encoders from pre-trained text-to-textmodels. In Findings of the Association for ComputationalLinguistics: ACL 2022, pages 18641874, 2022. 5 Erik Nijkamp, Bo Pang, Hiroaki Hayashi, Lifu Tu, HuanWang, Yingbo Zhou, Silvio Savarese, and Caiming Xiong.Codegen: An open large language model for code with multi-turn program synthesis. In The Eleventh International Con-ference on Learning Representations, 2022. 2 Aayush Prakash, Shaad Boochoon, Mark Brophy, DavidAcuna, Eric Cameracci, Gavriel State, Omer Shapira, andStan Birchfield. Structured domain randomization: Bridgingthe reality gap by context-aware synthetic data. In 2019 In-ternational Conference on Robotics and Automation (ICRA),pages 72497255. IEEE, 2019. 3 Davis Rempe, Jonah Philion, Leonidas J Guibas, Sanja Fi-dler, and Or Litany. Generating useful accident-prone driv-ing scenarios via a learned traffic prior. In Proceedings ofthe IEEE/CVF Conference on Computer Vision and PatternRecognition, pages 1730517315, 2022. 3 Elias Rocklage, Heiko Kraft, Abdullah Karatas, and JorgSeewig. Automated scenario generation for regression testingof autonomous vehicles. In 2017 ieee 20th internationalconference on intelligent transportation systems (itsc), pages476483. IEEE, 2017. 3 John M Scanlon, Kristofer D Kusano, Tom Daniel, Christo-pher Alderson, Alexander Ogle, and Trent Victor. Waymo sim-ulated driving behavior in reconstructed fatal crashes withinan autonomous vehicle operating domain. Accident Analysis& Prevention, 163:106454, 2021. 3",
  "Shuhan Tan, Boris Ivanovic, Xinshuo Weng, Marco Pavone,and Philipp Kraehenbuehl. Language conditioned traffic gen-eration. In Conference on Robot Learning, pages 27142752.PMLR, 2023. 3": "Hugo Touvron, Thibaut Lavril, Gautier Izacard, Xavier Mar-tinet, Marie-Anne Lachaux, Timothee Lacroix, BaptisteRozi`ere, Naman Goyal, Eric Hambro, Faisal Azhar, et al.Llama: Open and efficient foundation language models. arXivpreprint arXiv:2302.13971, 2023. 1 Robin van der Made, Martijn Tideman, Ulrich Lages, RomanKatz, and Martin Spencer. Automated generation of virtualdriving scenarios from test drive data. In 24th InternationalTechnical Conference on the Enhanced Safety of Vehicles(ESV) National Highway Traffic Safety Administration, num-ber 15-0268, 2015. 3 Akifumi Wachi. Failure-scenario maker for rule-based agentusing multi-agent adversarial reinforcement learning and itsapplication to autonomous driving. In International JointConference on Artificial Intelligence. International Joint Con-ferences on Artificial Intelligence, 2019. 1 Jingkang Wang, Ava Pun, James Tu, Sivabalan Manivasagam,Abbas Sadat, Sergio Casas, Mengye Ren, and Raquel Urtasun.Advsim: Generating safety-critical scenarios for self-drivingvehicles. In Proceedings of the IEEE/CVF Conference onComputer Vision and Pattern Recognition, pages 99099918,2021. 6 Shijie Wu, Ozan Irsoy, Steven Lu, Vadim Dabravolski, MarkDredze, Sebastian Gehrmann, Prabhanjan Kambadur, DavidRosenberg, and Gideon Mann. Bloomberggpt: A large lan-guage model for finance. arXiv preprint arXiv:2303.17564,2023. 2 Chejian Xu, Wenhao Ding, Weijie Lyu, Zuxin Liu, ShuaiWang, Yihan He, Hanjiang Hu, Ding Zhao, and Bo Li.Safebench: A benchmarking platform for safety evaluationof autonomous vehicles. Advances in Neural InformationProcessing Systems, 35:2566725682, 2022. 2, 6, 12 Zhenhua Xu, Yujia Zhang, Enze Xie, Zhen Zhao, Yong Guo,Kenneth KY Wong, Zhenguo Li, and Hengshuang Zhao.Drivegpt4: Interpretable end-to-end autonomous driving vialarge language model.arXiv preprint arXiv:2310.01412,2023. 3 Zhenpei Yang, Yuning Chai, Dragomir Anguelov, Yin Zhou,Pei Sun, Dumitru Erhan, Sean Rafferty, and Henrik Kret-zschmar. Surfelgan: Synthesizing realistic sensor data forautonomous driving. In Proceedings of the IEEE/CVF Con-ference on Computer Vision and Pattern Recognition, pages1111811127, 2020. 3",
  "Qingzhao Zhang, Shengtuo Hu, Jiachen Sun, Qi Alfred Chen,and Z Morley Mao.On adversarial robustness of trajec-tory prediction for autonomous vehicles.arXiv preprintarXiv:2201.05057, 2022. 6": "Lianmin Zheng, Wei-Lin Chiang, Ying Sheng, SiyuanZhuang, Zhanghao Wu, Yonghao Zhuang, Zi Lin, Zhuohan Li,Dacheng Li, Eric Xing, et al. Judging llm-as-a-judge with mt-bench and chatbot arena. arXiv preprint arXiv:2306.05685,2023. 1 Ziyuan Zhong, Davis Rempe, Yuxiao Chen, Boris Ivanovic,Yulong Cao, Danfei Xu, Marco Pavone, and Baishakhi Ray.Language-guided traffic simulation via scene-level diffusion.arXiv preprint arXiv:2306.06344, 2023. 3",
  "A.1. Prompt for generating snippets": "In this section, we present an example to illustrate our pro-cess for collecting snippets. This particular example focuseson generating more adversarial behaviors of surroundingvehicles within the base scenario of a Straight Obstacle.The specific prompt employed in this process is detailedin . Upon receiving responses from the GPT-4.0, wemeticulously review each description-snippet pair for adver-sarial behavior. This review includes manual verification andcorrection of any errors, such as the use of unusable APIs,ensuring the accuracy and applicability of the snippets.",
  "C.2. Detailed Performance for Differently Trainedego vehicles": "We provide a detailed assessment of adversarial performancein the scenes generated by different methods in each testego vehicle (trained with SAC, PPO, TD3, respectively).Detailed statistics on the collision rate can be found in Ta-ble 8, while the overall score is reported in . Theresults demonstrate that our method exhibits greater general-izability across diverse training algorithms for ego vehicles,consistently achieving the best average performance.",
  "The discount factor is 0.99, and the Q-ensemble criticcomprises 2 models.During evaluation, it was observed that prolonged trainingepochs led the model to adopt a stopping strategy. Therefore,": "to measure the performance accurately, we assess all check-points post 100 epochs at intervals of every 50 epochs. Theoptimal performance is reported based on the checkpointexhibiting the lowest collision rate while maintaining a rea-sonable route completion rate (> 0.3), as adversarial eventstypically occur after 30% completion of the total route. Your task is to provide descriptions of adversarial behaviors exhibited by surrounding objects(pedestrians, cars, cyclists, motorcycles) that may lead to a collision with the ego vehicle on astraight road. The behaviors should be safety-critical. Ensure that the provided code snippets adhereto the Scenic API without creating new APIs. Here are some refined examples: Behavior Description: A pedestrian suddenly starts crossing the road without looking.Snippet:behavior AdvBehavior():do CrossingBehavior(ego, globalParameters.ADV_SPEED, globalParameters.ADV_DISTANCE)param ADV_SPEED = Range(0, 5)param ADV_DISTANCE = Range(0, 20) Behavior Description: A pedestrian steps onto the road right in front of the ego vehicle and stops.Snippet:behavior AdvBehavior():try:do CrossingBehavior(ego, globalParameters.ADV_SPEED, globalParameters.ADV_DISTANCE)interrupt when network.laneAt(self) is network.laneAt(ego):take SetWalkingSpeedAction(0)param ADV_SPEED = Range(0, 5)param ADV_DISTANCE = Range(0, 20) Behavior Description: A car in an adjacent lane suddenly merges into the ego's lane.Snippet:behavior AdvBehavior():laneChangeCompleted = Falsetry:do FollowLaneBehavior(target_speed=globalParameters.ADV_SPEED)",
  "Behavior Description: An adversarial cyclist sprints from behind a bus stop onto the road and stops infront of the ego vehicle.Snippet:behavior AdvBehavior():": "do CrossingBehavior(ego, globalParameters.OPT_ADV_SPEED, globalParameters.OPT_ADV_DISTANCE) until(distance from self to network.laneAt(ego)) < globalParameters.OPT_STOP_DISTANCEwhile True:take SetWalkingSpeedAction(0)param OPT_ADV_SPEED = Range(0, 10)param OPT_ADV_DISTANCE = Range(0, 15)param OPT_STOP_DISTANCE = Range(0, 1) Now, based on these examples, your task is to provide additional Scenic code snippets that simulateadversarial behaviors in traffic scenarios. Each snippet should be accompanied by a concise and clearbehavior description, similar to the provided examples. Your code must follow the existing Scenicrepository's API structure without introducing new APIs.",
  "Your task is to decompose full descriptions of safety-critical scenarios into sub-descriptions for thefollowing distinct components:": "Behavior: Describe the behavior of the adversarial object (you should also indicate the type of theobject like pedestrians, cars, cyclists, and motorcycles).Geometry: Specify the road condition where the scenario occurs (e.g., straight road, three-wayintersection).Spawn Position: Indicate the initial relative position of the adversarial object to the ego vehicle. Here are refined examples:Scenario: The ego vehicle is driving on a straight road, and the car in front brakes suddenly as theego approaches.Behavior: The adversarial car suddenly brakes when the ego approaches.Geometry: A straight road.Spawn Position: The adversarial car is directly in front of the ego vehicle. Scenario: The ego vehicle attempts a right turn at a four-way intersection, and an adversarialpedestrian steps onto the road in front of it.Behavior: The adversarial pedestrian deliberately steps onto the road right in front of the egovehicle.Geometry: Lanes for turning right on a four-way intersection.Spawn Position: The adversarial pedestrian is on the right front of the ego. Scenario: The ego vehicle navigates around a parked car, and an oncoming car suddenly turns into itspath.Behavior: The adversarial car suddenly turns into the ego's path without signaling.Geometry: A two-lane road.Spawn Position: The adversarial car is oncoming from the left lane of the ego. Scenario: The ego vehicle is traveling along a straight road when a pedestrian, initially hidden behinda bus stop on the sidewalk to the right, unexpectedly dashes onto the road directly in front of the egovehicle and comes to an abrupt stop.Behavior: The adversarial pedestrian suddenly sprints from right, stopping abruptly in front of the egovehicle.Geometry: A straight road.Spawn Position: The adversarial pedestrian is initially stationed behind a bus stop on the right front. Scenario: The ego vehicle is changing to the right lane when an emergency vehicle approaches rapidlyfrom behind.Behavior: The adversarial car approaches rapidly from behind.Geometry: A lane with right lanes on a straight road.Spawn Position: The adversarial car is approaching from the rear on the right lane. Scenario: The ego vehicle is turning right at an intersection, and a crossing car from left suddenlybrakes.Behavior: The adversarial car suddenly brakes near the ego vehicle.Geometry: Lanes for turning right on an intersectionSpawn Position: The adversarial car is crossing the intersection from the left.",
  "StraightObstacle": "1. The ego vehicle is driving on a straight road; the adversarial pedestrian suddenly crossesthe road from the right front and suddenly stops in front of the ego.2. The ego vehicle is driving on a straight road; the adversarial pedestrian stands behinda bus stop on the right front, then suddenly sprints out onto the road in front of the ego vehicle and stops.3. The ego vehicle is driving on a straight road; the adversarial pedestrian appears from adriveway on the left and suddenly stop and walk diagonally.4. The ego vehicle is driving on a straight road; the adversarial pedestrian suddenly appearsfrom behind a parked car on the right front and suddenly stop.5. The ego vehicle is driving on a straight road; the adversarial pedestrian is hidden behind a vending machineon the right front, and abruptly dashes out onto the road, and stops directly in the path of the ego vehicle.",
  "TurningObstacle": "1. The ego vehicle is turning left at an intersection; the adversarial motorcyclist on the rightfront pretends to cross the road but brakes abruptly at the edge of the road, causing confusion.2. The ego vehicle is turning left at an intersection; the adversarial pedestrian on the oppositesidewalk suddenly crosses the road from the right front and stops in the middle of the intersection.3. The ego vehicle is turning right at an intersection; the adversarial pedestrian on the left frontsuddenly crosses the road and stops in the middle of the intersection, blocking the ego vehicles path.4. The ego vehicle is turning left at an intersection; the adversarial cyclist on the left frontsuddenly stops in the middle of the intersection and dismounts, obstructing the ego vehicles path.5. The ego vehicle is turning right at an intersection; the adversarial motorcyclist on the oppositesidewalk abruptly crosses the road from the right front and comes to a halt in the center of the intersection.",
  "LaneChanging": "1. The ego vehicle is attempting to change lanes to avoid a slow-moving leading vehicle;the adversarial car in the target lane suddenly merges into the ego vehicles original lane,blocking the ego from returning to its initial position.2. The ego vehicle is changing to the right lane; the adversarial car is driving parallelto the ego and blocking its path.3. The ego vehicle is performing a lane change to evade a slow-moving vehicle; theadversarial car in the target lane on the right front suddenly brakes, causing the egovehicle to react quickly to avoid a collision.4. The ego vehicle is preparing to change lanes to evade a slow-moving leading vehicle;the adversarial car in the target lane starts weaving between lanes, making it difficultfor the ego to predict its position and safely execute the lane change.5. The ego vehicle is attempting to change lanes to avoid a slow-moving leading vehicle;the adversarial car in the target lane suddenly slows down, matching the speed of the leadingvehicle, and effectively blocks the ego from completing the lane change.",
  "VehiclePassing": "1. The ego approaches a parked car that is blocking its lane and must use the oppositelane to bypass the vehicle, cautiously monitoring oncoming traffic, and suddenly encountersa jaywalking pedestrian, requiring the ego to quickly assess the situation and respondappropriately to avoid a collision.2. The ego encounters a parked car blocking its lane and must use the opposite lane tobypass the vehicle, carefully assessing the situation and yielding to oncoming traffic, whenan oncoming motorcyclist swerves into the lane unexpectedly, necessitating the ego to brakeor maneuver to avoid a potential accident.3. The ego approaches a parked car obstructing its lane and must use the opposite lane to goaround when an oncoming car suddenly turns into the egos path without signaling, requiringthe ego to react quickly and take evasive action to prevent a collision.4. The ego encounters a parked car blocking its lane and must use the opposite lane to bypassthe vehicle when an oncoming car suddenly accelerates, closing the gap for the ego to safelyreturn to its lane, necessitating the ego to quickly decide whether to accelerate or braketo avoid a collision.5. The ego encounters a parked car blocking its lane and must use the opposite lane to bypassthe vehicle when an oncoming pedestrian enters the lane without warning and suddenly stops,necessitating the ego to brake sharply or steer to avoid hitting the pedestrian.",
  "Red-lightRunning": "1. The ego is driving straight through an intersection when a crossing vehicle runs the red light and unexpectedlyaccelerates, forcing the ego to quickly reassess the situationand perform a collision avoidance maneuver.2. The ego vehicle is moving straight through the intersection; the adversarial vehicle, initiallyon the left front, runs the red light and makes an abrupt right turn, forcing the ego vehicleto perform a collision avoidance maneuver.3. The ego vehicle is moving straight through the intersection; the adversarial vehicle, initiallyon the left front, runs the red light and makes an abrupt left turn, forcing the ego vehicleto perform a collision avoidance maneuver.4. The ego moves straight at an intersection when a crossing vehicle runs the red light fromthe right and brakes abruptly, causing the ego to rapidly adapt its trajectory and performa collision avoidance maneuver.5. The ego vehicle is going straight through the intersection; the adversarial vehicle approachesfrom the left front and cuts off the ego vehicle.",
  "UnprotectedLeft-turn": "1. The ego starts an unprotected left turn at an intersection while yielding to an oncomingcar when the oncoming cars throttle malfunctions, leading to an unexpected accelerationand forcing the ego to quickly modify its turning path to avoid a collision.2. The ego attempts an unprotected left turn at an intersection while yielding to an oncomingcar when the oncoming car suddenly brakes, necessitating the ego to rapidly reassess thesituation and adjust its turn.3. The ego vehicle is making an unprotected left turn; the adversarial vehicle approaches theintersection at a normal speed but then suddenly attempts to make a last-second right turn.4. The ego attempts an unprotected left turn at an intersection while yielding to an oncomingcar when the oncoming car veers erratically.5. The ego commences an unprotected left turn at an intersection while yielding to an oncomingcar when the adversarial car, coming from the right, blocks multiple lanes by driving extremelyslowly, forcing the ego vehicle to change lanes.",
  "Right-turn": "1. The ego is performing a right turn at an intersection when the crossing car suddenly speedsup, entering the intersection and causing the ego to brake abruptly to avoid a collision.2. The ego vehicle is turning right; the adversarial car (positioned ahead on the right) blocks thelane by braking suddenly.3. The ego vehicle is turning right; the adversarial car (positioned ahead on the right) reverses abruptly.4. The ego vehicle is turning right; the adversarial car (positioned behind on the right) suddenlyaccelerates and then decelerates.5. The ego vehicle is turning right; the adversarial vehicle enters the intersection from the leftside, swerving to the right suddenly.",
  "CrossingNegotiation": "1. The ego vehicle is approaching the intersection needs crossing negotiation; the adversarial car (on the left)suddenly accelerates and enters the intersection first and suddenly stops.2. The ego vehicle is approaching the intersection needs crossing negotiation; the adversarial car (on the right)suddenly accelerates and enters the intersection first and suddenly stops.3. The ego vehicle is entering the intersection needs crossing negotiation; the adversarial vehicle comes fromthe opposite direction and turns left and stops, causing a near collision with the ego vehicle.4. The ego vehicle is entering the intersection needs crossing negotiation; the adversarial vehicle comes fromthe right and turns left and stops, causing a near collision with the ego vehicle.5. The ego vehicle is entering the intersection needs crossing negotiation; the adversarial car, coming fromthe right, blocks multiple lanes by driving extremely slowly, forcing the ego vehicle to change lanes. . Collision Rate (CR) Performance Across Different Models. This table presents the detailed analysis of the collision rate (CR) forvarious test ego vehicles, each trained with distinct RL algorithms. We showcase the mean CR for each model, demonstrating how theyperform in the selected scenes under the same base scenario. Bold values denote the best performance for each scenario. Algorithms include:LC: Learning-to-collide, AS: AdvSim, CS: Carla Scenario Generator, AT: Adversarial Trajectory Optimization. Higher values of CR () ispreferable here.",
  "ChatScene0.870.750.960.990.770.860.750.900.856": ". Overall Score (OS) Performance Across Different Models. This table presents the detailed analysis of the overall score (OS) forvarious test ego vehicles, each trained with distinct RL algorithms. We showcase the mean OS for each model, demonstrating how theyperform in the selected scenes under the same base scenario. Bold values denote the best performance for each scenario. Algorithms include:LC: Learning-to-collide, AS: AdvSim, CS: Carla Scenario Generator, AT: Adversarial Trajectory Optimization. Lower values of OS () ispreferable here."
}