{
  "Abstract": "Novel-view synthesis of specular objects like shiny met-als or glossy paints remains a significant challenge. Notonly the glossy appearance but also global illuminationeffects, including reflections of other objects in the envi-ronment, are critical components to faithfully reproduce ascene. In this paper, we present Neural Directional En-coding (NDE), a view-dependent appearance encoding ofneural radiance fields (NeRF) for rendering specular ob-jects. NDE transfers the concept of feature-grid-based spa-tial encoding to the angular domain, significantly improv-ing the ability to model high-frequency angular signals. Incontrast to previous methods that use encoding functionswith only angular input, we additionally cone-trace spa-tial features to obtain a spatially varying directional encod-ing, which addresses the challenging interreflection effects.Extensive experiments on both synthetic and real datasetsshow that a NeRF model with NDE (1) outperforms thestate of the art on view synthesis of specular objects, and(2) works with small networks to allow fast (real-time) in-ference. The project webpage and source code are availableat:",
  ". Introduction": "Some of the most compelling appearances in our visualworld arise from specular objects like metals, plastics,glossy paints, or silken cloth. Faithfully reproducing theseeffects from photographs for novel-view synthesis requirescapturing both geometry and view-dependent appearance.Recent neural radiance field (NeRF) methods havemade impressive progress on efficient geometry represen-tation and encoding using learnable spatial feature grids. However, modeling high-frequencyview-dependent appearance has achieved much less atten-tion. Efficient encoding of directional information is justas important, for modeling effects such as specular high-lights and glossy interreflections. In this paper, we presenta feature-grid-like neural directional encoding (NDE) thatcan accurately model the appearance of shiny objects.",
  "ENVIDR Ref-NeRF NDE (ours)Ground truth0.52 FPS0.02 FPS75 FPS": ".Ours vs. analytical encoding.Methods like Ref-NeRF use an analytical function to encode viewing directionsin large MLPs, failing to model complex reflections (column 1-2of the insets). Instead, we encode view-dependent effects into fea-ture grids with better interreflection parameterization, successfullyreconstructing the details on the teapot and even multi-bounce re-flections of the pink ball (3rd column of the insets) with little com-putational overhead (75 FPS on an NVIDIA 3090 GPU). View-dependent colors in NeRFs (e.g. ) are com-monly obtained by decoding spatial features and encodeddirection.This approach necessitates a large multi-layerperceptron (MLP) and exhibits slow convergence with ana-lytical directional encoding functions. To that end, we bringfeature-grid-based encoding to the directional domain, rep-resenting reflections from distant sources via learnable fea-ture vectors stored on a global environment map (Sec. 4.1).Features localize signal learning, reducing the MLP size re-quired to model high-frequency far-field reflections.",
  "arXiv:2405.14847v1 [cs.CV] 23 May 2024": "interreflections are also key effects in rendering glossyobjects.These effects cannot be accurately modeled byNeRFs spatio-angular parameterization whose directionalencoding does not depend on the position. In contrast, wepropose a novel spatio-spatial parameterization by cone-tracing a spatial feature grid (Sec. 4.2) to encode near-fieldreflections. The cone tracing accumulates spatial encodingsalong the queried direction and position, thus it is spatiallyvarying. While prior works consider only single-bounceor diffuse interreflections , our representation is able tomodel general multi-bounce reflection effects.Overall, our neural directional encoding (NDE) achievesboth high-quality modeling of view-dependent effects andfast evaluation. demonstrates NDE incorpo-rated into NeRF, showing (1) accurate rendering of spec-ular objectsa difficult challenge for the state of the art(Sec. 5.1), and (2) high inference speed that can be pushedto real-time without obvious quality loss (Sec. 5.2).",
  ". Related work": "Novel-view synthesis aims to render a 3D scene from un-seen views given a set of image captures with camera poses.Neural radiance fields (NeRF) has recently emergedas a promising solution to this task, utilizing an implicitscene representation and volume rendering to synthesizephotorealistic images. Follow-up works achieve state-of-the-art results in this area, for unbounded scenes ,in-the-wild captures , and sparse- or single-view recon-struction . While the original NeRFmethod is computationally inefficient, it can be visu-alized in real-time by baking the reconstruction into voxel- or feature-grid-based representations (dis-cussed below). The volumetric representation has been ex-tended to work with signed distance fields (SDF) for better geometry acquisition, and the volume-renderingconcept has also been applied to other 3D-related tasks suchas object generation . Feature-grid-based NeRF.NeRFs positional encod-ing is a key component for the underlying multi-layerperceptron (MLP) network to learn high-frequency spatialand directional signals. However, the MLP size needs tobe large, which leads to slow training and inference. In-stead, methods like NSVF and DVGO interpo-late a 3D volume of learnable feature vectors to encodethe spatial signal, showing faster training and inferencewith even better spatial detail.Addressing the sparsityin typical scene geometry, later works avoid maintaininga large dense 3D grid via volume-compression techniquessuch as hash grids and tensor factorization .These methods are compact and scale up the feature grid tolarge scenes and even work with SDF-based mod-els . The essence of feature-grid encoding is to in-terpolate feature vectors attached to geometry primitives,and similar ideas have also been applied to irregular 3Dgrids , point clouds , and meshes .Operations like mip-mapping are trivial on feature grids, en- abling efficient anti-aliasing and range query of NeRF mod-els something we also leverage in this paper toencode rough reflection.Rendering specular objects.Apart from geometry,view-dependent effects like reflections from rough surfacesare a crucial component in photorealistic novel-view syn-thesis. Reflections are conventionally modeled by fittinglocal light-field functions .A 4D light fieldpresents more degrees of freedom than the constraints frominput images, which necessitates additional regularizationto avoid overfitting.Inverse-rendering approaches intro-duce such a constraint by solving for parametric BRDFsand lighting, then using forward rendering to reconstructthe light field. Spherical-basis lighting or split-sum ap-proximation are usually used to tamper the MonteCarlo variance of specular-reflection derivatives . EN-VIDR and NMF further explicitly consider global-illumination effects by ray-tracing one or few bounces ofindirect lighting. On the other hand, Ref-NeRF uses anintegrated directional encoding (IDE) to directly improveNeRFs view-dependent effects. IDE encodes the reflecteddirection rather than viewing direction to let the networklearn an environment-map-like function and is pre-filteredto account for rough reflection effects. Our neural direc-tional encoding, similar to IDE, can model general view-dependent appearance without assuming simplified lightingor reflections but with smaller computation cost.",
  ". Preliminaries": "We assume opaque objects with diffuse and specular com-ponents and demonstrate our directional encoding using asurface-based model that represents a scene using a signeddistance field (SDF) s(x) and a color field c(x, ) (depen-dent on the viewing direction ). The SDF is converted toNeRFs density field following VolSDF with a learn-able parameter controlling the boundary smoothness:",
  "!": ". Pipeline of our neural directional encoding (NDE). We encode far-field reflections into a cubemap and near-field interreflec-tions into a volume. Both representations store learnable feature vectors to encode direction and are mip-mapped to account for roughreflections. Given a reflected ray, the features are combined by tracing a cone of size proportional to the surface roughness to aggregatespatial features with cubemap features blended as the background. The result is fed into an MLP to output the specular color (Eq. (5)).",
  "Discussion on directional encoding.Previous works [38,": "49] use an analytical function for H dependent only on r(and optionally ), which has several limitations: (1) the en-coding function is fixed (not learnable), and (2) the spatialcontext only comes from f(x). Both require the decoderMLP to be large to fit the spatio-angular details of the spec-ular color, which can be expensive and slow.",
  ". Neural directional encoding": "To minimize the MLP complexity, we use a learnable neu-ral directional encoding that also depends on the spatiallocation.Specifically, our NDE encodes different typesof reflection by different representations, which include acubemap feature grid hf for far-field reflections and a spa-tial volume hn that models near-field interreflections. Asshown in , we compute H by first cone-tracing hnaccumulated along the reflected ray, yielding near-field fea-ture Hn (Sec. 4.2), and blending the far-field feature Hfqueried from hf in the same direction (Sec. 4.1):",
  ". Far-field features": "Feature-grid-based representations speed-up spatial signal learning by storing feature vectors in vox-els for local signal control. Similarly, we place feature vec-tors hf at every pixel of a global cubemap to encode idealspecular reflections. The cubemap is pre-filtered to modelreflections under rough surfaces in the split-sum style,where the kth level mip-map hkf is created by convolving thedownsampled hf using a GGX kernel D with canoni-cal roughness k evenly spaced in :",
  ", (8)": "where lerp() denotes linear interpolation and [k, k+1].The cubemap-based encoding allows signals in differentdirections to be optimized independently by tuning the fea-ture vectors. This is easier to optimize than globally solv-ing the MLP parameters, making it more suitable to modelhigh-frequency details in the angular domain (). Thecoarse level feature is a consistently filtered version of thefine level, which is empirically found to be better con-strained than using independent feature vectors at each miplevel .",
  "Spatio-angularSpatio-spatialCone-traced": ". Spatio-spatial encoding (middle) is equivalent to thecommon spatio-angular encoding (left) of mirror reflections, butit captures the variation of x across different x. The idea can beextended to model rough reflections by cone tracing mip-mappedspatial features covered by the reflection cone (right). the same hf, so spatially varying components can end upbeing averaged out during optimization. Our insight is thatthe spatio-angular reflection can also be parameterized as aspatio-spatial function of current and next bounce location(). Therefore, an MLP can decode the second bouncespatial feature with f(x) in Eq. (5) to get mirror reflections.For rough reflections, we aggregate the averaged secondbounce feature under the reflection lobe by cone tracing (, right), which volume renders the mip-mapped spa-tial features hn using the mip-mapped density n alongthe reflected ray x + rt with mip level i = log2(2ri)at sample point xi decided by the cones footprint ri =",
  "(9)": "The cones footprint is selected to cover the GGX lobe at x(see supplemental document). Note that we do not use theSDF-converted in Eq. (1) as it cannot be mip-mapped;instead, we optimize a separate n to match (Sec. 4.3)jointly with the indirect feature hn. Both are decoded froma tri-plane Tn, whose each 2D plane is mip-mappedsimilar to Tri-MipRF :",
  "n(xi, i), hn(xi, i)=MLP(mipmap(Tn(xi), i)). (10)": "The indirect rays are spatially varying, hence the cone-traced near-field features are spatially varying too. This hasadvantages over the angular-only feature for learning inter-reflections and is empirically less likely to overfit ().This is because the same hn is traced from different raysin training, such that the underlying representation is well-constrained.Hn and Hf are similar to the foreground",
  ". Optimization": "shows our network architectures. Stable geometryoptimization is essential for modeling specular objects, sowe use the positional-encoded MLP from VolSDF tooutput the SDF. To reduce computation cost, a hash gridis used to encode other spatial features (cd, ks, , f), andall other MLPs are tiny. The representation is optimizedthrough the Charbonnier loss between ground truth pixelcolor Cgt and our rendering C in tone-mapped space:",
  "where is the tone-mapping function": "Occupancy-grid sampling.Eqs. (3) and (9) are acceler-ated by an occupancy-grid estimator to get rid of com-putations in empty space. This is especially important forthe efficient near-field feature evaluation, since we trace areflected ray for each primary ray sample. The primal rayrendering uses a fixed ray marching step of 0.005. Follow-ing , we choose the cone tracing step proportional toits footprint: max (0.5ri, 0.005), and query a mip-mappedoccupancy grid for the correct occupancy information. Regularization.Given the primary samples xi, Eikonalloss Leik is applied to regularize the SDF, and we im-plicitly regularize n to match by encouraging the render-ing using n at mip level 0 to be close to the ground truth:",
  "denotes stop-gradient to prevent n affecting appearance.The total loss is L + 0.1Leik + 0.01L": "Implementation details.We implement our code usingPyTorch , NerfAcc , and CUDA. The optimiza-tion takes 400k steps using the Adam optimizer with0.0005 learning rate and dynamic batch size target-ing for 32k primary point samples. We use the schedulerfrom BakedSDF to anneal in Eq. (1) for more stableconvergence. Because the SDF uses a positional-encodedMLP, each scene still requires 1018 hours to train on anNVIDIA 3090 GPU with 15GB GPU memory usage.",
  ". Experiments": "We evaluate our method on view synthesis of specular ob-jects using synthetic and real scenes. The synthetic scenesinclude the Shinny Blender dataset and the Materialsscene from the NeRF Synthetic dataset , all renderedwithout background; the real scenes come from NeRO which contain backgrounds and reflections of the capturerin the images. The rendering quality is compared in termsof PSNR, SSIM , LPIPS , and the inference speedin FPS is recorded on an NVIDIA 3090 GPU. Background and capturer.For real scenes, we use a sep-arate Instant-NGP with coordinate contraction torender backgrounds. Similarly to NeRO , the reflectionof the capturer is encoded by blending a capturer plane fea-ture hc of opacity c between Hf and Hn:",
  "H = Hn + (1 n)(chc + (1 c)Hf), wherec, hc = MLP(mipmap(Tc(u), c))(13)": "are decoded from a mip-mapped 2D feature grid Tc; u, care the ray-plane intersection coordinate and the mip-levelderived from the intersection footprint.Jointly optimiz-ing foreground and background networks can be unstable,so we apply stabilization loss from NeRO and mod-ify the specular color computation for the first 200k steps:hf, hn, hc are sampled and decoded into colors first, thenthe colors are blended to get cs. Compared to blending thefeature and decoding, we find the decoding-then-blendingstrategy provides better geometry optimization.",
  ". Quantitative comparison on synthetic scenes showingour encoding (NDE) is either the best or second best compared toother methods for view synthesis of specular objects": "removed when evaluating renderings of specular objects,which is difficult for the real scenes. Therefore, we onlyqualitatively compare real scenes against NeRO with PSNRcomputed on the foreground zoom-ins without the capturer. Results.Overall, our method gives the best renderingquality on synthetic scenes with quantitative results eitherbetter or comparable with the baselines (Tab. 1).Thisis because our NDE gives the most detailed modeling ofboth far-field reflections and interreflections, which alsohelps improve the geometry reconstruction ( bottom).While ENVIDRs SSIM is slightly better than ours in sev-eral scenes, we not only achieve much better PSNRs (sur-passing 2dB), but also higher LPIPS scores. The PSNR onthe Materials (Mat.) scene is worse than Ref-NeRFs be-cause the SDF is inefficient at modeling the concave geom-etry of the sphere base. However, our directional MLP ismuch smaller (Sec. 5.2), and we still achieve perceptuallybetter appearance as shown in the insets of . The qual-itative comparison in shows that NDE extends wellto real scenes, producing clearer specular reflections of thecomplex real-world environments compared to NeRO. Editability.The near- and far-field features provide a nat-ural separation of different reflections, allowing us to ren-der these effects separately by excluding Hf or Hn duringinference (). Because interreflections are spatially en-coded in the near-field feature grid, an object and its first-bounce reflections can be removed by masking out both and n from the corresponding regions (). Thisdoes not work for multi-bounce reflections which are notencoded on the deleted object.",
  "Rendering/Normal": ". Qualitative results for synthetic scenes show our NDE successfully models the fine details of reflections from both environmentlights (mirror sphere and car top) and other objects (glossy interreflections on spheres; zoom in to see the difference). Ref-NeRF tends to usewrong geometry to fake interreflections (2nd column on bottom). In contrast, our encoding has sufficient capacity to model interreflections,which enables more accurate normals (3rd column on bottom). Mean angular error of the normal is shown in the insets.",
  ". Editability of our encoding. Reflections from thedeleted spheres can be removed by deleting the volume of theirindirect features (bottom)": "ENVIDR , and the directional MLP for Ref-NeRF .The spatial-network evaluation is excluded to eliminate thedifference caused by different geometry representations,network architectures, and sampling strategies. For eachmethod, we choose the rendering batch size that maximizesits performance.Results.As shown in the top half of Tab. 2, our NDE takesa fraction of a second to evaluate, because it requires sub-stantially smaller MLPs to infer color without hurting therendering. In contrast, other baselines need large MLPs tomaintain rendering quality, which prevents them to be visu-alized in real-time.Real-time application.It is possible to create a real-timeversion of our model by converting the SDF into a meshthrough marching cubes and baking cd, ks, , f intomesh vertices. The pixel color then can be computed us-ing the rasterized vertex attributes and cs decoded from theNDE, which takes only a single cubemap lookup and conetracing for each pixel. As a result, this process requiresabout the same budget as evaluating a real-time NeRFmodel .We implement our real-time model(NDE-RT) in WebGL and report the full rendering framerate (not just color evaluation) at the bottom of Tab. 2 witha real-time baseline 3DGS . 3DGS is faster as it usesspherical harmonics for color without network evaluation,",
  "DGS235-30.300.9490.076NDE-RT (ours)6675k35.480.9760.027": ". Performance comparison. Our NDE achieves high ren-dering quality, and its use of small MLPs enables fast color evalu-ation and real-time rendering. We report only the evaluation timeand parameter counts of color MLPs except for 3DGS (no colorMLPs) and our NDE-RT, for which we report the total renderingtime. All metrics are averaged over the synthetic scenes in Tab. 1. which leads to poor specular appearance reconstruction. In-stead, our NDE-RT shows rendering quality comparable toother baselines while achieving frame rates above 60. Theloss in PSNR is mainly due to error around object edgeswhich is cause by the marching-cube mesh extraction andsubsequent rasterization (). This error does not sig-nificantly affect the visual quality and can be resolved byfine-tuning the mesh .",
  ". Ablation study": "Different directional encodings.In we com-pare different directional encodings on the Materials scene.IDE (analytical) with our tiny MLP yields blurry re-flections.Interreflections cannot be reconstructed usingonly the far-field feature, and if we volume-render ratherthan cone-trace the near-field feature, mirror interreflectionscan be recovered but reflections on rough surfaces look toosharp. It is therefore necessary to use both the cubemap-based far-field feature and the cone-traced near-field featureto get the best specular appearance (Tab. 3).",
  ". Ablation on our network architecture. Using a smallerMLP width introduces a minor loss in rendering fidelity but a no-ticeable real-time performance boost": "the decoder of n, hn, cs has only a slight negative impacton the rendering quality but significantly improves real-timeperformance. The rendering quality reduction of the real-time model is mainly caused by the error near object edgesas discussed in Sec. 5.2. Spatial mip-mapping strategies.Besides mip-mappedtri-plane , our architecture can also work with a mip-mapped hash grid for the near-field feature encoding.Similar to , the hash-grid mip-mapping is imple-mented by gradually masking out fine-resolution features asthe mip level increases. This results in limited model capac-ity for rough surfaces where most of the features are masked",
  "out, such that a mip-mapped hash grid produces slightlyworse rendering than the tri-plane encoding (Tab. 5)": "Limitations.Like previous works , NDE issensitive to the quality of the surface normal. This preventsus from using more efficient geometry representations suchas a hash grid, which tends to produce corrupted geometry(). As a result, we use positional-encoded MLPs tomodel the SDF, which leads to long training times and isdifficult for modeling transparent objects. Meanwhile, theeditibility of our method is limited.",
  ". Conclusion": "We have adapted feature-based NeRF encodings to the di-rectional domain and introduced a novel spatio-spatial pa-rameterization of view-dependent appearance. These im-provements allow for efficient modeling of complex re-flections for novel-view synthesis and could benefit otherapplications that model spatially varying directional sig-nals, such as neural materials and radiancecaching . Acknowledgements.This work was supported in partby NSF grants 2110409, 2100237, 2120019, ONR grantN00014-23-1-2526, gifts from Adobe, Google, Qualcomm,Rembrand, a Sony Research Award, as well as the RonaldL. Graham Chair and the UC San Diego Center for VisualComputing. Additionally, we thank Jingshen Zhu for in-sightful discussions. Pontus Andersson, Jim Nilsson, Tomas Akenine-Moller,Magnus Oskarsson, Kalle Astrom, and Mark D Fairchild.Flip: A difference evaluator for alternating images. Proc.ACM Comput. Graph. Interact. Tech., 3(2):151, 2020. 11",
  "Zhaoshuo Li, Thomas Muller, Alex Evans, Russell H Tay-lor, Mathias Unberath, Ming-Yu Liu, and Chen-Hsuan Lin.Neuralangelo: High-fidelity neural surface reconstruction. InCVPR, 2023. 2, 8": "Ruofan Liang, Hui-Hsia Chen, Chunlin Li, Fan Chen, Sel-vakumar Panneer, and Nandita Vijaykumar. Envidr: Implicitdifferentiable renderer with neural environment lighting. InICCV, 2023. 1, 2, 5, 6, 7, 8 Chen-Hsuan Lin, Jun Gao, Luming Tang, Towaki Takikawa,Xiaohui Zeng, Xun Huang, Karsten Kreis, Sanja Fidler,Ming-Yu Liu, and Tsung-Yi Lin. Magic3d: High-resolutiontext-to-3d content creation. In CVPR, 2023. 2",
  "Nelson Max. Optical models for direct volume rendering.IEEE Transactions on Visualization and Computer Graphics,1(2):99108, 1995. 2": "Ben Mildenhall, Pratul P Srinivasan, Rodrigo Ortiz-Cayon,Nima Khademi Kalantari, Ravi Ramamoorthi, Ren Ng, andAbhishek Kar. Local light field fusion: Practical view syn-thesis with prescriptive sampling guidelines. In ACM TOG,2019. 2 Ben Mildenhall, Pratul P. Srinivasan, Matthew Tancik,Jonathan T. Barron, Ravi Ramamoorthi, and Ren Ng. Nerf:Representing scenes as neural radiance fields for view syn-thesis. In ECCV, 2020. 1, 2, 3, 5",
  "Thomas Muller, Alex Evans, Christoph Schied, and Alexan-der Keller. Instant neural graphics primitives with a multires-olution hash encoding. In SIGGRAPH, 2022. 1, 2, 3, 5, 7, 8,11": "Jacob Munkberg, Jon Hasselgren, Tianchang Shen, Jun Gao,Wenzheng Chen, Alex Evans, Thomas Muller, and Sanja Fi-dler. Extracting triangular 3d models, materials, and lightingfrom images. In CVPR, 2022. 2, 4, 7 Adam Paszke, Sam Gross, Francisco Massa, Adam Lerer,James Bradbury, Gregory Chanan, Trevor Killeen, ZemingLin, Natalia Gimelshein, Luca Antiga, et al. Pytorch: Animperative style, high-performance deep learning library. InNeurIPS, 2019. 5",
  "Alex Trevithick and Bo Yang. Grf: Learning a general ra-diance field for 3d representation and rendering. In ICCV,2021. 2": "Alex Trevithick, Matthew Chan, Michael Stengel, Eric Chan,Chao Liu, Zhiding Yu, Sameh Khamis, Manmohan Chan-draker, Ravi Ramamoorthi, and Koki Nagano.Real-timeradiance fields for single-image portrait view synthesis. InACM TOG, 2023. 2 Dor Verbin, Peter Hedman, Ben Mildenhall, Todd Zickler,Jonathan T Barron, and Pratul P Srinivasan. Ref-nerf: Struc-tured view-dependent appearance for neural radiance fields.In CVPR, 2022. 1, 2, 3, 4, 5, 6, 7, 8, 11",
  "A.2. Real-time application": "We use a two-pass deferred shading in our real-time model. Thefirst pass rasterizes the world-space position x, normal n, diffusecolor cd, specular tint ks, spatial feature f, and roughness intothe G-buffer. In the second pass, we then calculate the NDE H,including a cubemap lookup for far-field feature Hf and the conetracing of near-field feature Hn, and decode it to get the specu-lar color cs. The MLP evaluations are executed sequentially in-side the pixel shader, and we implement the early ray terminationtrick to stop the cone tracing if the accumulated transmit-tance is below 0.01. Because small decoder MLPs tend to provideunstable geometry optimization, we use the fixed SDF networkweight from our NDE trained with 64 MLP width when trainingother variants that use smaller decoder MLPs (Sec. 5.3).",
  "B. Additional Results": "For the unbounded real scene evaluation, we provide the results onthe Garden Spheres scene of Ref-NeRF real dataset in Tab. 6and . It can be seen that our method is able to recover moreinterreflection details in real-world compared to other baselines.Considering perceptual measures are more reasonable for reflec-tion quality comparison, we additionally show the FLIP metricon synthetic scenes in Tab. 7. Overall, our method still demon-strates higher rendering quality compared to other baselines.",
  "C. Experiment Details": "We provide the quantitative results on the teaser scene (of the main paper) compared to the baselines in Tab. 8 and theper-scene comparison of our real-time model (NDE-RT) with3DGS in Tab. 9. shows the comparison of differ-ent SDF encodings ( of the main paper). and 12show the per-scene quantitative results of our real-time and of-fline model with different MLP width (Width) on the syntheticdataset. In , we show the per-scene rendering results of bothour offline (NDE) and real-time (NDE-RT) model on the syntheticdataset together with the reconstructed surface normals. The nor-mals are masked by the foreground mask to get rid of floaters withthe background color."
}