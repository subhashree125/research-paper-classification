{
  "Vision for Robotics Lab, ETH Zrich, Zrich, Switzerland2 Dyson Robotics Lab, Imperial College London, London, United Kingdom3 Vision for Robotics Lab, University of Cyprus, Nicosia, Cyprus": "Abstract. Continuous-Time Simultaneous Localization And Mapping(CTSLAM) has become a promising approach for fusing asynchronous andmulti-modal sensor suites. Unlike discrete-time SLAM, which estimatesposes discretely, CTSLAM uses continuous-time motion parametrizations,facilitating the integration of a variety of sensors such as rolling-shuttercameras, event cameras and Inertial Measurement Units (IMUs). How-ever, CTSLAM approaches remain computationally demanding and areconventionally posed as centralized Non-Linear Least Squares (NLLS)optimizations. Targeting these limitations, we not only present the fastestSymForce-based B- and Z-Spline implementations achieving speedupsbetween 2.43x and 110.31x over Sommer et al. but also implementa novel continuous-time Gaussian Belief Propagation (GBP) framework,coined Hyperion, which targets decentralized probabilistic inference acrossagents. We demonstrate the efficacy of our method in motion trackingand localization settings, complemented by empirical ablation studies.Code:",
  "Introduction": "Estimating a sensor-suites ego-motion and workspace employing SimultaneousLocalization And Mapping (SLAM) techniques, has long been studied using a widevariety of sensing modalities, such as vision sensors , IMUs ,Global Positioning System (GPS) feeds , and laser ranging sensors.Unlike traditional, discrete-time approaches, which require careful synchronizationof sensory measurements due to the discretization of motion-parametrizing states,Continuous-Time Simultaneous Localization And Mapping (CTSLAM) offers native support for the fusion of asynchronous measurements due toits continuous-time parametrization that yields pose, velocity and accelerationestimates at arbitrary instances in time.Despite their advantages, CTSLAM approaches often entail higher computa-tional complexity than conventional approaches, which somewhat hinders their",
  "(c) Absolute Error": ": The motion estimates for Hyperion and a conventional NLLS solver inmagenta and white, respectively, converge to similar solutions close to ground truth(in green) in the localization setup, demonstrating robust convergence under poor pose(0.20 m/rad) and landmark initialization (0.20 m) with 1 px measurement noise. c. In general, visual setups also display higher volatility over absolute ones,with notable differences in estimates, especially towards the head and tails of theoptimized splines. In a similar vein, we found that these numerical instabilitiestend to have a destabilizing effect in loop graphs, posing considerable challengesto deploying the proposed system as a comprehensive SLAM system at present.",
  "Related Work": "The SLAM problem has long been researched as it comprises the core of roboticperception, with seminal works focusing on discrete-time, monocular and stereo setups , as well as works which propose fusion of additionalsensing information, such as inertial , and laser ranging . In additionto these feature-based approaches to SLAM, alternative powerful paradigmshave been proposed, such as direct methods and machine-learning basedtechniques have been demonstrated to be beneficial in some scenarios.In contrast to traditional, discrete-time SLAM methods that have beenwidely adopted, CTSLAM techniques have early on been demonstrated to exhibitgreat potential for high-fidelity and continuous estimates of motion , albeit posing fundamental scientific and algorithmic challenges.The key advantage of these methods lies in their inherent capability to fuseunsynchronized and asynchronous measurements (e.g. from a rolling shuttercamera or an event-based vision sensor) in the estimation processes, in contrastto conventional approaches. However, the wider adoption of CTSLAM techniquesremains impeded by challenges in finding more efficient motion representations,addressing convergence issues as well as overcoming computational limitations,missing out on the promise for high-fidelity motion and scene estimation.Following promising leads in fundamental SLAM research for single agents, anovel challenge and desire to deploy the same techniques in collaborative, multi-agent setups arose. Works such as proposed means to address centralizedmulti-agent SLAM, while investigated the advantages of variable-stereobaseline setups, which leverage the views from two agents to boost the accuracy ofhigh-altitude depth estimates. A common approach to solve NLLS optimizationsin a distributed fashion is based on Alternating Direction Method of Multipliers(ADMM) approaches similar to the work in and , which leverage the useof dual residuals to ensure consistent estimates across distributed multi-agentNLLS optimizations. Orthogonally, GBP approaches can performdistributed and asynchronous inference of states via an equivalent message-passingscheme, making them ideal candidates to address multi-agent SLAM.In this work, we build upon these ideas, consolidate a distributed GBP opti-mization with a continuous-time parametrization, and demonstrate the suitabilityof the novel, combined method in practical setups.",
  "Preliminaries": "All Simultaneous Localization And Mapping (SLAM) algorithms, in essence,aim to estimate an optimal, cost-minimizing set of optimizable parameters which are set to describe a collection of noisy sensory measurements m withthe highest possible accuracy. Specifically, in its NLLS formulation, this optimalsolution is found by minimization of the cumulative cost over a set of weightedresiduals r associated with measurements m stemming from a connected sensor",
  "WorldFrame": ": For every (valid) instance in time t, a collection of adjacent bases (in orange)gives rise to an individual segment (in green) of a cubic B-Spline. An interpolated poseat query time t is then obtained from the (cumulative) blending of these bases. s. A weighted residuals r at measurement time t is computed by comparing apredicted measurement m(t, s) with sensor-associated parameters s to ameasured one m(t) through the application of a metric (i.e. x x) and asubsequent weighting via the square-root information m according to",
  "r2 = rr = rmmr = rmr = r1m r,(2)": "where m and m are the covariance and precision matrix, respectively. Ulti-mately, we aim to minimize the sum over residuals stemming from all connectedsensors S and their associated measurements Ms with measurement times Ts. Tothis end, established NLLS solvers are commonly deployed in practice, whichaim to obtain the optimal, cost-minimizing parameters as defined below.",
  "Continuous-Time Motion": "In recent times, continuous-time formulations of conventional SLAM algorithmshave been studied by multiple authors , where the mostcommon motion parametrization is based on the concept of cubic B-Splines.This practice is rooted in several favorable properties of B-Splines, such as theircompact representation, finite support, analytic Jacobians, and their C2-continuityfor predicting instantaneous velocities and accelerations. In this work, we utilizesplit interpolations for world-to-body transformations T wb(t) SE(3), illustratedin , that separately parametrize rotations Rwb(t) SO(3) and translationstwb(t) R3. In particular, we compute transformations T wb(t) using",
  "j(t)tw(i+j) tw(i+j1),(6)": "where individual evaluations of T wb (t) depend on a collection of bases {Bi, . . . , Bi+k}(see ) and each basis Bi comprises a time ti, a quaternion qwi and a transla-tion twi. Above, k is the Degree of Freedom (DoF) of the B-/Z-Spline, rotationsRwb(t) are parametrized by quaternions qwb(t) and the expression j(t) servesas a placeholder for concrete interpolation coefficients found in .",
  "Continuous-Time Optimization": "In its probabilistic formulation , the non-linear minimization problem fromEq. (3) is equivalent to finding an optimal probability distribution that accountsfor all acquired measurements. Without loss of generality, one can also representthe problem as a product of factors fi eEi(i) with induced energies Ei(i),arriving at the modified expression to obtain the optimal parameters .",
  "(b) Message Passing": ": (a) Qualitative illustration of the factor graphs resulting from a continuous-timemotion parametrization. Notably, even one of the simplest factor archetypes, whichpurely relies on the motion-parameterizing nodes as well as some landmarks, introduces aconsiderable amount of loops in the continuous-time realm. This can be attributed to thefact that poses T wb(t) depend on multiple bases for any given time t. (b) Visualizationof the message passing algorithm between nodes and factors in a graph G. Gaussian Belief Propagation (GBP) As illustrated in a, Eqs. (3)and (7) expose equivalent visual representations as factor graphs, giving riseto compact and intuitive descriptions of complex probabilistic dependencieswhich are encoded into bipartite graphs G containing factors fi N 1(fi, fi)and nodes nj N(nj, nj) = N 1(nj, nj). Intuitively, the GBP algorithm,thus, comprises two steps to iteratively solve for the optimal solution to Eq. (7),namely node and factor updates with intermediate factor-to-node mfinj andnode-to-factor mnjfi message passing detailed in the following. Node Updates: The Gaussian nodes nj G with neighborhood N(nj) of connectedfactors fi N(nj) are updated by taking the product over incoming factor-to-node messages mfinj, which reduces to a simple summation of Gaussians for(linear) vector spaces, resulting in node beliefs B(nj) = N 1(nj, nj), where",
  "fiN(nj)finj.(13)": "Above, P(nj) = N 1(pnj, pnj) denotes a known prior on the node belief B(nj)which can be leveraged to better constrain the problem in practice. However,despite its simplicity and elegance, this straightforward approach can not beapplied to Lie groups G with associated tangent space g and their operators : G G g and : G g G extensively used in robotics. Hence, amore sophisticated approach is required to obtain the product of factor-to-nodemessages and to handle frame conversions between elements in the Lie group.To this end, we follow a similar strategy as Murai et al. and proposethe use of a Mixed Gaussian Representation (MGR) to parameterize Lie-group-valued nodes as nj N(nj, nj), where nj G and nj Rdim(g)dim(g),also assuming that incoming message mfinj N(finj, finj) take thesame form. In contrast to conventional vector spaces, the precision matrices areexpressed relative to their associated elements in the Lie group, implying that",
  "fiN(nj)\\fk0finj (18)": "alongside their respective linearization point 0nj to form the outgoing messagetriplet (0nj, +njfk, +njfk) destined for the factor fk. Note, however, thatanother reevaluation of Eqs. (14) and (15) is required to generate outgoingmessages that leverage the latest state estimate from Eq. (17). Factor Updates: In analogy to previous paragraphs, factors fi G depend on acollection of connected, neighboring nodes N(fi) which collectively determinethe linearization point 0fi for the residual evaluation rfi from Eq. (2). Thecomputation of the factor-to-node messages mfiN(fi) depends on the factorbeliefs B(fi) = N 1(0fi, 0fi) obtained from Eq. (12) as well as the auxiliary,intermediate quantities fi and fi (used in the next paragraph) defined as",
  "= PfiP ,(23)": "which also naturally extends to factors touching more than two nodes. Readersmight notice that our formulation differs from others found in the literature;this has the advantage that the formulations from Eqs. (20) and (21) allow forextremely efficient in-place permutations of fi and fi to marginalize many-node factors, limiting reallocations and recomputations. Mirroring the process inEq. (17), it is necessary to convert the incremental values fina and finainto the updated, outgoing frame of reference, to obtain the message mfina,relying on an optional step size fi. That is",
  "Rdim(g)dim(g).(25)": "Robust Residuals and Energies: It is well understood that the presence of outliersin the optimization problem from Eq. (3) causes substantial issues in terms ofconverging to a globally optimal solution due to the quadratic nature of theoccurring cost terms. The same holds in the context of GBP, where outliers arebound to heavily influence the found solution as well. To address this issue wetake inspiration from established NLLS approaches and apply robust lossfunctions to Eqs. (3) and (9), resulting in modified expressions for the robustenergies E and the robust optimal solution , provided for completeness only.",
  "Ji(29)": "Non-Gaussian Nodes: Another extension to conventional GBP lies in classifyingGaussian nodes as either pure constants or as stochastic variables. This distinctionstreamlines computation given that the message marginalization mnjfi acrossnodes via Cholesky decomposition exposes complexity O(n3) which quickly be-comes prohibitive. In particular, allowing non-variable parameters (e.g. extrinsic,intrinsic, offset etc.) to be treated as pure constants considerably reduces thedimensionality of the marginalization procedure without any drawbacks.",
  "Sensor Models": "In the following, we detail the employed absolute and visual sensor models, whereexpressions marked with indicate optimizable parameters. Conversely, unlessexplicitly mentioned, all other variables are considered known and constant. Absolute Sensor Model The predictions of absolute sensor measurementsms(tm, s) (e.g. absolute pose estimates extracted from AprilTags or mea-surements obtained from a Motion Capture (MoCap) system) are evaluatedusing Eq. (30) and subsequently compared against their corresponding truemeasurements by applying the metric in Eq. (31) where we make use of thelogarithmic map for elements in SO(3), and SU(2) respectively.",
  "R6(31)": "Visual Sensor Model Abstracting from the specific camera parameters, such asits intrinsics and its distortion model, we introduce the mapping () in Eq. (32)to infer individual projections of landmarks lw onto the image plane at time tm.For visual, pixel-based measurements, the metric is chosen to be equivalentto trivial Euclidean subtraction.",
  "System": "Overview Our system is designed to efficiently support both batch and windowedoptimizations, crucial for applications such as Bundle Adjustment (BA) andSLAM. Inspired by Ceres , it allows dynamic modification of nodes and factorsbetween solver calls, features multiple solving strategies, namely synchronous anddropout, determining the order of node and factor updates and leverages multi-threading to exploit the inherent parallelism of GBP methods, further boostingthe overall performance. Optimizable parameters are added and removed inanalogy to Ceres , with the notable distinction that GBP-based methodsnecessitate both an initial mean and covariance estimate for each parameter,unlike standard NLLS methods. This requirement, however, poses no practicalhindrance as conservative guesses on the covariance suffice to bootstrap thealgorithm. Symbolic Factors Targeting the long-standing challenge of obtaining efficient,analytical expressions and derivatives of spline-based motion parameterizationsand their associated cost factors, here, we leverage SymForce , a symbolic codegeneration framework, to completely automate this cumbersome, time-intensiveand error-prone process. Taking inspiration from Sommer et al. , who exploitedLie-group-specific properties to simplify spline-related mathematical expressions,we supercharge their recursive spline formulation by combining it with SymForce to obtain ultra-efficient C++ cost factor implementations. Furthermore,recognizing the broader relevance of automated factor generation for (continuous-time) robotics applications, our framework offers a comprehensive library featuringspline-based and standard factors designed to seamlessly interoperate with bothour framework and Ceres , facilitating widespread adoption. Update Strategies Amongst many possible update strategies, we focus ourattention on synchronous and dropout updates. Synchronous updates closelyfollow traditional NLLS algorithms, where residuals are completely re-evaluated inevery solver iteration and where (non-constant) nodes and factors are sequentiallyupdated in an alternating fashion to ensure optimal convergence. In contrastto traditional approaches, GBP, however, also accommodates selective updatesbased on a dropout strategy. That is, one assigns probabilities, dn for nodesand df for factors, dictating their likelihood of being updated in each iteration.Although this may slow convergence, it intentionally compensates for stabilitychallenges in loopy graphs while mimicking real-world scenarios with imperfectcommunication channels and delayed messages.",
  "Hyperion A fast, versatile continuous-time GBP framework11": "nj = fi = 0.7 across all cases. The simulated trajectories span 10 secondsand mimic real-world conditions with appropriate initial perturbations, sensoracquisition rates, and measurement noise levels. Our analysis focuses on bench-marking Hyperion against Ceres , an established, centralized NLLS solver, andproviding in-depth ablation studies on different aspects of the framework itself.",
  "Absolute Setup": "We commence our analysis with the absolute sensor configuration, capturingmeasurements akin to the ones stemming from a MoCap system, where individualfactors model direct observations of the underlying motion without auxiliaryparameters/nodes. As such, they embody the most fundamental category ofconstraints, suggesting that derived factors, such as landmark projections orrelative measurements, merely extend these elements, rendering them idealcandidates to analyze key properties of the proposed approach. In the following,we assume an acquisition rate of 40 Hz matching the real-world specifications.Our initial examination centers on comparing the convergence behavior of Hyperion against Ceres across varying levels of initial perturbations andmeasurement noise. To this end, both solvers are identically initialized to amodified ground truth motion, encompassing perturbations in rotations andtranslations. Furthermore, we make use of the synchronized vertex updates if notstated otherwise, aiming for a fair comparison against Ceres.The qualitative outcomes of this setup are illustrated in , demonstratingthat both Hyperion and Ceres converge to identical solutions even under substan-tial initial perturbation and considerable measurement noise. These observationsare quantified in Tabs. 1a and 1b, indicating that motion estimates obtainedfrom Hyperion and Ceres closely align across all levels of perturbation and noise.Message dropouts, mimicking imperfect communication, have also been shownto enhance convergence in loopy graphs. Hence, we study their effect onthe proposed GBP framework, summarizing key insights in a, revealing thatHyperion consistently converges toward identical solutions across various dropoutratios. Despite this, they also influence the required iteration count (i.e., updatesof all vertices), with every 10% increase in dropouts entailing an additional 2-4iterations until convergence is reached.Furthermore, we find that different motion parameterizations, specificallycubic Z- and B-Splines , also influence the convergence of the proposedapproach, which we summarize in b. A notable difference between thetraditional and our proposed solver lies in how motion parameterizations affectthe convergence speed of the latter. Our findings suggest that Z-Splines, which areinterpolating rather than approximating splines, typically yield better-conditionedsolutions since their bases must lie on the motion estimate itself, implicitlyconstraining the space of possible solutions. Naturally, the centralized NLLSsolver sets a baseline for the required iteration count to resolve an optimizationproblem, serving as a comparative standard for our method. Thus, while GBP-based approaches are inherently distributed, b indicates that they imposebetween 2 to 4 additional iterations to achieve convergence.",
  "(b) B-Spline Evaluation Timings": ": (a) Graph energy vs. number of iterations conditioned on the dropout probabilityin the absolute setup (batch). (b) Performance comparison between our symbolically,auto-generated and optimized B-Spline implementation and the recursively-defined,hand-crafted implementation used by Sommer et al. on an M3 Max @4.05GHz. Lastly, we benchmark Hyperions real-world performance using a handheldcamera to track a ChArUco board, capturing a 60-second trajectory at30 Hz with an iPhone 13 Pro. The analysis, detailed in , closely mirrorsour previous analysis. However, we find that real-world motions, which innatelyexpose a greater level of volatility than simulated ones, expose slower convergence.",
  "Localization Setup": "In this section, we analyze our approach in a localization setup, where we modelan image acquisition rate of 20 Hz and 50 randomized, observable landmarks ata range of 2 to 6 m across the modeled motion, mimicking real-world conditions.Overall, the results from the localization setup are consistent with our earlierobservations, as detailed in Figs. 6, 7a and 7c. However, a indicates thatthis setup is more agnostic to lower dropout ratios compared to the absolutecase. Furthermore, the disparity between different motion parameterizationsbecomes more pronounced over the previous setup as may be observed from",
  "Performance Analysis": "As highlighted in Sec. 3.5, our framework leverages SymForce to automatethe generation of analytic cost factors, aiming to outperform hand-crafted imple-mentations while mitigating development effort and programmatic errors. Thus,we test our auto-generated B-Spline implementation against Sommer et al.soptimized, hand-crafted version . The comparison, detailed in b, assessesthe timings of pose, velocity, and acceleration evaluations for B-Splines of orderk, within a Lie group L, potentially including the Jacobians /B with respectto the bases Bi. b shows that our automated spline implementationssignificantly outperform the manual ones from , with speedups ranging from2.43x to 110.31x. The performance gains are particularly notable in derivative",
  "(c) Convergence: Localization": ": (a) Graph energy vs. number of iterations conditioned on the dropout probabilityin the localization setup. Convergence comparison of different splines and solver variantsin the absolute setups (b) and the localization setup (c), respectively. evaluations, where employs automatic differentiation to compute the Ja-cobians. Considering the long-standing computational challenges of CTSLAMmethods, our automated approach not only reduces complexity but also narrowsthe performance divide with discrete-time SLAM.We further analyze the single-core performance of the proposed GBP solverwith Ceres , a conventional NLLS solver, within the previously discussedscenarios. For the absolute setup (400 pose measurements), Ceres averages 0.70ms per iteration, whereas our method averages 4.18 ms to update all graphvertices (i.e. about 6x slower). In the localization scenario (10,000 landmarkreprojections), Ceres requires 15 ms per iteration, compared to our solvers 112 msper iteration (i.e. 7.5x slower). This performance gap is, however, largely mitigatedby considering that Ceres excludes the (implicit) estimation of covariances,significantly reducing computational load, and that it has been extensively refinedby numerous contributors over the years. Moreover, the intrinsic distributednessand parallelizability of GBP along with potential enhancements from adaptivevertex updates, leveraging covariance estimates to trigger selective updates, arepromising avenues for further performance improvements. The above analysissuggests that, even in its present state, the proposed framework is capable ofreal-time execution for moderately sized problems.",
  "Conclusions": "In this work, we present a fast, versatile GBP framework that targets distributed,continuous-time SLAM applications and leverages message-passing algorithms toachieve probabilistic inference. We demonstrate the efficacy and competitivenessof our method against a conventional NLLS solver achieving similar conver-gence and performance properties in practical settings. We further provide acomprehensive library of high-performance implementations for continuous-timeSLAM, comprising motion parameterizations as well as common factors. Basedon our experiments, the proposed framework shows great promise in paving theway towards resilient, distributed, continuous-time SLAM solutions.",
  ". Lynen, S., Achtelik, M.W., Weiss, S., Chli, M., Siegwart, R.: A Robust and ModularMulti-sensor Fusion Approach Applied to MAV Navigation. In: IEEE Int. Conf.Int. Rob. Sys. pp. 39233929 (2013)": "22. Martiros, H., Miller, A., Bucki, N., Solliday, B., Kennedy, R., Zhu, J., Dang, T.,Pattison, D., Zheng, H., Tomic, T., Henry, P., Cross, G., VanderMey, J., Sun, A.,Wang, S., Holtz, K.: SymForce: Symbolic Computation and Code Generation forRobotics. In: Rob. Sc. Sys. (2022) 23. Mascaro, R., Teixeira, L., Hinzmann, T., Siegwart, R., Chli, M.: GOMSF: Graph-Optimization Based Multi-Sensor Fusion for robust UAV Pose Estimation. In: IEEEInt. Conf. Rob. Aut. pp. 14211428 (2018)"
}