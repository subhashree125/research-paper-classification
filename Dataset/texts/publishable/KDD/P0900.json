{
  "Abstract": "The problem of career trajectory prediction (CTP) aims to predictones future employer or job position. While several CTP meth-ods have been developed for this problem, we posit that none ofthese methods (1) jointly considers the mutual ternary dependencybetween three key units (i.e., user, position, and company) of acareer and (2) captures the characteristic shifts of key units incareer over time, leading to an inaccurate understanding of thejob movement patterns in the labor market. To address the abovechallenges, we propose a novel solution, named as CAPER, thatsolves the challenges via sophisticated temporal knowledge graph(TKG) modeling. It enables the utilization of a graph-structuredknowledge base with rich expressiveness, effectively preservingthe changes in job movement patterns. Furthermore, we devise anextrapolated career reasoning task on TKG for a realistic evaluation.The experiments on a real-world career trajectory dataset demon-strate that CAPER consistently and significantly outperforms fourbaselines, two recent TKG reasoning methods, and five state-of-the-art CTP methods in predicting ones future companies andpositionsi.e., on average, yielding 6.80% and 34.58% more accuratepredictions, respectively. The codebase of CAPER is available at",
  "Corresponding author": "Permission to make digital or hard copies of all or part of this work for personal orclassroom use is granted without fee provided that copies are not made or distributedfor profit or commercial advantage and that copies bear this notice and the full citationon the first page. Copyrights for third-party components of this work must be honored.For all other uses, contact the owner/author(s).KDD 25, August 37, 2025, Toronto, ON, Canada 2025 Copyright held by the owner/author(s).ACM ISBN 979-8-4007-1245-6/25/08 Temporal Knowledge Graph and Ternary Relationship. In Proceedings ofthe 31st ACM SIGKDD Conference on Knowledge Discovery and Data MiningV.1 (KDD 25), August 37, 2025, Toronto, ON, Canada. ACM, New York, NY,USA, 12 pages.",
  "Introduction": "Background. With the advent of online professional network plat-forms (e.g., LinkedIn and Indeed), there has been a surge of researchefforts in understanding and improving diverse tasks in the labormarket , such as talent recruitment ,talent demand/supply prediction , and career trajectoryprediction . With the fast-evolving job market and itsimmediate benefits to both employees and employers, in particular,the problem of Career Trajectory Prediction (CTP) (i.e., predictones future employer or job position) has increasingly attracted at-tention in recent years , especially when the life-longcareer movement has become a new norm (e.g., according to theU.S. Bureau of Labor Statistics, people in the U.S. hold an average of8.6 jobs from ages 18 through 341). Effective solutions to the CTPproblem can bring significant benefits to various groups, includinggovernments, companies, and job seekers. Governments can devisebetter policies through an in-depth understanding of the labor mar-ket, while companies can refine their recruitment and retentionstrategies. Also, job seekers can design their own career paths moreeffectively by identifying promising future career opportunities.Motivated by such wide applicability, several CTP methods havebeen developed recently . In a nutshell, they weredesigned based on the assumption that users tend to have commonpatterns in career movements. Specifically, they divide each userscareer trajectory into his/her transition sequences of companies andpositions. Then, they capture the frequent transition patterns overusers with respect to companies and positions via graph recurrentneural networks (GRNN) models (e.g., long short-term memory(LSTM), gated recurrent unit (GRU), and Transformer ). Finally,these methods predict a users next career movement, including afuture company and a position, based on the learned GRNN model.",
  ": An extrapolated career reasoning task on the inputtemporal knowledge graph consisting of career trajectories": "a mutual ternary dependency exists among three key units of acareer\"i.e., (user, position, company, timestamp); (C2: TemporalDynamics) the characteristics per unit may change over time.Regarding (C1), note that each career represents an intense in-teraction between a user, a position, and a company, which arehighly related with each other. For instance, a current career (Bob,back-end engineer, Amazon, 2023) can be regarded as an output ofjointly considering Bobs past experience (e.g., computer science),Amazons industrial characteristics (e.g., technology company), andthe back-end engineers required role (e.g., distributed program-ming). Meanwhile, only one method attempted to directlymodel mutual dependency between two units, i.e., company andposition. However, omitting users in modeling careers is not a goodidea since users often play a key role in career decisions .Regarding (C2), it is important to consider the timestamp, inwhich each career occurred, to address the dynamic nature of thelabor market. Since each users experience evolves over time, his/herdifferent careers at different timestamps should be regarded as theconsequence of the change in his/her characteristic. Suppose thatBob started his career at Meta as a back-end developer intern in2018 and then moved to Amazon as a back-end engineer in 2019.This suggests that Bobs internship experience at Meta influenced(partially) his move to Amazon. Furthermore, each companys char-acteristics can also alter over time due to various societal/economicissues (e.g., changes in industry trends). For instance, Meta startedas a social-media-service business in 2004, but since 2021, its mainfocus has (reportedly) shifted to the metaverse. However, existingmethods use the temporal dimension to only identifyeach users career sequence, ignoring the characteristic shifts ofkey units in career over time. Proposed Ideas. To address the above challenges, we propose anovel solution, named as CAPER (CAreer trajectory Predictionapproach based on tEmporal knowledge gRaph), which jointlylearns the mutual dependency for the ternary relationships and thecharacteristic shifts over time. It consists of three key modules: Modeling Career Trajectories (for (C1) and (C2)): We modelthe career trajectories as a form of a knowledge graph (KG),preserving the ternary relationships on career information. Toadd the temporal dimension, we span the KG as a sequence oftemporal KG (TKG) snapshots with timestamps, each snapshotof which contains the careers that co-occur at a timestamp. Learning Mutual Dependency (for (C1)): Given each KGsnapshot, we obtain users, positions, and companies as low-dimensional vectors (i.e., embeddings) by aggregating their careerinformation in the input KG snapshot. Here, we represent the same user and company at different timestamps as different tem-poral embeddings, while representing the position as a unifiedembedding regardless of timestamps. We assume that, unlike theuser and company units, the position unit has static properties,which will be discussed in Sections 4 and 5.",
  "Learning Temporal Dynamics (for (C2)): Based on temporalembeddings, we capture the changes in the characteristics ofusers and companies between previous and current timestamps": "Finally, we learn the embeddings of users, companies, and po-sitions so that the likelihood of each career (i.e., ground truth) ateach timestamp is maximized. We show experimentally that (1) ourmodules successfully solve the challenges of existing methods and(2) CAPER substantially outperforms the state-of-the-art CTP meth-ods, including NEMO , HCPNN , AHEAD , TACTP ,and NAOMI . For a realistic evaluation, we devise an additionalextrapolation reasoning task (see ) that aims to forecastthe next careers that are likely to occur at the non-existent futuretimestamps in the input TKG, which will be elaborated in .",
  "Contributions. Our contributions are as follows:": "New Perspective: We model the career trajectories of users as aTKG and then formulate the CTP problem as the extrapolatedreasoning task on TKG. We are the first who leverages the richexpressiveness of a graph-structured knowledge base for ternaryrelationships to address the CTP problem. Effective CTP Approach: CAPER jointly learns the mutualdependency for the ternary relationships and the characteris-tic shifts over time via TKG modeling, thereby successfullyaddressing the challenges of existing methods. Comprehensive Validation: Through extensive experimentsusing a real-world career trajectory dataset, we show that CA-PER consistently and significantly outperforms the state-of-the-art CTP methods, yielding 6.80% and 34.58% more-accuratecompany and position prediction on average, respectively,compared to the best competitors.",
  "Related Work": "CTP Methods. Career trajectory prediction (CTP) is an essentialtask of predicting ones next position and company . Liet al. proposed a way to encode different types of entities (e.g.,employees, skills, and companies) by integrating the profile contextas well as career path dynamics. Meng et al. leveraged a hier-archical neural network with the attention mechanism to jointlycharacterize internal and external career transition. Wang et al. devised a unified time-aware framework that predicts not only thenext company and position but also ones transition timing. Zhanget al. utilized the mutual dependency for pairwise relationshipsof position and company via heterogeneous graph modeling. Lastly, predicts a future career pathway via the Transformer mech-anism and neural collaborative reasoning by jointly utilizinggraph and BERT embeddings. In contrast to these previousworks, our work proposes a TKG-enhanced CTP approach that canjointly learn the mutual dependency for ternary relationships andthe characteristic shifts over time. The main differences between theexisting CTP methods and CAPER will be elaborated in .4.",
  "Period1968 20201968 20152016 2020Granularityyearyearyear": "Meanwhile, several attempts have been made tomodel the matching between a job posting and a resume, which canbe applied to the job or talent recommendation problems. However,as discussed in , we believe that these problems have differentgoals from that of the CTP problem, which requires an understand-ing of the underlying job movement patterns in the labor market. TKG Embedding Methods. Temporal knowledge graph embed-ding (TKGE) methods aim to represent entities and relations ina given TKG into low-dimensional embeddings, which preservethe structural properties in the TKG. According to , re-cent TKGE methods were designed for the purpose of addressingan interpolation task or an extrapolationtask . Our extrapolated career reasoning taskis inspired by the extrapolation task in the TKGE research. However,they are inappropriate for the career trajectory dataset, failing tofully leverage the intrinsic characteristics of the job market.",
  "Preliminaries3.1Data Description": "In this study, we obtained a real-world career trajectory datasetfrom a global career platform, FutureFit AI2. From this dataset,we randomly extracted resumes (i.e., users) with at least five validcareer transitions in the U.S. from 1968 to 2020. In total, we ob-tained 333K+ valid resumes. Each resume includes a user-relatedinformation (e.g., user ID, demographics, and education history),career-transition information (e.g., companies and positions), andtimestamps (i.e., starting and ending date of each work experience).Any private elements in resumes were pre-anonymized. summarizes statistics about our final dataset after pre-processing.The pre-processing procedures, additional statistics, and a sharingstatement are presented in the Appendix.",
  "The Problem Formulation: CTP": "Let U = {1,2, ,}, P = {1, 2, , }, C = {1,2, ,},and = {1,2, , } denote sets of users, positions, com-panies, and timestamps, respectively. In our dataset, the gran-ularity of a timestamp is the year. Also, we denote a set of ca-reer trajectories across all users as D = {D1, D2, , D }.Each user s trajectory is denoted as D = {(, (,1),(,1),(,1)), (, (,2),(,2),(,2)), , (, (, ),(, ),(, ))},where (, (,),(,),(,)) represents the -th career of, i.e., worked in a company (,) with a position (,) at a times-tamp (,), and indicates the total length of the working interval",
  "for (i.e., the difference between the first and the last timestampsin D ). Then, our problem can be defined as follows :": "Problem 1 (Career Trajectory Prediction (CTP)). Givena query user and her/his career trajectory D , predict the next careers of, including companies {(,+1),(,+2), ,(,+)}and positions {(,+1), (,+2), , (,+)}. Next, we formulate the CTP problem as an extrapolated ca-reer reasoning task on a temporal knowledge graph (TKG). LetG = {G1, G2, , G } denotes a TKG that consists of a se-quence of knowledge graph (KG) snapshots with timestamps basedon career trajectories. Each KG snapshot G = {(, ,,)}at is a bidirected multi-relational graph and stores the careersthat co-occur at . For a career (, ,,), in a KG snapshotG, the user (i.e., subject entity) and the company (i.e., objectentity) are represented as nodes, and the position (i.e., relation)is represented as a label of an (undirected) edge between and (see ). Such a TKG modeling to career trajectories willbe more elaborated in .2. Then, the CTP problem can berestated to the extrapolated career reasoning task as follows: Problem 2 (Extrapolated Career Reasoning). Givena TKG G = {G1, G2, , G } and a query user , predict theunknown (next) careers of that are likely to occur at future timestamps {(+1),(+2), ,(+)} in the input TKG G.",
  "The Proposed Approach: CAPER4.1Overview": "In this section, we present the overall procedure of CAPER. Asshown in , CAPER performs the following three key mod-ules: (M1) modeling career trajectories, (M2) learning mutual de-pendency, and (M3) learning temporal dynamics.Given a set D of career trajectories across all users, in (M1),CAPER models them as a sequence of KG snapshots with times-tamps, G = {G1, G2, , G }. Then, CAPER represents the enti-ties (i.e., users and companies) and relations (i.e., positions) in G as-dimensional embeddings. Specifically, it constructs the same user",
  "(M2)(M2)(M2)": ": Overview of CAPER, which consists of three key modules: (M1) modeling career trajectories, (M2) learning mutualdependency, and (M3) learning temporal dynamics. Given a career (1, 5, 3, 9), CAPER infers the corresponding careerslikelihood using the temporal and evolution embeddings of 1 and 3 before 9 and the embedding of 5. and company at different timestamps as different temporalembeddings u () and c(), respectively, while constructingthe same position as a single unified embedding p regardlessof timestamps. The intuition behind this design choice is to differ-entiate the dynamic natures of users and companies from the staticnature of positions, which will be elaborated in .2.Next, CAPER repeatedly performs (M2) and (M3) whenever eachKG snapshot in G is given sequentially. Given a KG snapshot G,in (M2), CAPER updates the temporal embedding u () of with respect to so that the embedding can preserve the mutualdependencies on his/her career; in the same manner, it updatesc() of with respect to . Using u (), in (M3), CAPERobtains the evolution embedding u () of with respect to ,which captures the characteristic shift of between the previousand current timestamps 1 and ; in the same manner, it ob-tains c() of with respect to using c(). Then, u ()and c() with respect to are used to initialize the temporalembeddings u (+1) and c(+1) with respect to (+1).Lastly, given a query career (, ,,+1) in G+1, CAPERlearns the temporal and evolution embeddings of and before+1 and the embedding of via the negative log-likelihood (NLL)loss so that the corresponding careers likelihood can be maximized.",
  "Key Modules": "(M1) Modeling Career Trajectories. This module aims to modelthe given career trajectories as a graph structure that can simultane-ously represent the mutual dependency for the ternary relationshipson a user, a position, and a company (i.e., (C1)) and the changes incharacteristics of users and companies over time (i.e., (C2)).To address (C1), we first construct the career trajectories as a KG,where the users and companies are represented as nodes, andthe positions are represented as labels of the edges between and . Suppose that there are the following career trajectories oftwo users 1 and 2 (see -(a)): D1 = {(1, Ph.D. internship,Amazon, 2014), (1, software engineer, Google, 2015), , (1, soft-ware engineer, Google, 2019), (1, senior develop engineer, Meta,",
  ": A toy example of modeling career trajectories": "2020)} and D2 = {(2, research intern, Google, 2015), (2, as-sistant professor, University of Oxford, 2016), , (2, assistantprofessor, University of Oxford, 2020)}. -(b) shows a KGconstructed based on the career trajectories. By doing so, we can suc-cessfully preserve the intense interaction on three highly-correlatedunits, i.e., a user, a company, and a position, which form each career.The built KG only contains the actual careers of the users.To address (C2), we then span the input KG as a sequence of KGsnapshots with timestamps, each of which contains the careers thatco-occur at a specific timestamp. -(c) shows KG snapshotswith timestamps constructed by the aforementioned career trajec-tories of two users. For example, G2015 includes both careers (1,software engineer, Google, 2015) and (2, research intern, Google,2015) that co-occur at 2015. By doing so, we can separately pre-serve the mutual dependency on careers that co-occur at a specifictimestamp, capturing characteristic shifts over time. To the best of",
  "our knowledge, none of the existing methods consider the fact thatthe characteristics of some units can alter over time": "(M2) Learning Mutual Dependency. This module aims to reflectthe mutual dependency on careers that co-occur at into tem-poral embeddings of users and companies with respect to . Asmentioned above, the intuition behind this design choice is thateach career reveals a high correlation between a user, a position,and a company in the corresponding career.Therefore, we design a timestamp-aware graph convolutionalnetworks (GCN) that learns the mutual dependency on careers ata timestamp. CAPER obtains each user s (resp. each companys) temporal embedding u () (resp. c()) with respect to by aggregating career information of (resp. ) at :",
  "(u ()1 p),": "(2)where u ()0, c()0, u ()0, c ()0, and p are randomlyinitialized without using any of their handcrafted features. In ad-dition, and {1, , } represent the element-wise productand the -th GCN layer, respectively. Also, N (G) represents aset of company-position pairs (, ) included in s careersat . Similarly, N (G) represents a set of user-position pairs(, ) included in s careers at . In addition, is a normaliza-tion constant, which is normally defined by the degree of nodes inGCNs . Finally, CAPER considers u () (resp.c()) obtained from the -th GCN layer as s (resp. s) finaltemporal embedding u () (resp. c()) with respect to .Here, we note that, unlike companies, users have few careers ateach timestamp. On our real-world dataset, we confirmed that ineach KG snapshot G, each company is included in 29.78 careerson average, while each user only has 2.37 careers on average.3 Inthis case, accordingly, there remains a question of whether eachusers temporal embedding with respect to each timestamp is infor-mative. Basically, we admit that each users temporal embeddingwith respect to the timestamp, where he/she had the first career,may not be that informative. However, we believe that like a usersexperience evolves while increasing his/her working interval overtime, it is a natural way that the users temporal embeddings alsoevolve over time gradually and thus become more informative.Furthermore, recall that each position is modeled as a label of anedge between two entities of a user and a company in the input TKG.Therefore, following the existing TKG-based GCN mechanism (e.g.,), we only use each position embedding as the aggregatedinformation when obtaining the temporal embeddings of users andcompanies included in the corresponding positions careers.",
  "(M3) Learning Temporal Dynamics. This module aims to capturethe characteristic shifts of users and companies between the previ-ous timestamp 1 and the current timestamp . The intuition": "3As shown in , when a user 1s total length of the working interval is 3and he /she has four careers for 3 years (i.e., D1 = {(1, 10,7,6), (1, 10,7,7),(1, 5,5,7), (1, 5,5,8)}), the average number of 1s careers per timestampbecomes 1.33 (spec., (1 (for 6) + 2 (for 7) +1 (for 8)) / 3). behind this design choice is that each users experience evolvesover time and each companys characteristics can also change overtime . On the other hand, we assume that most positionshave static properties so that their characteristics do not changesignificantly even over time.4 Thats why we do not consider char-acteristic shifts of positions in (M3). We experimentally show in that not considering the characteristic shifts of positionsis more effective than considering them.We design a GRNN that learns the evolution patterns of usersand companies over time. Specifically, CAPER obtains each users (resp. each company s) evolution embedding u () (resp.c()) with respect to as follows:",
  "u () = GRNN( u (1), u ()),(3)": "c() = GRNN(c(1), c()),(4)where GRNN indicates a recurrent function; CAPER can employ anyfunctions, such as recurrent neural network (RNN), gated recurrentunit (GRU), and long short-term memory (LSTM). Also, u (1)and c(1) represents the evolution embedding of and ,respectively, with respect to the previous timestamp 1. Here,u ((,0)) with respect to (,0) (i.e., a timestamp right befores first timestamp) is randomly initialized. In the same manner,c((,0)) with respect to (,0) is randomly initialized as well. Seethe Appendix for a detailed implementation of GRNN.",
  "(|,) =exp((, ,)) exp((, ,)) ,(7)": "where (|,) and (|,) represent the likelihood be-tween and and that between and with respect to ,respectively. Also, and represent the companies and posi-tions, respectively, which have never been included in s careersbefore . Intuitively, the goal of the NLL loss is to achieve a highlikelihood for each existent career and a low likelihood for eachnon-existent career. By doing so, CAPER can accurately preserve 4One can still argue that the characteristics of some positions may change sig-nificantly over time, e.g., due to advances in technology, the role of data scientistsis expanding to a wide variety of fields. However, it is not trivial to identify suchindividual positions. Thus, we leave it as future work.",
  "the mutual dependency of units and their characteristic shifts overtime in the embedding space": "Multi-Step Inference. Given a TKG G = {G1, G2, , G }, aquery user , and the number of future timestamps to predict, CAPER sequentially predicts the top- companies and top-positions of that are most likely to occur per future timestamp,i.e., (+1),(+2), ,(+), via Eq. (5). To this end, we obtain thetemporal and evolution embeddings of and all companies with respect to each future timestamp, and the embeddings of allpositions by performing GCN and GRNN encoders repeatedly.CAPER requires no additional training during this multi-stepinference process. Instead, since we do not know the career tra-jectories after , the only extra task is to infer KG snapshots withrespect to future timestamps that can be used for the GCN encoder.To obtain the temporal embeddings with respect to (+1), we usean already-built KG snapshot G with respect to , which containsthe actual careers of the users. In contrast, to obtain the temporalembeddings after (+1), we sequentially construct KG snapshots,i.e., G(+1) , G(+2) , , G(+(1)) , based on each users inferredcareers, which consist of two pairs, i.e., (1st ranked company, 1stranked position) and (2nd ranked company, 1st ranked position),between his/her top-2 companies and his/her top-1 position pre-dicted at the previous timestamp. This design choice is based onthe following observations: (1) the number of companies is muchlarger than the number of positions, as shown in , and (2)each user has an average of 2.37 careers in each KG snapshot.As in other CTP work , this paper does not as-sume the inductive setting typically used to address the predictionproblem for new users, companies, and positions. However, as CA-PER is designed based on KG-based GCN encoders, it can simplyleverage the inductive ability inherent in GCNs by utilizingembeddings of existing neighbor nodes for new nodes. We leavethe sophisticated design for an inductive setting as future work.",
  "Novelty. We further highlight the novelty of CAPER in con-trast to state-of-the-art CTP methods": "Mutual Dependency. NAOMI preserves the structural de-pendency between positions or companies, while AHEAD preserves the mutual dependency for pairwise relationships be-tween each position and each company, disregarding ternary re-lationships in both cases. Notably, AHEAD represents thecareer trajectories as a heterogeneous graph, where nodes indicatecompanies and positions, and edges indicate the career transitionsbetween two companies or positions and whether a position be-longs to a company . However, we claim that omitting usersin modeling careers is not a good idea since users often play a keyrole in career decisions . Conversely, both HCPNN andTACTP model a users company sequence by leveraging jobsequences and/or features (e.g., number of social connections andself-introduction), and differ significantly from CAPER in that: (1)they fail to accurately represent the position and user embeddings,as they only model users company sequences; (2) they are unableto benefit from the graph structure, which includes high-order re-lationships (i.e., more than 2 hops) among users, companies, andpositions. Thus, we argue that none of the existing methods jointly",
  "model explicit and implicit correlation among the three units of auser, a position, and a company, which is critically important": "Characteristic Shifts. Existing methods of em-ployed RNN encoders to learn the career sequences of users. Thisdesign aims to capture common patterns in career movements amongusers, rather than to capture the evolution in both of users andcompanies over time. Under such a design, each company is rep-resented as a single learnable embedding , whileeach user is represented as a single static (i.e., non-learnable) fea-ture . Accordingly, they cannot capture the characteristicsof each user/company at each timestamp, being unable to modeltheir evolution. Thus, we argue that none of the existing methodsconsider the characteristic shifts of users and companies over time. 4.4.2Complexity. CAPER employs GCN and GRNN to learn mutualdependency and temporal dynamics, respectively. As a result, thetime complexity of CAPER is expressed as () +(),where indicates the number of timestamps (i.e., the number of KGsnapshots). Specifically, the time complexity of GCN is defined as((+ +(+1)) , where , , , and represent the numberof GCN layers, the number of nodes (i.e., users and companies),the number of edges (i.e., positions), and the dimensionality ofembeddings, respectively. In addition, the time complexity of GRNNis given by ( (( + 1) + )) , where and indicatethe input and hidden size of RNN, respectively.Here, one might have concerns about the computational over-head of CAPER. Considering the architecture that repeats GCN andGRNN times, the value of can impact the performance of CAPER.However, we observed two key points: (1) the average inferencetime per user is only 0.89 msec with CAPER, suggesting that itprovides real-time predictions, and (2) CAPER shows linear scala-bility as the number of users increases. Moreover, we can mitigatethe computational overhead of CAPER on large datasets withoutsignificant accuracy loss by reducing the value of for training eachtemporal embedding, as validated in the online appendix.",
  "CAPER: Enhancing Career Trajectory Prediction using Temporal Knowledge Graph and Ternary RelationshipKDD 25, August 37, 2025, Toronto, ON, Canada": "Chuan Qin, Hengshu Zhu, Tong Xu, Chen Zhu, Chao Ma, Enhong Chen, and HuiXiong. 2020. An enhanced neural network approach to person-job fit in talentrecruitment. ACM Transactions on Information Systems (TOIS) 38, 2 (2020), 133. Zhiwei Qin, Liangjie Hong, Rui Song, Hongtu Zhu, Mohammed Korayem, HaiyanLuo, and Michael I. Jordan. 2020. Decision Intelligence and Analytics for OnlineMarketplaces: Jobs, Ridesharing, Retail and Beyond. In Proceedings of the ACMSIGKDD International Conference on Knowledge Discovery & Data Mining (KDD).48984899. Rohan Ramanath, Hakan Inan, Gungor Polatkan, Bo Hu, Qi Guo, Cagri Ozcaglar,Xianren Wu, Krishnaram Kenthapadi, and Sahin Cem Geyik. 2018. TowardsDeep and Representation Learning for Talent Search at LinkedIn. In Proceedingsof the ACM International Conference on Information and Knowledge Management(CIKM). 22532261. Nils Reimers and Iryna Gurevych. 2019. Sentence-BERT: Sentence Embeddingsusing Siamese BERT-Networks. In Proceedings of the Conference on EmpiricalMethods in Natural Language Processing (EMNLP). 39803990.",
  ": An example to show the limitations of the random-sampling-based evaluation employed in existing studies": "Consider that depicts the career trajectories of threeusers. Suppose that the career trajectories of two users, A and B,are used for the training set, while another user Cs career trajec-tory is used for the test set. In this case, where test user C has acareer trajectory from 1999 to 2010, a CTP method should predictcareers that occur at existent past timestamps in the training set.Specifically, since test user C has his/her last career at 2010 for somereason (e.g., retirement), he/she doesnt need predictions for thenext career anymore. We believe such an evaluation is not realisticin terms of real-world applications (e.g., future career prediction).We found that among all 333K users on our dataset (see ),the proportion of users whose careers do not exist at the test times-tamps (like user C) is 55.06% (i.e., 149K users), which indicates theycan be prone to be inappropriately sampled as test users under therandom-sampling-based evaluation. To address this limitation, weconsider only users (e.g., A and B in ) who have careers atthe test timestamps (i.e., from 2016 to 2020) as test users, and theircareers (e.g., Google, Meta, EPFL, and Carnegie Melon Universityin ) as the ground truth for evaluation.",
  "Results": "For EQ2, EQ3, and EQ4, we only show the results of CAPER whenthe value of is 1 (i.e., career prediction for the immediate nextyear). However, we confirmed that the performance for M= isconsistent with that for M=1 (see online appendix). (EQ1) Comparison with 11 Competitors. We conducted compar-ative experiments on our career trajectory dataset. to demonstratethe superiority of CAPER over the four baselines, two TKG reason-ing methods, and five state-of-the-art CTP methods. In , thevalues in boldface and underlined indicate the best and 2nd bestaccuracies in each column, respectively.From , we can see that CAPER consistently and signifi-cantly outperforms all competitors in almost all cases. Overall, CA-PER yields 6.80% and 34.58% more-accurate company and positionpredictions on average, respectively, compared to the best com-petitor (i.e., TACTP). Specifically, for company prediction, CAPERyields up to 20.29% and 6.91% higher MRR than the best competi-tor when the values of are 1 and 2 (i.e., short-term predictions,which are the most practical scenario in our setting), respectively.For long-term predictions (i.e., =3,4,5), CAPER also provides ac-curacy slightly better than or comparable to the best competitor.Additionally, for position prediction, CAPER yields up to 61.55%,",
  "CAPER59.9248.6643.2843.1544.0350.8740.6235.7435.6236.6369.6956.5650.2750.4250.7776.3562.4756.6156.5356.58": "34.64%, 23.65%, 25.69%, and 32.06% higher MRR than the best com-petitor when the values of are 1, 2, 3, 4, and 5, respectively. Weattribute the superiority of CAPER to its sophisticated career mod-eling and capturing of characteristic shifts of entities over time.That is, it validates our claims for the significance of consideringmutual dependency and characteristic shifts in the CTP problem,as discussed in .4. (EQ2) Effectiveness of TKG Modeling. In (M1) of .2,we modeled the given career trajectories as a TKG to representthe mutual dependency between key units and their characteris-tic shifts over time. For (EQ2), we compare CAPER with its twovariants: CAPERKG models the career trajectories as a KG withoutconsideration of temporal dimension; and CAPERHetG models thecareer trajectories as a heterogenous graph, where nodes indicatecompanies and positions, and edges indicate the career transitionsbetween two companies or two positions and whether a position belongs to a company . As shown in -(i), we see that CA-PER consistently outperforms its two variants. For company (resp.position) prediction, CAPER yields up to 10.35% and 15.48% (resp.28.94% and 30.97%) higher MRR than CAPERKG and CAPERHetG,respectively. For position prediction, CAPER yields up to 28.94%and 30.97% higher MRR than CAPERKG and CAPERHetG, respec-tively. It shows that not only preserving the mutual dependency forthe ternary relationships on users, positions, and companies (i.e.,CAPER and CAPERKG vs. CAPERHetG) but also adding a temporaldimension to KG (i.e., CAPER vs. CAPERKG) is helpful in bettermodeling career trajectories. (EQ3) Effectiveness of Learning Mutual Dependency. In (M2)of .2, we designed a GCN encoder to learn mutual de-pendencies for the ternary relationships of a user, a position, anda company. For (EQ3), we compare CAPER with its variant CA-PERw/o GCN (i.e., not employing a GCN encoder and forwardingrandomly initialized temporal embeddings into the GRNN encoder",
  "@": "without aggregating career information). -(ii) shows that CA-PER dramatically outperforms CAPERw/o GCN. The results showthat our convolutional layer benefits from learning mutual depen-dency for ternary relationships. (EQ4) Effectiveness of Learning Characteristic Shifts. In (M3)of .2, we represented the same unit (spec., user and com-pany) at different timestamps as different temporal embeddings.Based on the temporal embeddings, we then reflected the changesin the characteristics of users and companies in their evolutionembeddings gradually. To verify the effectiveness of both ideas, weconduct experiments to answer the two sub-questions: (EQ4-1) Is it effective to consider characteristic shifts of all units? (EQ4-2) Is it effective to model the evolution over time of unitsbased on GRNN?For (EQ4-1), we compare the accuracy of the following 4 vari-ants of CAPER: (1) CAPERall represents all units at different times-tamps as different temporal embeddings; (2) CAPERw/o u repre-sents each user as a single embedding regardless of timestamps;(3) CAPERw/o c represents each company as a single embeddingregardless of timestamps; (4) CAPERw/o p represents each posi-tion as a single embedding regardless of timestamps. To implementCAPERall, we add another GRNN encoder for positions in .Here, CAPERw/o p is the same as the final version of CAPER.As shown in -(iii), CAPERw/o p consistently outperformsother variants of CAPER. Notably, we see that for position predic-tion, using evolution embeddings of positions adversely affects theperformance of CAPER. On the other hand, we note that jointlyconsidering the characteristic shifts of users and companies is con-sistently helpful for solving CTP problem. We conjecture that thereason of this phenomenon is that, unlike users and companies, thecharacteristics of positions tend to have a more-static nature thatdoes not change significantly over time. For instance, the natureof software engineer\" position remains more static between 2010and 2020 (despite new positions getting created) while the skills ofusers or characteristics of companies change more dynamically.For (EQ4-2), we compare CAPER (i.e., CAPERLSTM) with itsvariant CAPERw/o GRNN, which does not employ any GRNN en-coders and thus cannot construct evolution embeddings of users and companies. -(iv) illustrates the importance of learningthe evolution of users and companies over time by sequentiallyaccumulating their past career information. Additionally, we foundthat employing RNN or GRU encoders yields comparable results.Conversely, we observed that the Transformer encoder exhibitslimited effectiveness in terms of accuracy in the CTP domain. Thissuggests that the sequential order of each users career is particu-larly important in this domain. From the results, we believe thatour superior performance can be attributed to our novel modelingand utilization of CTP data, rather than specific techniques.",
  "Conclusions": "In this work, we found that existing CTP methods fail to jointlyconsider the mutual dependency for ternary relationships amonga user, a position, and a company, and the characteristic shiftsover time. To address the challenges, we proposed a novel CTPapproach, CAPER, that consists of three key modules: (M1) mod-eling career trajectories, (M2) learning mutual dependency, and(M3) learning temporal dynamics. Furthermore, we formulated theCTP problem as the extrapolated career reasoning task on TKG,which aims to forecast the next careers that are likely to occur atnon-existent future timestamps in the input TKG. Via experimentsusing a real-world career trajectory dataset, we demonstrated thatCAPER consistently and significantly outperforms 4 baselines, 2recent TKG reasoning methods, and 5 state-of-the-art CTP methods. The work of Sang-Wook Kim was supported by the Institute ofInformation & communications Technology Planning & Evaluation(IITP) grant funded by the Korea government(MSIT) (No.2022-0-00352 and No.RS-2022-00155586, A High-Performance Big-HypergraphMining Platform for Real-World Downstream Tasks). Yeon-ChangLees work was supported by the Institute of Information & commu-nications Technology Planning & Evaluation (IITP) grant, fundedby the Korea government (MSIT) (No. RS-2020-II201336, ArtificialIntelligence Graduate School Program (UNIST)). Dongwon Leeswas supported by NSF award #1934782. The dataset was providedby FutureFit AI under a Memorandum of Understanding.",
  "KDD 25, August 37, 2025, Toronto, ON, CanadaYeon-Chang Lee, JaeHyun Lee, Michiharu Yamashita, Dongwon Lee, & Sang-Wook Kim": "Elias Abdollahnejad, Marilynn Kalman, and Behrouz H Far. 2021. A deep learningbert-based approach to person-job fit in talent recruitment. In Proceedings of theInternational Conference on Computational Science and Computational Intelligence(CSCI). 98104. Shuqing Bian, Xu Chen, Wayne Xin Zhao, Kun Zhou, Yupeng Hou, Yang Song,Tao Zhang, and Ji-Rong Wen. 2020. Learning to Match Jobs with Resumes fromSparse Interaction Data using Multi-View Co-Teaching Network. In Proceedingsof the ACM International Conference on Information and Knowledge Management(CIKM). 6574. Shuqing Bian, Wayne Xin Zhao, Yang Song, Tao Zhang, and Ji-Rong Wen. 2019.Domain Adaptation for Person-Job Fit with Transferable Deep Global Match Net-work. In Proceedings of the Conference on Empirical Methods in Natural LanguageProcessing (EMNLP). 48094819.",
  "Michele A. Brando and Mirella M. Moro. 2017. Social professional networks: Asurvey and taxonomy. Computer Communications 100 (2017), 2031": "Xi Chen, Yiqun Liu, Liang Zhang, and Krishnaram Kenthapadi. 2018. HowLinkedIn economic graph bonds information and product: applications inLinkedIn salary. In Proceedings of the ACM International Conference on KnowledgeDiscovery and Data Mining (KDD). 120129. Zhongwu Chen, Chengjin Xu, Fenglong Su, Zhen Huang, and Yong Dou. 2023.Meta-Learning Based Knowledge Extrapolation for Temporal Knowledge Graph.In Proceedings of the ACM Web Conference (WWW). 24332443. Le Dai, Yu Yin, Chuan Qin, Tong Xu, Xiangnan He, Enhong Chen, and Hui Xiong.2020. Enterprise Cooperation and Competition Analysis with a Sign-OrientedPreference Network. In Proceedings of the ACM SIGKDD International Conferenceon Knowledge Discovery & Data Mining (KDD). 774782. Vachik S. Dave, Baichuan Zhang, Mohammad Al Hasan, Khalifeh AlJadda, andMohammed Korayem. 2018. A Combined Representation Learning Approach forBetter Job and Skill Recommendation. In Proceedings of the ACM InternationalConference on Information and Knowledge Management (CIKM). 19972005.",
  "Zifeng Ding, Yunpu Ma, Bailan He, and Volker Tresp. 2021. A Simple But PowerfulGraph Encoder for Temporal Knowledge Graph Completion. arXiv preprintarXiv:2112.07791 (2021)": "Hao Dong, Zhiyuan Ning, Pengyang Wang, Ziyue Qiao, Pengfei Wang, YuanchunZhou, and Yanjie Fu. 2023. Adaptive Path-Memory Network for Temporal Knowl-edge Graph Reasoning. In Proceedings of the International Joint Conference onArtificial Intelligence (IJCAI). 20862094. Chuyu Fang, Chuan Qin, Qi Zhang, Kaichun Yao, Jingshuai Zhang, Hengshu Zhu,Fuzhen Zhuang, and Hui Xiong. 2023. RecruitPro: A Pretrained Language Modelwith Skill-Aware Prompt Learning for Intelligent Recruitment. In Proceedings ofthe ACM Conference on Knowledge Discovery and Data Mining (KDD). 39914002.",
  "Zhen Han et al. 2021. Explainable Subgraph Reasoning for Forecasting on Tem-poral Knowledge Graphs. In Proceedings of International Conference on LearningRepresentations (ICLR)": "Shaoxiong Ji, Shirui Pan, Erik Cambria, Pekka Marttinen, and Philip S. Yu. 2022.A Survey on Knowledge Graphs: Representation, Acquisition, and Applications.IEEE Trans. on Neural Networks Learning Systems (TNNLS) 33, 2 (2022), 494514. Yiqiao Jin, Yeon-Chang Lee, Kartik Sharma, Meng Ye, Karan Sikka, Ajay Di-vakaran, and Srijan Kumar. 2023. Predicting Information Pathways Across On-line Communities. In Proceedings of the ACM SIGKDD Conference on KnowledgeDiscovery and Data Mining (KDD). 10441056. Jaehun Jung, Jinhong Jung, and U Kang. 2021. Learning to Walk across Timefor Interpretable Temporal Knowledge Graph Completion. In Proceedings of theACM International Conference on Knowledge Discovery and Data Mining (KDD). Min-Jeong Kim, Yeon-Chang Lee, and Sang-Wook Kim. 2023. TrustSGCN: Learn-ing Trustworthiness on Edge Signs for Effective Signed Graph ConvolutionalNetworks. In Proceedings of the International ACM SIGIR Conference on Researchand Development in Information Retrieval (SIGIR). 24512455. Min-Jeong Kim, Yeon-Chang Lee, and Sang-Wook Kim. 2024. PolarDSN: AnInductive Approach to Learning the Evolution of Network Polarization in Dy-namic Signed Networks. In Proceedings of the ACM International Conference onInformation and Knowledge Management (CIKM). 10991109. Taeri Kim, Yeon-Chang Lee, Kijung Shin, and Sang-Wook Kim. 2022. MARIO:Modality-Aware Attention and Modality-Preserving Decoders for MultimediaRecommendation. In Proceedings of the ACM International Conference on Infor-mation and Knowledge Management (CIKM). 9931002. Taeyong Kong, Taeri Kim, Jinsung Jeon, Jeongwhan Choi, Yeon-Chang Lee,Noseong Park, and Sang-Wook Kim. 2022. Linear, or Non-Linear, That is theQuestion!. In Proceedings of ACM International Conference on Web Search and",
  "Data Mining (WSDM). 517525": "Yeon-Chang Lee, Jiwon Hong, and Sang-Wook Kim. 2016. Job recommendationin AskStory: experiences, methods, and evaluation. In Proceedings of the 31stAnnual ACM Symposium on Applied Computing (SAC). 780786. Yeon-Chang Lee, JaeHyun Lee, Dongwon Lee, and Sang-Wook Kim. 2024. Learn-ing to compensate for lack of information: Extracting latent knowledge foreffective temporal knowledge graph completion. Inf. Sci. 654 (2024), 119857. Yujin Lee, Yeon-Chang Lee, Jiwon Hong, and Sang-Wook Kim. 2017. Exploitingjob transition patterns for effective job recommendation. In Proceedings of IEEEInternational Conference on Systems, Man, and Cybernetics (SMC). 24142419. Yeon-Chang Lee, JaeHyun Lee, Dongwon Lee, and Sang-Wook Kim. 2022. THOR:Self-Supervised Temporal Knowledge Graph Embedding via Three-Tower GraphConvolutional Networks. In Proceedings of the IEEE International Conference onData Mining (ICDM). 10351040. Huayu Li, Yong Ge, Hengshu Zhu, Hui Xiong, and Hongke Zhao. 2017. Prospect-ing the Career Development of Talents: A Survival Analysis Perspective. InProceedings of the ACM SIGKDD International Conference on Knowledge Discovery& Data Mining (KDD). 917925.",
  "Liangyue Li, How Jing, Hanghang Tong, Jaewon Yang, Qi He, and Bee-ChungChen. 2017. Nemo: Next career move prediction with contextual embedding. InProceedings of The ACM Web Conference (WWW). 505513": "Lei Li, Guangzhi Zheng, Svetlana Peltsverger, and Chi Zhang. 2016. CareerTrajectory Analysis of Information Technology Alumni: A LinkedIn Perspective.In Proceedings of the Annual Conference on Information Technology Education.26. Shan Li, Baoxu Shi, Jaewon Yang, Ji Yan, Shuai Wang, Fei Chen, and Qi He. 2020.Deep Job Understanding at LinkedIn. In Proceedings of the International ACMSIGIR Conference on Research and Development in Information Retrieval (SIGIR).21452148.",
  "Yunqi Li, Michiharu Yamashita, Hanxiong Chen, Dongwon Lee, and YongfengZhang. 2023. Fairness in Job Recommendation Under Quantity Constraints. InAAAI-23 Workshop on AI for Web Advertising": "Zixuan Li et al. 2021. Search from History and Reason for Future: Two-stageReasoning on Temporal Knowledge Graphs. In Proceedings of Annual Meeting ofthe Association for Computational Linguistics (ACL). Zixuan Li et al. 2021. Temporal Knowledge Graph Reasoning Based on EvolutionalRepresentation Learning. In Proceedings of International ACM Conference onResearch and Development in Information Retrieval (SIGIR).",
  "Ye Liu, Luming Zhang, Liqiang Nie, Yan Yan, and David Rosenblum. 2016. FortuneTeller: Predicting Your Career Path. In Proceedings of the AAAI Conference onArtificial Intelligence (AAAI), Vol. 30": "Haiyan Luo, Shichuan Ma, Anand Joseph Bernard Selvaraj, and Yu Sun. 2019.Learning job representation using directed graph embedding. In Proceedings ofthe International Workshop on Deep Learning Practice for High-Dimensional SparseData. 15. Sumit Maheshwari, Abhishek Sainani, and P Krishna Reddy. 2010. An Approachto Extract Special Skills to Improve the Performance of Resume Selection. InInternational Workshop on Databases in Networked Information Systems. 256273. Qingxin Meng, Hengshu Zhu, Keli Xiao, Le Zhang, and Hui Xiong. 2019. Ahierarchical career-path-aware neural network for job mobility prediction. InProceedings of the ACM International Conference on Knowledge Discovery and DataMining (KDD). 1424. Sebastien Montella, Lina Maria Rojas-Barahona, and Johannes Heinecke. 2021.Hyperbolic Temporal Knowledge Graph Embeddings with Relational and TimeCurvatures. In Proceedings of Annual Meeting of the Association for ComputationalLinguistics (ACL). 32963308. Richard Jayadi Oentaryo, Ee-Peng Lim, Xavier Jayaraj Siddarth Ashok,Philips Kokoh Prasetyo, Koon Han Ong, and Zi Quan Lau. 2018. Talent FlowAnalytics in Online Professional Network. Data Science and Engineering 3, 3(2018), 199220.",
  "Ioannis Paparrizos, B. Barla Cambazoglu, and Aristides Gionis. 2011. MachineLearned Job Recommendation. In Proceedings of the Fifth ACM Conference onRecommender Systems. 325328": "Namyong Park, Fuchen Liu, Purvanshi Mehta, Dana Cristofor, Christos Falout-sos, and Yuxiao Dong. 2022. Evokg: Jointly modeling event time and networkstructure for reasoning over temporal knowledge graphs. In Proceedings of ACMInternational Conference on Web Search and Data Mining (WSDM). 794803. Chuan Qin, Le Zhang, Rui Zha, Dazhong Shen, Qi Zhang, Ying Sun, Chen Zhu,Hengshu Zhu, and Hui Xiong. 2023. A Comprehensive Survey of ArtificialIntelligence Techniques for Talent Analytics. CoRR abs/2307.03195 (2023). Chuan Qin, Hengshu Zhu, Tong Xu, Chen Zhu, Liang Jiang, Enhong Chen, andHui Xiong. 2018. Enhancing Person-Job Fit for Talent Recruitment: An Ability-aware Neural Network Approach. In Proceedings of International ACM Conferenceon Research and Development in Information Retrieval (SIGIR). 2534. Chuan Qin, Hengshu Zhu, Tong Xu, Chen Zhu, Liang Jiang, Enhong Chen, andHui Xiong. 2018. Enhancing Person-Job Fit for Talent Recruitment: An Ability-Aware Neural Network Approach. In Proceedings of the International ACM SIGIRConference on Research and Development in Information Retrieval (SIGIR). 2534.",
  "Hojjat Salehinejad, Julianne Baarbe, Sharan Sankar, Joseph Barfett, Errol Colak,and Shahrokh Valaee. 2018. Recent Advances in Recurrent Neural Networks.arXiv preprint arXiv:1801.01078 (2018)": "Kartik Sharma, Yeon-Chang Lee, Sivagami Nambi, Aditya Salian, Shlok Shah,Sang-Wook Kim, and Srijan Kumar. 2024. A Survey of Graph Neural Networksfor Social Recommender Systems. ACM Comput. Surv. (2024), 265. Baoxu Shi, Shan Li, Jaewon Yang, Mustafa Emre Kazdagli, and Qi He. 2020.Learning to Ask Screening Questions for Job Postings. In Proceedings of theInternational ACM SIGIR Conference on Research and Development in InformationRetrieval (SIGIR). 549558. Baoxu Shi, Jaewon Yang, Feng Guo, and Qi He. 2020. Salience and Market-AwareSkill Extraction for Job Targeting. In Proceedings of the ACM SIGKDD InternationalConference on Knowledge Discovery & Data Mining (KDD). 28712879.",
  "Ibraiz Tarique and Randall S Schuler. 2010. Global talent management: Literaturereview, integrative framework, and suggestions for further research. Journal ofworld business 45, 2 (2010), 122133": "Mingfei Teng, Hengshu Zhu, Chuanren Liu, Chen Zhu, and Hui Xiong. 2019. Ex-ploiting the Contagious Effect for Employee Turnover Prediction. In Proceedingsof the AAAI Conference on Artificial Intelligence (AAAI), Vol. 33. 11661173. Rakshit Trivedi, Hanjun Dai, Yichen Wang, and Le Song. 2017. Know-Evolve:Deep Temporal Reasoning for Dynamic Knowledge Graphs. In Proceedings of theInternational Conference on Machine Learning (ICML), Vol. 70. 34623471. Rakshit Trivedi, Mehrdad Farajtabar, Prasenjeet Biswal, and Hongyuan Zha.2019. DyRep: Learning Representations over Dynamic Graphs. In Proceedings ofInternational Conference on Learning Representations (ICLR). Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones,Aidan N. Gomez, Lukasz Kaiser, and Illia Polosukhin. 2017. Attention is Allyou Need. In Advances in Neural Information Processing Systems (NeurIPS). 59986008. Chao Wang, Hengshu Zhu, Qiming Hao, Keli Xiao, and Hui Xiong. 2021. Vari-able interval time sequence modeling for career trajectory prediction: Deepcollaborative perspective. In Proceedings of The ACM Web Conference (WWW).612623. Jingya Wang, Kareem Abdelfatah, Mohammed Korayem, and Janani Balaji. 2019.Deepcarotene-Job Title Classification with Multi-Stream Convolutional NeuralNetwork. In Proceedings of the IEEE International Conference on Big Data (BigData).19531961.",
  "Zonghan Wu, Shirui Pan, Fengwen Chen, Guodong Long, Chengqi Zhang, andPhilip S. Yu. 2019. A Comprehensive Survey on Graph Neural Networks. CoRRabs/1901.00596 (2019)": "Chengjin Xu et al. 2021. Temporal Knowledge Graph Completion using a LinearTemporal Regularizer and Multivector Embeddings. In Proceedings of AnnualConference of the North American Chapter of the Association for ComputationalLinguistics (NAACL). 25692578. Da Xu, Chuanwei Ruan, Evren Krpeoglu, Sushant Kumar, and Kannan Achan.2020. Inductive representation learning on temporal graphs. In Proceedings ofInternational Conference on Learning Representations (ICLR).",
  "Yi Xu, Junjie Ou, Hui Xu, and Luoyi Fu. 2023. Temporal Knowledge GraphReasoning with Historical Contrastive Learning. In Proceedings of the AAAIConference on Artificial Intelligence (AAAI). 47654773": "Michiharu Yamashita, Yunqi Li, Thanh Tran, Yongfeng Zhang, and Dongwon Lee.2022. Looking further into the future: Career pathway prediction. In Proceedingsof the International Workshop on Computational Jobs Marketplace. Michiharu Yamashita, Jia Tracy Shen, Thanh Tran, Hamoon Ekhtiari, and Dong-won Lee. 2023. JAMES: Normalizing Job Titles with Multi-Aspect Graph Embed-dings and Reasoning. In 2023 IEEE International Conference on Data Science andAdvanced Analytics (DSAA). IEEE.",
  "Michiharu Yamashita, Thanh Tran, and Dongwon Lee. 2024. Fake Resume Attacks:Data Poisoning on Online Job Platforms. In Proceedings of the ACM on WebConference (WWW). 17341745": "Michiharu Yamashita, Thanh Tran, and Dongwon Lee. 2024. OpenResume:Advancing Career Trajectory Modeling with Anonymized and Synthetic ResumeDatasets. In Proceedings of IEEE International Conference on Big Data (BigData). Kaichun Yao, Jingshuai Zhang, Chuan Qin, Peng Wang, Hengshu Zhu, and HuiXiong. 2022. Knowledge Enhanced Person-Job Fit for Talent Recruitment. InProceedings of the IEEE International Conference on Data Engineering (ICDE).34673480. Hyunsik Yoo, Yeon-Chang Lee, Kijung Shin, and Sang-Wook Kim. 2023. Disen-tangling Degree-related Biases and Interest for Out-of-Distribution GeneralizedDirected Network Embedding. In Proceedings of the ACM Web Conference (WWW).231239. Denghui Zhang, Junming Liu, Hengshu Zhu, Yanchi Liu, Lichen Wang, PengyangWang, and Hui Xiong. 2019. Job2vec: Job title benchmarking with collective multi-view representation learning. In Proceedings of the ACM International Conferenceon Information and Knowledge Management (CIKM). 27632771. Le Zhang, Tong Xu, Hengshu Zhu, Chuan Qin, Qingxin Meng, Hui Xiong, andEnhong Chen. 2020. Large-scale talent flow embedding for company competitiveanalysis. In Proceedings of The ACM Web Conference (WWW). 23542364. Le Zhang, Ding Zhou, Hengshu Zhu, Tong Xu, Rui Zha, Enhong Chen, andHui Xiong. 2021. Attentive heterogeneous graph embedding for job mobilityprediction. In Proceedings of the ACM International Conference on KnowledgeDiscovery and Data Mining (KDD). 21922201. Le Zhang, Hengshu Zhu, Tong Xu, Chen Zhu, Chuan Qin, Qingxin Meng, HuiXiong, and Enhong Chen. 2019. Large-Scale Talent Flow Forecast with DynamicLatent Factor Model. In Proceedings of The Web Conference (WWW). 23122322. Qi Zhang, Hengshu Zhu, Ying Sun, Hao Liu, Fuzhen Zhuang, and Hui Xiong.2021. Talent Demand Forecasting with Attentive Neural Sequential Model. InProceedings of the ACM Conference on Knowledge Discovery and Data Mining(KDD). 39063916. Sensen Zhang, Xun Liang, Zhiying Li, Junlan Feng, Xiangping Zheng, and BoWu. 2023. BiQCap: A Biquaternion and Capsule Network-Based EmbeddingModel for Temporal Knowledge Graph Completion. In Proceedings of InternationalConference on Database Systems for Advanced Applications (DASFAA). 673688. Cunchao Zhu, Muhao Chen, Changjun Fan, Guangquan Cheng, and Yan Zhang.2021. Learning from history: Modeling temporal knowledge graphs with sequen-tial copy-generation networks. In Proceedings of the AAAI Conference on ArtificialIntelligence (AAAI), Vol. 35. 47324740. Chen Zhu, Hengshu Zhu, Hui Xiong, Pengliang Ding, and Fang Xie. 2016. Re-cruitment Market Trend Analysis with Sequential Latent Variable Models. InProceedings of the ACM Conference on Knowledge Discovery and Data Mining(KDD). 383392.",
  "AFurther Data Description": "We pre-process and standardize job titles (i.e., position names) andcompany names. For example, the position of software engineer\"may be written as software development engineer\" or SDE\" indifferent resumes for various reasons (e.g., lack of industry standardtaxonomy across companies or individual preference). However, inorder to successfully solve the CTP problem, we need to identify andcoalesce all differently-worded position names that actually refer tothe same or very similar positions. For obtaining such normalizedposition names, we performed entity mapping based on the state-of-the-art job title mapping method , which cleans job titles",
  "administrative and executive secretaries1.56": "into the ECSO-accepted occupations (i.e., the public job taxonomy).In the end, the position names in our dataset are mapped to 425normalized position names. For cleaning company names, followingthe previous works , we use the most frequently-occurred9, 000 companies while filtering out low frequent companies.After standardizing the position names, the distribution of thenormalized names is shown in Figure I-(a). On the other hand,Figure I-(b) shows the distribution of company names. In addition,Table I shows the top-10 most-frequent normalized position names.Lastly, we conducted a detailed analysis by computing the aver-age working duration between jobs for specific sectors. We filteredour dataset based on job titles, categorizing them into distinct do-mains such as Tech, Sales, University, and Medical. The criterion forfiltering included specific keywords within job titles, such as soft-ware for Tech and university for University. Below, we provideexamples from four domains that we examined: Tech: Mean duration of 42.8 months, Std of 22.9 months Sales: Mean duration of 43.1 months, Std of 22.1 months University: Mean duration of 43.8 months, Std of 27.5 months Medical: Mean duration of 43.4 months, Std of 23.8 monthsThe results revealed that while the mobility in the Tech sectoris marginally higher, the differences across these domains are notstatistically significant ( < 0.01). This suggests a relatively uniformmobility pattern across different professions. Also, it is importantto note that career advancement and promotion opportunities existwithin the same company or organization, which is also commonin university-related jobs.",
  "BImplementation Details": "For hyperparameters of competitors, we used the best settingsfound via grid search in the following ranges: embedding dimen-sionality {50, 100, 150, 200, 250, 300} (for DaeMon, CENET, NEMO,HCPNN, AHEAD, TACTP, and NAOMI) and the number of GCNlayers {1, 2, 3} (for AHEAD). Therefore, the optimal dimension-alities for embedding were 100 for DaeMon, NEMO, HCPNN, andAHEAD, 150 for TACTP, 200 for CENET, and 250 for NAOMI. Also,based on our experiments, the most optimal number of GCN layersfor AHEAD is 1.For CAPER, we set the embedding dimensionality, the numberof GCN layers, and the max epoch for training as 150, 1, and 100,respectively. When we employ the LSTMs in (M3), GRNN can beformulated to obtain u () of with respect to :f () = W(,1) ( u (1)) + W(,2) (u ()),",
  "(8)": "where cell () indicates a cell state for u () of with re-spect to . Also, f (), i (), g (), and o () representthe intermediate calculation processes to obtain u (). Lastly,W(,), W(,), W(,), and W (,) represent the learnable weightmatrices; they are shared across all users. In the same manner, wecan obtain c() of with respect to .",
  "CData Sharing Statement": "The rarity of accessible job/resume datasets underscores the sig-nificance of our commitment to reproducibility. It is noteworthythat none of the over 30 papers that propose algo-rithms using job/resume datasets have opted to share their datasetsdue to the sensitive nature of these datasets. Privacy concernssurrounding resume datasets, which contain sensitive personal in-formation, further hinder their public release. Consequently, themajority of CTP literature, including studies such as NEMO ,HCPNN , AHEAD , TACTP , and NAOMI , has re-lied on a single private dataset, none of which have been publiclyshared. The proprietary nature of the datasets in the CTP domainmakes finding publicly available datasets very challenging.As a result, we had to rely solely on our own dataset, obtainedfrom a global career platform, for evaluation. However, with explicitconsent from the company that donated our dataset, we pledge tomake it available upon request, with all due legal protocols observed.Our dedication to openness extends beyond mere rhetoricwe havealso shared our entire codebase. For the benefit of the researchcommunity, our dataset is accessible upon request; interested re-searchers should contact FutureFit AI or the Penn State team toaccess the original dataset. Additionally, in , we introducedOpenResume, an anonymized, structured, and publicly availableresume dataset, specifically curated for downstream tasks in thejob domain."
}