{
  "South Carolina State University, Orangeburg, South Carolina, US, 29117+ North Carolina A&T State University, Greensboro, North Carolina, US, 27411": "Abstract In this paper, we present an automated machinelearning (AutoML) approach for network intrusion detec-tion, leveraging a stacked ensemble model developed usingthe MLJAR AutoML framework. Our methodology combinesmultiple machine learning algorithms, including LightGBM,CatBoost, and XGBoost, to enhance detection accuracy androbustness. By automating model selection, feature engineering,and hyperparameter tuning, our approach reduces the manualoverhead typically associated with traditional machine learningmethods. Extensive experimentation on the NSL-KDD datasetdemonstrates that the stacked ensemble model outperformsindividual models, achieving high accuracy and minimizingfalse positives. Our findings underscore the benefits of usingAutoML for network intrusion detection, as the AutoML-driven stacked ensemble achieved the highest performance with90% accuracy and an 89% F1 score, outperforming individualmodels like Random Forest (78% accuracy, 78% F1 score),XGBoost and CatBoost (both 80% accuracy, 80% F1 score),and LightGBM (78% accuracy, 78% F1 score), providing amore adaptable and efficient solution for network securityapplications.Index Terms - Network Intrusion Detection, AutoML,Stacked Ensemble Model, Cybersecurity, NSL-KDD Dataset I. INTRODUCTIONNetwork Intrusion Detection (NID) is a crucial aspectof cybersecurity, aimed at identifying unauthorized accessor malicious activity within a network . Its importancehas grown significantly as networks expand and becomeincreasingly complex, with the potential consequences ofsecurity breaches becoming more severe. According to theSpecial Report on Cyberwarfare In The C-Suite, Cybersecu-rity Ventures projects that global cybercrime costs will growby 15 percent per year over the next five years, reaching$10.5 trillion USD annually by 2025, up from $3 trillionUSD in 2015 . This surge marks the greatest transfer ofeconomic wealth in history, threatening innovation and in-vestment, exceeding annual damages from natural disasters,and surpassing the profits of the global illegal drug trade.Effective NID systems are essential in mitigating theserisks by providing early detection of intrusions and facilitat-ing rapid response . With the average time to identify andcontain a breach estimated at 277 days, early detection iscrucial in reducing both the duration and impact of securityincidents . Consequently, the role of effective NID systemsis increasingly vital in safeguarding sensitive data, maintain-ing business continuity, and protecting organizational assetsfrom cyber threats.In tackling these threats, network intrusion detection pri-marily relies on two methodologies: signature-based detec- tion and machine learning-based detection . Signature-based detection remains widely adopted due to its highaccuracy in identifying known threats by matching networkactivity against a predefined database of malicious signatures. However, this method has several notable drawbacks:",
  ") Performance issues with large signature databases ariseas the database of known signatures expands over time,leading to detection delays and negatively impactingoverall system efficiency": "Addressing the limitations of signature-based detectionmethods, machine learning (ML) methods , are in-creasingly favored in network intrusion detection systems.Unlike the classical methods that require constant updates,ML-based detection can analyze vast amounts of networkdata to identify complex and nuanced patterns associatedwith both known and previously unknown malicious behavior. Additionally, this adaptability is particularly advanta-geous given the rapidly changing nature of cyber threats,as seen in cases like the NotPetya attack , where MLsystems were able to detect anomalous patterns in data trafficbefore the attack was fully understood .Traditional machine learning (ML) methods, however,still face certain limitations as they rely heavily dependon manual processes, including feature engineering; featureextraction, and selection , as shown in .These processes, along with tasks like model selection andtuning add further complexity, making it challenging tohandle large-scale intrusion data efficiently. As a result, thesetechniques often suffer from reduced recognition accuracyand higher false alarm rates.To overcome the limitations of traditional machine learn-ing, Automated Machine Learning (AutoML) approaches have emerged as powerful alternatives by automating theML workflow, from data preprocessing to model validation, as shown in eliminating the need for manualfeature selection, enhancing performance, and adapting toevolving data characteristics. In this paper, we adopt theMLJAR AutoML framework to develop AutoML-based",
  ") A comparative study on the adaptation of conventionalML methods and AutoML-based prediction is under-taken to evaluate their effectiveness in addressing thenetwork intrusion detection tasks": "3) ExtensiveexperimentsontheNSL-KDDdatasetdemonstratetheeffectivenessofthedevelopedAutoML-basedalgorithmsinboostingdetectionaccuracy and reducing false alarm rates, outperformingtraditional ML-based approaches.The rest of this paper is structured as follows: Sec-tion II provides an overview of related research on ML-based intrusion detection approaches. Section III outlines themethodology adopted in this study. Section IV covers thedataset, experimental setup, hyperparameter configurations,and evaluation metrics. Section V discusses the experimentalresults and insights gained. Finally, Section VI concludes thepaper and outlines potential future research directions.",
  "II. RELATED WORKS": "This section reviews relevant literature on ML-based intru-sion detection methods. As cyber threats evolve, traditionalsignature-based techniques often fail to detect new attacks.Machine learning (ML) offers a more adaptive solution byanalyzing network traffic patterns to identify anomalies. Thisreview highlights recent advancements and their impact onnetwork intrusion detection.In , a network anomaly detection system was proposedfor remote desktop connections using machine learning algo-rithms. An exponential random graph model was introduced in to integrate network topology statistics for accurateanomaly detection in network domains. In , an SDN-based flow prediction method using a double P-value withthe K-NN algorithm was proposed, demonstrating higherprecision, lower false positives, and significantly better adap-tation than other models. Similarly, in , a linear kernel-based SVM model was used for anomaly detection in trafficprofiles, employing natural language processing techniquesto preprocess data and extract feature vectors before classifi-cation. In , an anomaly detection model extending PCAwith group-wise PCA and additional exploratory featureswas developed based on recent field applications. Addition-ally, a novel lightweight framework was developed topredict anomalies and cyber-attacks in IoT networks, withevaluations on the NSL-KDD and CICIDS2017 datasetsshowing improved detection rates and lower false alarm rates.Lastly, proposed an active anomaly detection approachbased on deviation- and density-aware features to addressabnormal traffic, with a focus on enhancing data privacy.",
  "III. PROPOSED METHODOLOGY": "The proposed methodology establishes an AutoML frame-work , as illustrated in , to improve networkintrusion detection accuracy by automating model selection,feature engineering, and optimization, thus enhancing detec-tion efficiency and reducing false positives. Serving as thefoundation for model development and selection, this frame-work streamlines the entire machine learning processfromfeature engineering and hyperparameter tuning to model val-idationresulting in highly effective models that fully lever-age the training data. Additionally, its automated retrainingand hyperparameter tuning make it well-suited for dynamictasks like network intrusion detection, where evolving trafficpatterns require adaptive models. Performance is furtherboosted through ensemble learning and stacking techniques,while automated feature selection optimizes detection speed and accuracy.The adoption of the MLJAR AutoML framework inour study facilitated the development of an ensemble-stacked model specifically tailored for network intrusiondetection. This robust model leverages a combination ofalgorithmsnamely, LightGBM, CatBoost, and XGBoostvariantsassigned with strategically calibrated weights tooptimize accuracy. By integrating these models, the ensemblemaximizes the strengths of each algorithm, enhancing pre-dictive performance, stability, and adaptability to varied datapatterns. This approach results in a balanced and resilientmodel, providing significant improvements in both detectionaccuracy and overall robustness.To extensively compare traditional ML models with theproposed AutoML framework, we evaluate these modelsacross several dimensions, including accuracy, precision,recall, and the F1-score. By examining key metrics such asprediction accuracy, and the outlined metrics, this study aimsto highlight the practical advantages and limitations of eachapproach, offering valuable insights into their suitability forvarious machine learning tasks.1) Random Forest: This is an ensemble learning methodthat improves predictive accuracy by combining multipledecision trees. It constructs a \"forest\" of trees by selectingrandom subsets of features and data samples, mitigating over-fitting and variance. At each node, the algorithm evaluatesa subset of features to find the best split, minimizing animpurity measure like Gini impurity (Eq. 1):",
  "yi = majority_vote(T1(xi),T2(xi),...,TK(xi)),(2)": "Random Forest is effective due to its robustness to over-fitting, ability to handle high-dimensional data, and inter-pretability via feature importance analysis.2) XGBoost (Extreme Gradient Boosting): This imple-mentation of the gradient boosting algorithm is both efficientand scalable, featuring regularization, handling of missingdata, and parallel computation. The model iteratively buildsan ensemble of decision trees, minimizing a regularizedobjective function (Eq. 3):",
  ",(4)": "This, combined with parallelization, makes XGBoosthighly effective for large-scale predictive modeling tasks.3) CatBoost: This is a gradient boosting algorithm op-timized for handling categorical features and designed forhigh efficiency in both accuracy and speed. Unlike tradi-tional methods, it uses innovative encoding techniques forcategorical variables, ideal for datasets with high cardinality.The regularized objective function (Eq. 5) is minimized asfollows:",
  "(fk) = 2 +T,(6)": "These features, combined with gradient and second-ordergradient information, make CatBoost highly effective forlarge-scale, high-dimensional datasets with categorical vari-ables.4) LightGBM(LGBM): This is a highly efficient gradientboosting implementation, designed for improved speed andscalability. Unlike traditional methods, LGBM uses a leaf-wise tree growth strategy, splitting the leaf with the maxi-mum loss reduction, which results in deeper trees and higheraccuracy. It is well-suited for large datasets due to its abilityto handle sparse features, reduce memory usage, and supportparallel learning.The objective function minimizes a regularized loss, asshown in Eq. 7:",
  "A. Dataset": "The dataset used in this study is the NSL-KDD dataset, a refined version of the widely recognized KDD Cup1999 dataset . The NSL-KDD dataset is a popularbenchmark for evaluating network intrusion detection (NID)systems. Unlike its predecessor, the NSL-KDD addressesissues with redundant records and provides a more balanceddistribution of data across both the training and testing sets,which improves the fairness and robustness of system eval-uations. Specifically, it includes 125,973 records for training(NSL-KDDTrain+) and 22,544 records for testing (NSL-KDDTest+), ensuring comprehensive testing across diversetraffic patterns as shown in Table I.",
  "Train67,34345,92711,65652995125,973Test9,7117,4582,4212002,75422,543": "The dataset consists of five classes: Normal, Denial ofService (DoS), User to Root (U2R), Remote to Local (R2L),and Probe, each representing different types of networktraffic as shown in Table I. Normal corresponds to legitimatetraffic, while the four attack classes reflect various maliciousactivities. The dataset includes 41 features, divided into threecategories: basic features (110), such as protocol type andservice; content features (1122), such as the number offailed login attempts; and traffic features (2341), whichinclude the number of connections to the same host withina given time window .",
  "B. Hyper-parameter Tuning": "The hyperparameters of the classifiers used in the NIDmodels are optimized using Bayesian optimization with 10-fold cross-validation. In this process, the dataset is splitinto 10 equally sized subsets (folds), with each algorithmtrained on 9 folds and validated on the remaining one. Thisis repeated 10 times, allowing each fold to serve as thevalidation set once. The average performance across all foldsensures robust model evaluation, minimizing reliance on any specific train-test split. The data is shuffled before splitting todiversify training and validation sets, reducing overfitting andimproving generalization. Stratification is applied to maintainclass proportions in each fold. The best-performing config-uration is selected based on average performance across thefolds, as summarized in Table II.",
  "C. Evaluation Metrics": "The weighted average values of Precision, Recall, and F1-score, as defined in Eqs. 10 through 12, along with accuracyas defined in Eq. 9, are adopted to evaluate the performanceof the NID models . These metrics are calculated usingthe true positive (tpi), true negative (tni), false positive (f pi),and false negative (fni) values for each class Ci, wherei = 1, ,m and m represents the total number of classesin the dataset. Here, |Yi| denotes the total number of samplesassigned to each class.",
  "D. Experiment Setup": "The dataset used for the experiments is described insection IV-A. The training set (NSL-KDDTrain+) whichincludes 125,973 records is used to train the intrusion detec-tion models and the testing dataset (NSL-KDDTest+) whichincludes 22,544 records is used to evaluate the detectionmodels. For this study, the dataset has been transformed into binary classification tasks, distinguishing between Normaland Attack (malicious) traffic where the the four attackclasses reflect various malicious activities.To evaluate the performance of the proposed framework,Random Forest (RF), Xgboost, Catboost, lgbm and theadopted AutoML framework classifiers are used to evaluatethe performance of the NID models. An NVIDIA SMIA100 SXM4-40GB GPU on GoogleColab+ is used intraining the models.",
  "Random Forest78847878XGBoost80858080CatBoost80858080LGBM78847878Stacked Ensemble90908989": "Among the individual models as shown in Fg. 2, XGBoostand CatBoost show the highest accuracy (80%) and maintainprecision, recall, and F1 scores at 85 and 80, respectively,indicating solid overall performance. LightGBM and Ran-dom Forest both have slightly lower accuracy (78%) andare relatively less effective in comparison, with Precision,Recall, and F1 scores at 84% and 78%, showing less balancein capturing true positives without increasing false positives. Random ForestXGBoostCatBoostLGBM",
  "Models": "Percentage (%) AccuracyPrecisionRecallF1 Score .Comparison of performance metrics (Accuracy, Precision, Recall,and F1 Score) for individual models (Random Forest, XGBoost, CatBoost,and LGBM) in network intrusion detection, highlighting variations acrosskey metrics. The Stacked Ensemble model, however, outperforms allindividual models across all metrics as shown in Table IIIand . It achieves the highest accuracy at 90%, alongwith Precision, Recall, and F1 scores of 90%, 89%, and 89%, respectively. This improvement highlights the advantage ofthe AutoML ensemble-stacked approach, which combinesthe strengths of the individual models and ensemble modelsto create a more robust and reliable predictive model. Thehigh precision and recall indicate that the Stacked Ensemblemodel is not only more accurate but also effective in mini-mizing false positives and capturing true positives, essentialfor tasks like network intrusion detection where precisionand adaptability are critical. Random ForestXGBoostCatBoostLGBMStacked Ensemble",
  "VI. CONCLUSION AND FUTURE WORK": "In this paper, we presented the development and eval-uation of a Stacked Ensemble model for network intru-sion detection, which was generated through an AutoMLframework. This AutoML approach gave rise to the StackedEnsemble model by combining the predictive strengths ofdiverse algorithmsRandom Forest, XGBoost, CatBoost,and LightGBMeach contributing unique advantages in pre-cision, recall, and adaptability, while addressing individualmodel limitations, such as overfitting or sensitivity to certaindata patterns. The resulting stacked structure delivers abalanced, robust, and reliable detection system. Additionally,the AutoML-driven ensemble stacking approach not onlyenhances overall performance metrics but also streamlinesthe machine learning workflow by automating model selec-tion, feature engineering, and hyperparameter tuning. Thisseamless integration allows the model to adapt to dynamicenvironments, where evolving network traffic patterns andemerging attack types demand responsive and flexible so-lutions. Such adaptability is critical for real-time intrusiondetection, where high accuracy and prompt detection areessential for maintaining system security.Our future work will investigate the integration of Explain-able AI (XAI) to identify top-performing features, enhancingmodel interpretability in network intrusion detection. We alsoplan to apply this approach to a large-scale surface defectdataset with multiple defect classes to develop more robust,generalized models. This focus on XAI and diverse datasetsaims to improve both model transparency and adaptabilityfor real-world applications. N. Chaabouni, M. Mosbah, A. Zemmari, C. Sauvignac, and P. Faruki,Network intrusion detection for iot security based on learning tech-niques, IEEE Communications Surveys & Tutorials, vol. 21, no. 3,pp. 26712701, 2019.",
  "S. Garg and S. Batra, A novel ensembled technique for anomalydetection, International Journal of Communication Systems, vol. 30,no. 11, p. e3248, 2017": "R. Raj, S. K. Kannath, J. Mathew, and P. Sylaja, Automl accuratelypredicts endovascular mechanical thrombectomy in acute large vesselischemic stroke, Frontiers in Neurology, vol. 14, p. 1259958, 2023. I. Salehin, M. S. Islam, P. Saha, S. Noman, A. Tuni, M. M. Hasan,and M. A. Baten, Automl: A systematic review on automated machinelearning with neural architecture search, Journal of Information andIntelligence, vol. 2, no. 1, pp. 5281, 2024."
}