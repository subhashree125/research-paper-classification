{
  "ABSTRACT": "Product assortment selection is a critical challenge facing physi-cal retailers. Effectively aligning inventory with the preferencesof shoppers can increase sales and decrease out-of-stocks. How-ever, in real-world settings the problem is challenging due to thecombinatorial explosion of product assortment possibilities. Con-sumer preferences are typically heterogeneous across space andtime, making inventory-preference alignment challenging. Addi-tionally, existing strategies rely on syndicated data, which tendsto be aggregated, low resolution, and suffer from high latency. Tosolve these challenges, we introduce a real-time recommendationsystem, which we call EdgeRec3D. Our system utilizes recent ad-vances in 3D computer vision for perception and automatic, finegrained sales estimation. These perceptual components run on theedge of the network and facilitate real-time reward signals. Addi-tionally, we develop a Bayesian payoff model to account for noisyestimates from 3D LIDAR data. We rely on spatial clustering toallow the system to adapt to heterogeneous consumer preferences,and a graph-based candidate generation algorithm to address thecombinatorial search problem. We test our system in real-worldstores across two, 6-8 week A/B tests with beverage products anddemonstrate a 35% and 27% increase in sales respectively. Finally,we monitor the deployed system for a period of 28 weeks with anobservational study and show a 9.4% increase in sales. ACM Reference Format:Porter Jenkins*, Michael Selander, J. Stockton Jenkins, Andrew Merrill,Kyle Armstrong. 2024. Personalized Product Assortment with Real-time 3DPerception and Bayesian Payoff Estimation. In Proceedings of the 30th ACMSIGKDD Conference on Knowledge Discovery and Data Mining (KDD 24),August 2529, 2024, Barcelona, Spain. ACM, New York, NY, USA, 15 pages.",
  "INTRODUCTION": "The problem of effectively allocating shelf space is one of the mostcritical decisions facing physical retailers . Optimal placementof physical product increases sales and decreases excess inventory.Prior work has shown that good product allocation can call the Permission to make digital or hard copies of all or part of this work for personal orclassroom use is granted without fee provided that copies are not made or distributedfor profit or commercial advantage and that copies bear this notice and the full citationon the first page. Copyrights for components of this work owned by others than theauthor(s) must be honored. Abstracting with credit is permitted. To copy otherwise, orrepublish, to post on servers or to redistribute to lists, requires prior specific permissionand/or a fee. Request permissions from 24, August 2529, 2024, Barcelona, Spain 2024 Copyright held by the owner/author(s). Publication rights licensed to ACM.ACM ISBN 979-8-4007-0490-1/24/08...$15.00 consumers attention and encourage impulse purchases .In most real-world scenarios, the number of available productsfar exceeds the amount of available shelf space. Additionally, theretailer must consider varying attributes of products such as price,shape, and dynamic consumer preferences. As such, the productassortment problem is a combinatorial decision problem.A variety of previous work seeks to solve the shelf space allo-cation problem. Classical optimization methods such as integer linear, and dynamic programming, genetic algorithms and simulated annealing approaches have been ex-tensively studied. More recently, the Data Mining field has soughtto replace the formal space elasticity optimization problem withassociation rule mining , and collaborative filtering as they can better leverage large-scale databases to generateeffective product sets. In practice, these methods typically rely onsyndicated data 1 as input. These datasets tend to be aggregated, oflow resolution, and can take weeks or months to assemble. In con-trast, this work offers a solution to produce similar data instantly,in the hand of the person who needs it. A real-time approach to theproblem is critical because it closes the feedback loop and facilitatesfaster discovery and convergence to shopper preferences.The problem of real-time product assortment recommendationhas four core challenges. First, obtaining sales estimates in real-timeis not possible under current methodologies. Second, the problemis a special case of the knapsack problem , a well-knowncombinatorial optimization problem, and is therefore NP-complete.The number of possible combinations grows factorially, and followsthe equation:",
  "!( 1)!(1)": "for products and discrete product locations, or slots. Evenin somewhat small sub-problems comprised of a shelf with 20 slotsand 100 products the number of possible combinations is 2.5 1022. Second, most retail outlets are dynamical systems. The set ofproducts on display frequently changes to account for out-of-stocksor supply chain constraints. Third, preferences are heterogeneousacross both time and space . Limited time products areperiodically introduced into the market to satisfy seasonal demand.Additionally, product space allocation should be targeted to meetpreferences that vary with respect to demographics. For example,a store near a college campus might sell more energy drinks than astore with an older population of customers. Classical methods areunable to account for these issues.",
  "(c) Recommended Change #2": ": The product assortment problem can be described as choosing the set of products, and corresponding quantities, thatwill maximize expected payoff, subject to the total number of discrete locations (slots) within the product display. Our systemmaximizes expected payoff, while accounting for uncertainty. To solve these challenges, we design a large-scale recommendersystem, which we call EdgeRec3D. The system guides retail workersand recommends the appropriate product set to put on display. Akey differentiator of our system is that we use on-edge, 3D computervision models for real-time perception and automatic salesestimation. This real-time perceptual layer is implemented at theedge of the network, making it easy to implement the recommendedset quickly, and closes the feedback loop under changing marketdynamics. A major trade-off under this design is the introduction ofnoise into estimates of sales. To quantify our uncertainty of productsales due to this observation noise, we propose a Robust BayesianPayoff (RBP) reward model that learns the posterior distributionof product payoff 2. We address the combinatorial search problemwith intelligent candidate generation, along with a simple heuristicsearch based on an uncertainty penalized ranking statistic, whichdiscounts uncertain recommendations. A novel spatial clusteringtechnique along with the hierarchical parameterization of RBPallow for targeted recommendations and help solve the preferenceheterogeneity problem.We validate our recommender system by running both offlineand online experiments. Offline, EdgeRec3D outperforms classicmethods such as Linear Programming, Dynamic Programming, -greedy, Genetic algorithms and modern techniques such as deepensembles and model-based offline RL. Moreover, we perform tworeal-world A/B tests, each lasting 6-8 weeks. In these two controlledexperiments, we demonstrate a 35% and 27% increase in product-level sales, respectively. Finally, a 28 week deployment study resultsin a 9.4% increase in product-level sales. Our key contributions canbe summarized by the following: We propose EdgeRec3D, a real-time, 3D computer vision rec-ommender system to solve the shelf space allocation problem.The system implements 3D visual perception models embed-ded in mobile devices to observe product display states andreward (sales) in real-time.",
  "The product assortment problem is a special case of the knapsackproblem": "Definition 1 (Product Assortment Problem). We considerthe problem of choosing from a set of = 1, ..., products with quanti-ties, {0, 1, 2, ...}. The quantity, , denotes the number of discreteproduct locations (slots) occupied by product , on a product display. We let {0, 1} be an indicator variable denoting the selectionstatus of product (also called the 0-1 knapsack ). Each store, , isexpected to contain multiple displays, = { ()1 , ()2 , ... ()}. Addi- tionally, each display has a maximum capacity, (), denoting theavailable product volume. We assume reward follows an unknown,store-conditional distribution function, ( |,) that variesby quantity allocated. For example, one might expect diminishingmarginal returns for larger quantities of the same product. Thereforeour goal is to maximize expected reward for each display, , at eachdiscrete time step,",
  "Definition 2 (Demographic Spatial Clustering Problem)": "Given a set of spatial areas, { : 1 }, each with a demo-graphic vector, R and stores, { : 1 }, we have twogoals. First, match stores to a set of areas by constructing a neighbor-hood around each store,: N ({(1,1), (2,2), ...}). Second withineach neighborhood, produce a store-level demographic profile by ag-gregating over the demographic vectors, = N ({(1,1), ...}).The aggregation function,() could be any scalar-valued aggregation(i.e., mean, median, weighted average). Finally, we cluster the set of store demographic profiles, s, into different clusters. We expectstores within each cluster to have similar preferences, making it easierto estimate the store-conditional expectation, E[ |,].",
  "METHOD": "In the following section we discuss the various components ofEdgeRec3D. Our recommendation engine is comprised of the fol-lowing modular components: 3D data collection and sales inference,spatial clustering, candidate generation, value estimation, rankingand heuristic search. The output is a recommended product settailored to each display location in a store, , which a retail workercan choose to physically implement.",
  "D Data Collection": "The most important input to EdgeRec3D is fine-grained estimatesof product sales over time. Sales estimates need to be both highresolution in time, and specific to each product. Historically, thisis done either by hand or by using point-of-sale (POS) data. Handcollected sales data is expensive to collect, while POS is too lowresolution to understand how product sales vary by display locationwithin a store. In real-world retail, it is common for a product to bedisplayed in many locations throughout a single store. Thus, POSdata alone does not facilitate targeted recommendations throughouta store.Instead, we train and deploy CountNet3D , a regression-based 3D computer vision model to infer counts of densely spacedobjects. CountNet3D takes as input a set of images, and a LiDARpoint cloud, and outputs a set of fine-grained, product-level countestimates. This is especially important when the number of avail-able products is in the hundreds or thousands. CountNet3D is onlytrained to predict object counts in 3D space. In order to collect salesdata, CountNet3D is deployed to a mobile device where inferenceon the images and point cloud data can occur on-edge. The useris a front-line retail worker (i.e. merchandiser), and is the personresponsible for restocking the shelves with product, typically on adaily basis. Prior to the restock, the user performs a pre-scan of theshelf or product display. The pre-scan provides a current snapshotof the available inventory on the display. Next, the user restocksthe display following a pre-specified plan (called a planogram orschematic). Finally, upon completion of the restock the user per-forms a post-scan, to capture the inventory when the display has",
  "= () () (1)(4)": "Where ( ), is the post-scan and captures the count estimatefor product at display in the current timestamp, . Moreover, () (1) is the prescan in the current visit and captures the remain-ing inventory at the previous time 1. Intuitively, Equation 4captures what product has been removed since the previous mer-chandiser visit. We assume that all missing product has been sold.More details about workflow and deployment can be found in thesupplement.",
  "end whilereturn": "After collecting a time series of product sales data, we segmentthe data for recommendation using a novel, two-step spatial cluster-ing routine. Intuitively, we want to account for consumer preferenceheterogeneity using demographic data, since a large body of litera-ture has linked consumer preferences to observable demographicvariables . Consistent with this literature, our expectationis that product preferences vary across these demographic clusters.However, it is typically challenging for retailers to estimate a demo-graphic profile for shoppers as most consumers shop anonymously",
  "(b) Physical architecture ofEdgeRec3D": ": (a) Logical design of EdgeRec3D. The user performs successive 3D scans of a display to obtain product count predictions.These predictions are differenced over time following Equation 4 to estimate sales. We train our two-stage spatial clusteringpipeline to group demographically similar stores. Within each cluster, we estimate a Robust Bayesian Payoff (RBP) model toobtain a ranking statistic (PEPF) for each product. We generate candidates for each display, rank each candidate, and producerecommendation sets with heuristic search. (b) Physical design of EdgeRec3D. 3D perception is implemented at the edge ofthe network to facilitate real-time feedback. Data are aggregated across nodes for value estimation and candidate generation.When recommendations are served, we observe the state of the display in real-time and apply heuristic search to improve it. and do not reveal their demographic attributes. We refer to this asthe Demographic Spatial Clustering problem.To solve this problem we use readily accessible 2020 US censusdata to create a demographic profile of each store. We are givenstores, {1,2, ...}, and census areas, or tracts, {1, 2, ...}.The census data consists of = 30 demographic variables. Unfor-tunately, matching stores to census tracts is not obvious. First, wetypically have an unequal number of stores and tracts. In ruralareas we might have more tracts than stores, and in urban areas wemight have more stores than tracts. Second, stores might lie on theboundary of a census tract, making it difficult to simply apply thedemographics of the nearest tract. Third, shoppers from a nearbycensus tract might visit multiple stores.To resolve these issues we propose the Spatially Anchored Gauss-ian Mixture Model (SpAGMM) to calculate spatially weighted de-mographic profiles of stores using census tract data. Once a demo-graphic vector of each store is obtained, grouping similar storestogether through K-means is straightforward and effective. Wedetail both steps below. 3.2.1Step 1: SpAGMM Estimation. The core idea behind SpAGMMis we can use a mixture of Gaussians to learn the probability thatshoppers from tract visits store . This probability is inverselyproportional to the distance between and . For each store, ,we can then weight the demographic features of all other tracts,, by their respective probabilities to get a spatially weighted,demographic profile. SpAGMM is a special case of the GaussianMixture Model (GMM), a common clustering technique used to fit Gaussians to unlabelled data. Its output is a set of parameters,{, , }=1, which define the cluster mean, covariance, andmembership weight.We modify the standard GMM by setting the number of clustersequal to the number of stores, = and anchoring the Gaussianmeans at the latitude/longitude coordinates of the stores, =,. Consequently, we do not update during training,and only update and . We use Maximum A Posteriori (MAP) estimation instead of Maximum Likelihood Estimation (MLE) fornumerical stability. When multiple stores and tracts lie in a smallneighborhood, the MLE forces the variance of some clusters to be0, which leads to the Collapsing Variance Problem (CVP) . Totackle this problem, we put a Normal/Inverse Wishart (NIW) priorover and to derive the NIW conjugate model. We use theExpectation-Maximization (EM) algorithm to learn , and . Weprovide a formal definition in Algorithm 1.Given the outputs of SpAGMM, we can calculate a demographicprofile for each store by weighting each tracts demographics bythe probability it belongs to s cluster , = =1 3.2.2Step 2: K-means. Step 1 outputs a single demographic vector, for each store. To model preference heterogeneity, we clusterstores into groups. We use standard K-means to group similarstores together and provide a visualization of the learned clustersin in the supplement.",
  "Value estimation: Robust Bayesian Payoffs(RBP)": "After deriving the clusters, our system learns the posterior pre-dictive distribution of payoff for each product, within each clusterusing a Robust Bayesian Payoff (RBP) model. Since the use of acomputer vision system introduces noise into the sales data, it isimportant to develop a technique that can make effective decisionsunder such observation uncertainty, and therefore avoid costlyerrors. In physical retail, errors are costly as there is significantshipping and labor cost to merchandise each product.RBP is a hierarchical Bayesian model, and has the following ad-vantages over non-Bayesian reward models (i.e., linear regressionor deep learning): 1) RBP is more robust to outliers through theuse of regularizing priors. 2) RBP is able to pool information acrossstores within a cluster, but is also able to discount irrelevant dataas more data is acquired within a store. This is due to the hierarchi-cal structure of the model, where we learn store and cluster-levelparameters. 3) RBP explicitly quantifies uncertainty. In of",
  "where indexes product, indexes store, and indexes cluster., and ,. denote the cluster- and store-level coefficients for": "product . Moreover, () , is the allocated quantity of product, .Thus, the parameters describe how reward changes as a functionallocated space. We treat {0, 0}, {1, 1}, and {2, 2} as hyper-parameters. Finally, ,, is the observed payoff (reward) and ismodelled with a Gamma likelihood, which has positive support( > 0), since product sales are non-negative. We use HalfNormalpriors to ensure that the upper-level coefficients are non-negative,and a Laplace prior to encourage robustness to outliers. We visu-alize the model with plate notation in of the supplement.Since RBP is a fully probabilistic model its output is the posteriorpredictive distribution, (,, | () ), or our belief about rewardgiven the amount of space allocated to product, . We train RBPusing PyMC and the No U-Turn Sampler .Intuitively, we can use (,, | () ) to derive an uncertaintypenalized ranking statistic, Penalized Expected Payoff per Facing(PEPF):",
  "Where E and (,,) are the mean and standard deviation": "of (,, | () ). We treat the penalty coefficient, , as a user-chosenhyperparameter. Larger values correspond to more aggressivediscounting of uncertain product recommendations. Equation 6takes a similar form to Upper Confidence Bound (UCB) estimators inmulti-armed bandit problems. UCB estimators have been shownto optimally manage the exploration-exploitation tradeoff. However,they systematically take actions with high expected payoff and highuncertainty. UCB policies take actions that might increase short-term regret, but obtain more information about an actions payoffand therefore minimize long-term regret. Conversely, recent workhas shown that using an uncertainty penalized reward estimatorcan encourage safe policies in real-world reinforcementlearning. In this penalized regime, the policy tends to choose actionswith high expected payoff and low uncertainty. Additionally, Yuet al. prove that the penalized reward estimator maximizesthe lower bound of the true reward. We prefer the uncertaintypenalized estimator over UCB because it is both theoretically soundand useful in real-world problems where errors are costly. In ourexperiments, we set = 1.",
  "Candidate Generation": "We generate candidates to reduce the search space of products. Wedesire products that are physically and semantically compatiblewith the observed state of the display. Our candidate generation iscomprised of three major steps: graph construction, sampling, andpruning. The initial product set observed on each display is treatedas a seed set to seed the candidate generator. Graph Construction: Mining a live database of observed dis-play states (a list of products on a display at a specific time) weconstruct a weighted graph of products. Each node is a product andeach edge is the number of times that two products appear togetheron the same display. Products that appear together frequently havevery large edge weights while products that appear together rarelyhave small edge weights. Each product in our dataset is assignedto one of 5 sub-categories (Sparkling, Water, Isotonic, Rejuvenate,or Energy). We restrict our graph to only contain edges betweenproducts of the same sub-category. This graph partitioning ensuresproduct consistency between the candidate set and the seed set.The graph is updated on a weekly basis.Sampling: To create the candidate set we first sample fromneighbors of the seed set, proportional to the edge weights. Foreach seed product , we sample products without replacementfrom its neighbors with respect to the edge weights. Each productsampled is given one vote, which are then summed and normalizedacross all of the seed products. The output of this operation is aninitial candidate set.Pruning: We prune the set of candidates based on known prod-uct dimensions from a product database. We compare the maximumheight of any product in the seed set against the initial candidateset, and remove any products whose height exceeds that of the maxof the seed set. This step ensures candidates will physically fit onthe product display.",
  "Heuristic Search": "Using the candidates as input, we next perform a heuristic, com-binatiorial search to produce a recommended product set. Due tothe high stakes nature of physical world recommendation systems,we design a heuristic search algorithm that is relatively simple, inorder to avoid catastrophic failures and lost sales. The core principlebehind the search algorithm is to keep high payoff products, andslowly trade low payoff products for better ones, while accountingfor uncertainty.Our search algorithm is comprised of the following general steps.First, we produce a PEPF score (Equation 6) for each product in thecandidate set, C, and the observed state set, S. Second, we sort thecandidate set and state set by PEPF. Third, we choose the lowest products by PEPF and reduce their quantities following the decayschedule (,0) = 0 1 2, where 0 is the first observed productquantity and is the time step, or the time the product hasbeen selected. The floor term ensures that the output is a discretecount, and that eventually, the decay will drop to zero. This decayschedule will slowly remove poorly performing products until theyare completely removed. Fourth, we re-allocate the removed spacewith new products following an -greedy routine. With probability, we choose a random product from the candidate set, and withprobability 1 we choose a greedy action, or the candidate withthe highest PEPF. Fifth, after we have product swaps, we fill theremaining budget with the high PEPF products already in the state,S. We formally describe our search in Algorithm 2.",
  "Offline Evaluation": "We perform an offline comparison of EdgeRec3D to search algo-rithms that have been applied to the product assortment problem inprior work. Offline policy evaluation typical of reinforcement learn-ing and bandit algorithms is notoriously difficult in part due to thepartial label problem . We apply the evaluator proposedby Li et al. . To build a static dataset, we collect user logs fromthe control group in experiment #2. This dataset is comprised of33 stores, and covers approximately 8 weeks of time, and includes14,830 transactions. It is important to note that the control datais a fair comparison because no online intervention is ever madeby any of these search algorithms. The evaluator in assumesthe logged actions are iid. We randomly sample 50% of our loggedinteractions to reduce temporal dependency in the dataset.We compare EdgeRec3D to a variety of classic and modern base-lines. We run each algorithm 30 times, and report the mean, stan-dard deviation (in parentheses) and median payoff in . Both",
  ": Offline Evaluation using a static dataset and theoffline policy evaluator algorithm from": ".Deep Ensembles and Model-based Offline Policy Optimization(MOPO) feature modern neural networks with predictive un-certainty. For Deep Ensembles, we use the same heuristic search asEdgeRec3D to measure the value of RBP. MOPO uses uncertaintypenalized offline reinforcement learning for action selection. Weobserve that EdgeRec3D outperforms all existing baselines in bothmean and median payoff, indicating it can effectively take goodactions under uncertainty.Additionally, we perform an ablation study of EdgeRec3D usingthe same dataset and experimental setup described above. Theresults are reported in . We carefully remove each of thecore components: clustering, Robust Bayesian Payoffs (RBP) andheuristic search. When we remove clustering, we fit a single, globalreward model. When we remove RBP, the reward model is a non-Bayesian, simple linear regression. When we remove the heuristicsearch module, we apply a greedy search without the penalizedreward ranking statistic. Overall, the heuristic search and Bayesianreward model have a large impact on performance and EdgeRec3Doutperforms all ablated variants.",
  "Online Experimental Phase": "4.2.1Experimental Design. Controlled experiments in real-worldscenarios can be a challenging task due to the possibility of con-founding, or omitted variables. To account for potential confounders,we use a within-store Difference-in-Difference (DID) experimen-tal design for both of our field experiments. DID estimation is acommonly used experimental design technique in the Economet-rics literature to assess causal relationships . The key ideabehind the DID experimental design is to measure the change in aresponse variable before and after an intervention for both the af-fected and unaffected groups . The difference of these changes isthe treatment effect. More formally, DID = (posttreat pretreat) (postcontrol precontrol), where pre and post are pre-treatmentand post-treatment periods respectively. Our controlled experi-ments have the following design steps:",
  "At the conclusion of the post-treatment period, we calculatethe difference-in-difference estimator, DID": "Note that recommendations are simply displayed to users (retailworkers or merchandisers); ultimately, each user has the autonomyto accept or reject the EdgeRec3D suggestions. Some fail to acceptdue to time constraints, while others are simply resistant to usingthe system and prefer existing practice. We measure this acceptancerate with a compliance statistic, the Jaccard index between therecommended state, , and the observed state S: (, S) = (, S).In our first experiment, we choose two stores in the Salt LakeCity, Utah, USA region and focus the test on cooler displays. We runa six week experiment, from May 17 to June 30, 2022 using a DIDdesign. The treatment period begins on June 10, 2022. Our secondexperiment is much larger and consists of 33 stores across themountain west region of the United States (Utah, Colorado, Arizona,etc...). We again focus on cooler displays. Experiment #2 runs fromSeptember 21, 2022 to November 19, 2022, or approximately eightweeks. The treatment period begins on October 21, 2022. Due tothe time and expense of online, controlled experiments we do notcompare EdgeRec3D to the benchmark search algorithms studiedin .1. Instead, during our online evaluation we compareEdgeRec3D to current industry best practices.",
  "Average Weekly Unit Sales": "Low Comp.High Comp.Deployment : Deployment phase observational study. We splitstores into high a low compliance groups as in the experimen-tal phase. We see that the two groups have roughly paralleltrends in the pre-deployment period. We deploy EdgeRec3Don April 16, 2023. In the post-deployment period, the twogroups are still subject to the same seasonal trends, but thehigh compliance group diverges from the low compliancegroup. See for full results. experiments, we see a +27.78% and +35.03% increase in average dailysales where recommendations are followed. These results are bothstatistically significant ( = 0.05) and provide strong evidence thatimplementing and following the recommended product assortmentdecisions prescribed by EdgeRec3D have a positive, causal impacton daily average product sales. Field Experiment #1. In the first experiment, we deploy EdgeRec3Dto only two stores with expert users. These users are able to taketheir time, and the implementation of recommendations served byEdgeRec3D is strictly enforced. Therefore, during experiment #1,the average recommendation compliance is 100%. We see a veryhigh DID treatment effect of +35.03%.Daily product sales in the treatment group increased by 0.95units (+16.42%), while the control group saw a decrease of 1.0 unitsper day (-18.61%). The difference between these two yields the totaltreatment effect, 16.42% (18.62%) = 35.03%. The control groupoffers a counterfactual estimate of what would have happened inthe absence of the intervention (EdgeRec3D). This is known asthe parallel trend assumption of DID . Had we not deployedrecommendations, its likely that average daily sales would havedecreased at similar rates as the control group. Field Experiment #2. In this experiment, our user base consists ofnon-experts who have more time constraints (ie, other retail respon-sibilities), which is reflective of the real-world product assortment",
  "KDD 24, August 2529, 2024, Barcelona, SpainPorter Jenkins*, Michael Selander, J. Stockton Jenkins, Andrew Merrill, Kyle Armstrong": "problem. Here, the user has the option to adopt the recommen-dation from EdgeRec3D. Consequently, we see more variation inrecommendation compliance during experiment #2.The DID treatment effect across all stores is +7.83%. While thisresult is positive, our confidence is not high enough to concludestatistical significance (-value = 0.222). However, the average rec-ommendation compliance across all stores is only 61.64%. Thissuggests that a large number of users are ignoring the recommenda-tions served by EdgeRec3D. Filtering to stores where recommendedproduct sets are adopted (average compliance 80%), shows a dif-ferent result. Among this high compliance group we see very strong,positive results where the DID treatment effect is +27.78% and issignificant at = 0.05. This leads us to conclude that high recom-mendation compliance leads to a large treatment effect. This alignswith our intuition because our system can only make recommenda-tions, but it ultimately relies on a user to adopt and implement thechange in the physical world. This relationship between compli-ance and treatment effect across our two experiments is capturedin of the supplement.",
  "Deployment Phase": "Following our two controlled experiments, we deploy EdgeRec3D to83 stores and monitor the impact on store-level sales for a period of28 weeks (11 weeks pre-deployment and 17 week post-deployment).We again use a DID study design. However, this deployment phasediffers from Experiment #1 and #2 in the following ways. First,recommendations are applied to all cooler displays; we do notrandomly assign displays to treatment and control. Instead of a con-trolled experiment, we perform an observational study to monitorthe effectiveness. Second, while EdgeRec3D still uses 3D percep-tion to estimate sales, here we measure performance using syndi-cated point-of-sale (POS) data. POS data allows us to observe salesprior to the deployment of our system, and quantify the impact ofEdgeRec3D post-deployment. The data contains sales informationfor all products and all locations within the store. We filter the POSdata to products observed and tracked by EdgeRec3D in our study.We are not able to disambiguate sale location in this data. Third,the syndicated POS data is reported weekly, instead of daily.Results of our deployment are reported in and visuallydepicted in . Since we no longer have treatment and controlgroups in our deployment phase, we use recommendation compli-ance as a measure of adoption. We again split stores into high andlow compliance groups by calculating the average compliance overthe course of the 17 week deployment period. Crucially, we alsomonitor average sales for these two groups prior to deployment toget a baseline performance measurement.High compliance stores averaged sales of 80.91 units sales priorto the deployment date, and increased to an average of 88.01 post-deployment date, a change of 7.1 units or 8.8%. In contrast, lowcompliance stores averaged sales of 67.80 prior to the deploymentdate and stayed roughly the same, decreasing slightly, to 67.37 post-deployment date. These figures indicate a 7.53 unit per-product,per-week treatment effect on sales for the high compliance stores,which represents a 9.4% increase in weekly sales volume. Thistreatment effect is statistically meaningful ( = 0.021).The results in the deployment phase are positive and meaning-ful, but lower in magnitude than the experimental phase. This is",
  "Change-0.43 (-0.6%)+7.1 (+8.8%)+7.53 (+9.4%)": ": Observational study during the deployment phase ofEdgeRec3D. We show weekly average units sold before andafter the intervention (EdgeRec3D). The high compliancegroup increases by 7.1 (8.8%) weekly average units, while thelow compliance group stays roughly the same. We calculatethe percentage changes and difference these estimates to getthe DID treatment effect of 9.4%. This estimate is statisticallysignificant with = 0.021 likely explained by the use of controlled experiments, which enableprecise estimates of the treatment effect. In spite of this, we stillsee positive and statistically meaningful results as EdgeRec3D isdeployed.",
  "RELATED WORK": "Shelf Space Allocation The shelf space allocation problem has beenstudied for many years in the Operations Research field . Classicoptimization methods are commonly applied such as linear , or dynamic programming, and game theory . Morecomputational methods such as genetic algorithms and simulated annealing approaches have been proposed inrecent years. Others have sought to jointly optimize both productassortment and price via a branch-and-bound algorithm. performed a controlled field test and showed a 9% increase in profitusing a non-linear program to choose product assortment.Offline Recommender Systems The majority of work in recom-mender systems has been done online, in the e-commerce domain,but systems for offline commerce are growing in popularity .Early work showed that recommender systems can posi-tively impact offline product demand. Later work focused on collab-orative filtering and association rule mining .Machine Learning techniques such as gradient-boosted trees ,K-nearest neighbors , ensemble techniques and offline Rein-forcement Learning have been studied. Location-based systemsleverage customer location data from smartphones or RFIDtags within a store. In contrast, EdgeRec3D provides real-timeassortment recommendations based on fine-grained sales estimatesobtained via 3D computer vision, while also accounting for mea-surement error and preference heterogeneity across stores.",
  "CONCLUSION": "We proposed EdgeRec3D to solve the product assortment problemin physical retail. EdgeRec3D uses an edge-first architecture withreal-time 3D perception to estimate product sales and observe dis-play states. Making recommendations at the edge of the networkcloses the feedback loop and facilitates faster preference discovery.Additionally, EdgeRec3D relies on a probabilistic reward model(RBP) for uncertainty quantification, spatial clustering to accountfor preference heterogeneity, and candidate generation with heuris-tic search to tackle combinatoric explosion. Controlled experimentsand a 28 week observational study showed that EdgeRec3D hasmeaningful, real-world impact.",
  "Krzysztof Dudziski and Stanisaw Walukiewicz. 1987. Exact methods for theknapsack problem and its generalizations. European Journal of OperationalResearch 28, 1 (1987), 321": "Tobias Dsterhft, Alexander Hbner, and Kai Schaal. 2020. A practical approachto the shelf-space allocation and replenishment problem with heterogeneouslysized shelves. European Journal of Operational Research 282, 1 (2020), 252266. H Neil Geismar, Milind Dawande, BPS Murthi, and Chelliah Sriskandarajah. 2015.Maximizing revenue through two-dimensional shelf-space allocation. Productionand Operations Management 24, 7 (2015), 11481163.",
  "Matthew D Hoffman, Andrew Gelman, et al. 2014. The No-U-Turn sampler:adaptively setting path lengths in Hamiltonian Monte Carlo. J. Mach. Learn. Res.15, 1 (2014), 15931623": "Hark Hwang, Bum Choi, and Min-Jin Lee. 2005. A model for shelf space allocationand inventory control considering location and inventory level effects on demand.International Journal of Production Economics 97, 2 (2005), 185195. Kamel Jedidi, Harsharanjeet S Jagpal, and Wayne S DeSarbo. 1997. Finite-mixturestructural equation models for response-based segmentation and unobservedheterogeneity. Marketing Science 16, 1 (1997), 3959. Porter Jenkins, Kyle Armstrong, Stephen Nelson, Siddhesh Gotad, J. StocktonJenkins, Wade Wilkey, and Tanner Watts. 2023. CountNet3D: A 3D ComputerVision Approach To Infer Counts of Occluded Objects. In Proceedings of theIEEE/CVF Winter Conference on Applications of Computer Vision (WACV). 30083017. Porter Jenkins, Hua Wei, J Stockton Jenkins, and Zhenhui Li. 2022. BayesianModel-Based Offline Reinforcement Learning for Product Allocation. In Proceed-ings of the AAAI Conference on Artificial Intelligence, Vol. 36. 1253112537. Glenn Jocher, Ayush Chaurasia, Alex Stoken, Jirka Borovec, NanoCode012,Yonghye Kwon, Kalen Michael, TaoXie, Jiacong Fang, imyhxy, Lorna, (ZengYifu), Colin Wong, Abhiram V, Diego Montes, Zhiqiang Wang, Cristi Fati, Je-bastin Nadar, Laughing, UnglvKitDe, Victor Sonck, tkianai, yxNONG, PiotrSkalski, Adam Hogan, Dhruv Nair, Max Strobel, and Mrinal Jain. 2022.ul-tralytics/yolov5: v7.0 - YOLOv5 SOTA Realtime Instance Segmentation. Balaji Lakshminarayanan, Alexander Pritzel, and Charles Blundell. 2017. Simpleand scalable predictive uncertainty estimation using deep ensembles. Advancesin neural information processing systems 30 (2017).",
  "Lisa Leininger, Johnny Gipson, Kito Patterson, and Brad Blanchard. 2020. Advanc-ing performance of retail recommendation systems. SMU Data Science Review 3,1 (2020), 6": "Lihong Li, Wei Chu, John Langford, and Robert E Schapire. 2010. A contextual-bandit approach to personalized news article recommendation. In Proceedings ofthe 19th international conference on World wide web. 661670. Lihong Li, Wei Chu, John Langford, and Xuanhui Wang. 2011. Unbiased offlineevaluation of contextual-bandit-based news article recommendation algorithms.In Proceedings of the fourth ACM international conference on Web search and datamining. 297306. Travis Mandel, Yun-En Liu, Emma Brunskill, and Zoran Popovi. 2016. Offlineevaluation of online reinforcement learning algorithms. In Proceedings of theAAAI Conference on Artificial Intelligence, Vol. 30.",
  "Anna Mattila and Jochen Wirtz. 2008. The role of store environmental stimulationand social factors on impulse purchasing. Journal of Services Marketing (2008)": "Kevin P Murphy. 2012. Machine learning: a probabilistic perspective. MIT press. Chase C Murray, Debabrata Talukdar, and Abhijit Gosavi. 2010. Joint optimizationof product price, display orientation and shelf-space allocation in retail categorymanagement. Journal of Retailing 86, 2 (2010), 125136. Anala A Pandit, Jyot Talreja, Miloni Agrawal, Deepak Prasad, Swati Baheti,and G Khalsa. 2010. Intelligent recommender system using shoppers path andpurchase analysis. In 2010 International Conference on Computational Intelligenceand Communication Networks. IEEE, 597602.",
  "Jihoi Park and Kihwan Nam. 2019. Group recommender system for store productplacement. Data Mining and Knowledge Discovery 33, 1 (2019), 204229": "Bhavik Pathak, Robert Garfinkel, Ram D Gopal, Rajkumar Venkatesan, and FangYin. 2010. Empirical analysis of the impact of recommender systems on sales.Journal of Management Information Systems 27, 2 (2010), 159188. Charles R Qi, Hao Su, Kaichun Mo, and Leonidas J Guibas. 2017. Pointnet: Deeplearning on point sets for 3d classification and segmentation. In Proceedings ofthe IEEE conference on computer vision and pattern recognition. 652660.",
  "Ming-Hsien Yang and Wen-Cher Chen. 1999. A study on shelf space allocationand management. International journal of production economics 60 (1999), 309317": "Tianhe Yu, Garrett Thomas, Lantao Yu, Stefano Ermon, James Y Zou, SergeyLevine, Chelsea Finn, and Tengyu Ma. 2020. Mopo: Model-based offline policyoptimization. Advances in Neural Information Processing Systems 33 (2020), 1412914142. Lanlan Zheng, Xin Liu, Feng Wu, and Zijun Zhang. 2023. A data-driven modelassisted hybrid genetic algorithm for a two-dimensional shelf space allocationproblem. Swarm and Evolutionary Computation 77 (2023), 101251.",
  "VariableQuantity": "number of productsproduct, indexed by the quantity of product the product display index by store indexed by the maximum capacity of display in store Observed reward for product time of observationspatial areas (census tracts) indexed by .vector of demographic statistics for a spatial area, number of demographic featuresthe number of store clustersnumber of spatial areasestimated counts of in at time ,reward coefficient for product in cluster ,,reward coefficient for product , store , in cluster variance of reward (prior)compliance statistic (distance function over sets)"
}