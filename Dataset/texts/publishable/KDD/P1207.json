{
  "ABSTRACT": "Personalized recommendations have a growing importance in di-rect marketing, which motivates research to enhance customerexperiences by knowledge graph (KG) applications. For example, infinancial services, companies may benefit from providing relevantfinancial articles to their customers to cultivate relationships, fosterclient engagement and promote informed financial decisions. Whileseveral approaches center on KG-based recommender systems forimproved content, in this study we focus on interpretable KG-basedrecommender systems for decision-making.To this end, we present two knowledge graph-based approachesfor personalized article recommendations for a set of customers of alarge multinational financial services company. The first approachemploys Reinforcement Learning (RL) and the second approach usesthe XGBoost algorithm for recommending articles to the customers.Both approaches make use of a KG generated from both structured(tabular data) and unstructured data (a large body of text data).Using the RL-based recommender system we could leveragethe graph traversal path leading to the recommendation as a wayto generate interpretations (Path Directed Reasoning (PDR)). Inthe XGBoost-based approach, one can also provide explainableresults using post-hoc methods such as SHAP (SHapley AdditiveexPlanations) and ELI5 (Explain Like Im Five).We also compared the above approaches with published algo-rithms for building recommender systems. Our proposed RL-basedrecommender system achieved 43.76% MAP (MAP@K=10). Our Permission to make digital or hard copies of all or part of this work for personal orclassroom use is granted without fee provided that copies are not made or distributedfor profit or commercial advantage and that copies bear this notice and the full citationon the first page. Copyrights for components of this work owned by others than ACMmust be honored. Abstracting with credit is permitted. To copy otherwise, or republish,to post on servers or to redistribute to lists, requires prior specific permission and/or afee. Request permissions from -OARS, Aug 610, 2023, Long Beach, California, USA 2018 Association for Computing Machinery.ACM ISBN 978-1-4503-XXXX-X/18/06...$15.00 RL-based recommender system outperformed both the XGBoost-based approach and baseline model (Bayesian personalized ranking)by 13.38 and by 32.55 percentage points, respectively, deliveringmore accurate and personalized article recommendations. Impor-tantly, our approach offers explainable results, promoting betterdecision-making. This study underscores the potential of combin-ing advanced machine learning techniques with KG-driven insightsto bolster experience in customer relationship management.",
  "INTRODUCTION": "The increasing demand for personalized content has led to the de-velopment of recommendation systems that can effectively utilizestructured information. Knowledge graphs (KGs) have emergedas a promising solution for this challenge, offering improved rec-ommendation performance and explainability due to the inherentcomprehensibility of relationships between entities . A growingbody of research is dedicated to exploring the potential of knowl-edge graph reasoning in personalized recommendation .One line of research focuses on knowledge graph embedding mod-els, such as TransE and node2vec , which align the knowl-edge graph in a regularized vector space, identifying the similarity",
  "KDD-OARS, Aug 610, 2023, Long Beach, California, USAGhanshyam Verma, et al": "For instance, Xiong et al. leveraged reinforcement learningfor path-finding in knowledge graphs, while Das et al. pro-posed MINERVA which makes use of a KG and trains a model forquestion answering. Lin et al. introduced RL-based models forKG question answering with reward shaping. These approachesformulate multi-hop reasoning as a sequential decision-makingproblem, taking advantage of the structure and information presentin knowledge graphs.However, to the best of our knowledge, there has been limitedresearch on utilizing RL in knowledge graphs specifically for thetask of recommendation, especially when considering the challengeof navigating an extremely large action space as the number of pathhops grows. This opens up a promising research direction for de-veloping RL-based recommender systems that can exploit the richinformation present in knowledge graphs while efficiently navi-gating large action spaces to provide personalized and explainablerecommendations.Reinforcement learning presents a promising avenue for recom-mender systems, particularly when combined with the rich informa-tion present in knowledge graphs. By exploring novel techniquesfor managing large action spaces, incorporating graph neural net-works, and leveraging transfer learning, researchers can continue topush the boundaries of RL-based recommender systems, providingincreasingly accurate, personalized, and explainable recommenda-tions.",
  "RELATED WORK2.1Collaborative Filtering": "Collaborative Filtering (CF) has been a cornerstone in the develop-ment of recommender systems. Early approaches to CF focused onthe user-item rating matrix and predicted ratings using user-based or item-based collaborative filtering methods.These approaches calculated similarities between users or items togenerate recommendations.As dimension reduction methods advanced, latent factor models,such as matrix factorization, gained widespread adoption in rec-ommender systems. Prominent techniques include singular valuedecomposition , non-negative matrix factorization , andprobabilistic matrix factorization . These methods essentiallylearn a latent factor representation for each user and item to calcu-late the matching score of user-item pairs.In recent years, deep learning and neural models have furtherextended collaborative filtering, leading to two main sub-categories:similarity learning and representation learning. The similarity learn-ing approach adopts relatively simple user/item embeddings (e.g.,one-hot vectors) and learns a complex prediction network as asimilarity function to compute user-item matching scores . Incontrast, the representation learning approach focuses on learning",
  "Empowering recommender systems using automatically generated Knowledge Graphs and Reinforcement LearningKDD-OARS, Aug 610, 2023, Long Beach, California, USA": "is to sample paths for each user based on the policy networksguidance. However, this method may lack path diversity becausethe agent tends to repeatedly search the path with the highest cu-mulative rewards. To address this, we propose using Path DirectedReasoning (PDR) algorithm, which considers both action proba-bility and reward, to explore candidate paths and recommendeditems for each user. The process is outlined in Algorithm 1. Thealgorithm takes inputs such as the KG, the user, and the policynetwork. The output is a set of T-hop paths for the user, along withtheir generative probabilities and rewards. Each path ends withan item entity and associated generative probability and reward.Among the candidate paths, there may be multiple paths betweenthe user and an item. To interpret the reasoning behind why an itemis recommended to the user, we select the path from the candidateset with the highest generative probability based on the generativeprobabilities. Finally, we rank the selected interpretable paths basedon their path rewards and recommend the corresponding items tothe user.",
  "Knowledge Graph-driven RecommenderSystems": "Knowledge Graph-driven Recommender Systems (KGRS) have re-cently gained attention due to their ability to provide explainableand high-quality recommendations. Researchers have exploreddifferent ways to incorporate knowledge graph embeddings intorecommender systems to improve recommendation performanceand interpretability. One research direction focuses on leveragingknowledge graph embeddings as rich content information to en-hance recommendation performance. For example, Zhang et al. utilized knowledge base embeddings to generate user and itemrepresentations for recommendation purposes. Huang et al. em-ployed memory networks over knowledge graph entity embeddingsfor recommendation. Wang et al. proposed a ripple networkapproach for embedding-guided multi-hop KG-based recommen-dation, which allows for the exploration of connections betweenentities in the knowledge graph. Another research direction aims toleverage the entity and path information in the knowledge graph tomake explainable decisions. Ai et al. incorporated the learningof knowledge graph embeddings for explainable recommendation,but their explanation paths are essentially post-hoc explanations, asthey are generated by soft matching after the corresponding itemshave been chosen. Wang et al. proposed an RNN-based modelto reason over KGs for recommendation. However, this approachrequires enumerating all possible paths between each user-item pair for model training and prediction, which can be impracticalfor large-scale knowledge graphs.The field of Knowledge Graph-driven Recommender Systemshas witnessed significant progress in recent years. Researchers areexploring different approaches to incorporate knowledge graphembeddings and entity relationships to enhance recommendationperformance while providing interpretable and explainable results.Future work in this area will likely focus on developing more effi-cient and scalable methods for reasoning over large-scale knowl-edge graphs and further improving the quality and explainabilityof recommendations.Some researchers have focused on leveraging the structural prop-erties of knowledge graphs to improve recommendation perfor-mance. For instance, Wang et al. developed a graph atten-tion network that incorporates both the relational information andentity features in a knowledge graph for recommendation. Thisapproach allows for more accurate and context-aware recommen-dations by attending to the most relevant relations and entities fora given user-item pair.In addition to using knowledge graph embeddings, researchershave also explored incorporating external knowledge sources andincorporating user-item interactions into the knowledge graph. Caoet al. proposed a unified framework for incorporating user-iteminteractions and external knowledge sources into the knowledgegraph, which improved the quality of recommendations by captur-ing the complex interplay between these elements.Schlichtkrull et al. introduced a relational graph convolu-tional network (R-GCN) that learns embeddings for both entitiesand relations in a knowledge graph. This method can be used ina wide range of applications, including recommender systems, byexploiting the rich information present in the knowledge graphstructure.The research area of Knowledge Graph-driven RecommenderSystems has experienced significant advancements, with researchersexploring various methods to utilize knowledge graph embeddings,external knowledge sources, and user-item interactions to improvethe quality and explainability of recommendations. As more effi-cient and scalable techniques are developed, KGRS will continueto evolve and provide increasingly accurate, personalized, and ex-plainable recommendations.",
  "Reinforcement Learning basedRecommender Systems": "Reinforcement Learning (RL) has garnered considerable interest inthe research community, with numerous successful applicationsin various domains, including recommender systems. Researchershave explored RL-based recommender systems in both non-KGsettings and KG settings for a range of tasks.In non-KG settings, RL has been applied to various types ofrecommender systems, such as ads recommendation , newsrecommendation , and post-hoc explainable recommendation. These applications have demonstrated the potential of RLto adapt to changing user preferences and generate personalizedrecommendations based on user interactions.In the context of knowledge graphs, researchers have primarilyfocused on utilizing RL for tasks such as question-answering (QA).",
  "METHODOLOGY": "The problem addressed in this research is to provide a new typeof recommendation, called Knowledge Graph Driven ExplainableRecommendation (KGDExR), that simultaneously performs itemrecommendation and path finding based on rich and heterogeneousinformation in the knowledge graph.The goal is to find a recommendation set of items for a givenuser from a subset of Item entities I connected to User entities Uthrough relations in The knowledge graph G. The recommen-dation set should be associated with one reasoning path (,)(2 ) for each pair (,) of user and recommended item,where is the number of hops in the path and is a given integer.The number of recommendations, , is also given as an input. Theknowledge graph G is defined as G = (,,), where is the headentity and is the tail entity in the KG. & E, R, whereE is the entity set and R is the relation set. A j-hop path from entity0 to entity is defined as a sequence of + 1 entities connected by relations, denoted by (0,) =01 12 ... .The KGDExR problem can be formalized as finding a set of items {}[N] I for a given user and integers and , suchthat each pair (,) is associated with a reasoning path (,)(2 ).",
  "We use Markov Decision Process (MDP) framework to address theKGDExR problem. To ensure path connectivity, we supplement thegraph G with two distinct types of edges. Primarily, reverse edges": "are included, such that if (,,) G, then (,,) G, aidingin the path definition.The state at a given step , denoted as , is represented as atriplet (,,), where denotes the initial user entity, indicates the entity the agent has arrived at step , and refersto the history before step . We define the k-step history as thecombination of all entities and relations in the previous k steps, i.e., +1 ... +11 +",
  ". Given some user , the initial": "state is represented as 0 = (,, ) and the terminal state isrepresented as = (,, ).The action space at state is defined as all possible emergingedges from an entity . Some nodes in the KG can have very largeout-degree which can make it inefficient to maintain the largeaction space. Therefore, we perform an action-pruning step basedon a scoring function ((,)|), which maps any relation to areal-valued score conditioned on a given user . There is a user-defined integer that upper bounds the size of the action space.For our experiments, we set the value of = 3.For a given user, a simple binary reward function is not appro-priate as we dont know whether the agent has reached a targetitem or not. Therefore, the agent needs to find as many reasoningpaths as possible. We consider giving a reward to the last state ( )of the path. The reward is defined as:",
  ",otherwise.(1)": "In accordance with the underlying properties of the graph, thestate in our recommendation system is determined by the en-titys position. Given a state = (,,) and an action =(+1,+1), the transition to the next state +1 is characterized bya probability distribution: [+1 = (,+1,+1)| = (,,), = (+1, + 1)] = 1(2)However, there is an exceptional case for the initial state 0 =(,, 0), which introduces stochasticity and depends on the start-ing user entity. To simplify the model, we assume a uniform distri-bution for the users, ensuring that each user is equally sampled atthe beginning.Building upon our Markov Decision Process (MDP) formula-tion, our primary objective is to learn a stochastic policy thatmaximizes the expected cumulative reward.We define the expected cumulative rewards based on all thepaths traversed by a user as below:",
  "= (x) = ()( : R , R ),(6)": "where is the structure of each tree that maps an observation tothe corresponding leaf node in the tree, represents the numberof leaf nodes in the tree, and represents the leaf weights. For agiven observation, the final prediction is computed by taking thesum of all the weights for the corresponding leave nodes.The key idea behind XGBoost is to iteratively add decision treesto the ensemble, with each new tree trained to correct the residualerrors of the previous trees. In other words, XGBoost fits the modelby adding new trees to the ensemble that improve the overall pre-diction accuracy, while penalizing trees that are too complex oroverfit the data.One of the important features of XGBoost is its support for awide range of objective functions and evaluation metrics, includ-ing common loss functions like squared error and logistic loss, aswell as custom loss functions. XGBoost also includes a variety ofregularization techniques to prevent overfitting and improve gen-eralization performance, including L1 and L2 regularization terms,tree depth constraints, and early stopping.For our initial experiments, we implemented three rankers withinthe XGBoost model to predict the ranking of the articles for theusers. These are XGBoost ranker , CatBoost ranker , andLightGBM ranker . CatBoost is a recent library known forits efficacy in handling categorical features, which employs Yeti-Rank as the loss function. LightGBM handles categoricalfeatures and optimizes the LambdaRank loss. We trained XGBoostranker with Rank Pairwise loss, utilizing one-hot encoding. Dur-ing our initial experiments, the XGBoost ranker outperformed theother two rankers. Therefore, we selected the XGBoost ranker forour KG-driven XGBoost-based recommender system approach.We used XGBoost ranker in combination with KGs generatedfrom article text and the other article features to build the XGBoost-based recommender system. The KGs generated are then used asinput to the TuckER and TransE to generate 300-dimensional KGembeddings. These embeddings along with the customer demo-graphical data and article features are used to train the KG-drivenXGBoost-based recommender system.",
  "in the way that it neither requires any training nor any externalresource, but instead uses the knowledge of the domain availablewithin the input data to extract the knowledge": "4.1.1ConceptNet-based approach. ConceptNet is a knowledgegraph that encompasses entities from various domains along withtheir corresponding relationships. For this study, we specificallyfocus on three relationship types: IsA, PartOf, and Synonym. The\"IsA\" relationship signifies hypernymy relations, while \"PartOf\" rep-resents meronymy relations, and \"Synonym\" indicates synonymyrelations. To generate a dataset for hyponymy relations, we in-verted the direction of relations labeled as hypernyms. All otherrelations in ConceptNet were grouped together as \"other.\" The train-ing dataset was created by including all extracted relationships.The system architecture is based on BERT , employing 12transformer blocks. The embeddings utilized are extracted fromthe transformer in the 12th layer. Pretrained embeddings from theBERT model \"uncased_L-24_H-1024_A-16\" are employed, whichare readily available in TensorFlow. We named \"uKG_CN\" to theKG that we generated using the ConceptNet-based approach. 4.1.2Dependency Parsing-based approach. The creation of a domain-specific KG with this approach follows a mixed approach basedon both the Saffron tool2 for taxonomy generation and the newalgorithm for relation extraction. It uses the syntactic knowledgeof sentences in a textual dataset to extract new relations betweenSaffron terms. After extracting the new relations from the text, weintegrate them into the Saffron taxonomy and return a fully formedKG. This approach does not require any training and is domainindependent.The dependency parsing-based relation extraction approach ex-tracts relations from the text and exports them as triples (left_relation,relation_type, right_relation). It uses dependency parsing (syntacticanalysis of the sentences) on the text to find how terms are syntac-tically (and by extension semantically) connected within sentences.It takes as input the terms extracted by Saffron , as well as thedataset originally used to extract the Saffron terms and extract thetaxonomy, and returns a list of triples: term1, relation, term2. Thewhole implementation is done in Python. We named \"uKG_DP\"to the KG that we generated using the Dependency Parsing basedapproach.We have also created a KG, referred to as \"uKG\", from unstruc-tured data. This KG contains only the article and its relation withthe most frequent terms found within the article. To compute theTerm Frequency, we utilized TF-IDF. 4.1.3KG creation using both structured and unstructured data (cKG).We have already defined the (KGDExR) problem and provided thedefinition of a KG in section 3. Here, we will illustrate how we con-structed KG using both structured and unstructured data (combineddata (cKG)). The features of structured data, such as user, article,topic, product, topic_tag, product_tag, response, etc., serve asthe type of nodes or entities in the KG. These entities are connectedto other entities through relations such as has_topic, has_product,has_topic_tag, has_product_tag, and has_response. Addition-ally, we utilized the full text of the article, which represents theunstructured data, to create this KG. Therefore, this KG leverages both structured and unstructured data for its creation. The recom-mendation process begins with a user, traverses through specificentities and their associated relations, and ultimately leads to anitem, which in our case is the recommended article for that user. Wehave named the KG generated using structured and unstructureddata that is the combined data as \"cKG\".",
  "Knowledge Graph Embeddings": "In a given KG, each head entity or tail entity can be associated as apoint in a continuous vector space. In this work, we use TuckER and TransE methods to generate KG embeddings. TuckERemploys a three-way TuckER tensor decomposition, which com-putes the tensor T and a sequence of three matrices leveraging theembeddings of entities ( and ) and relations () betweenthem ( ).The underlying idea of TransE is to interpret relations as transla-tions that occur between entities in the knowledge graph. In TransE,each entity and relation is assigned a unique vector representationin the embedding space. The objective of the model is to learnthese embeddings in such a way that the translation between theembeddings of a head entity and a relation should be close to theembedding of a tail entity. These methods allow us to create KGembeddings that are used to train our recommender systems.",
  "Data sets": "The dataset used in this study contains the data of the customers ofa large multinational financial services company and the viewpointarticles sent to these customers by the company. The dataset spansfrom January 30th, 2019 to October 30th, 2019, and contains infor-mation of 463 customers who received approximately 80 articleseach during this period. The dataset consists of 37,423 rows, detail-ing individual customer-article interactions. It includes a total of 71articles, with 66 unique articles, providing details related to the prod-ucts and services that the financial services company provides. Thisdataset serves as a valuable resource for researchers and marketersinterested in understanding customer behavior and preferences,as well as identifying opportunities for targeted content and mar-keting strategies. We used this dataset for the evaluation of ourKG-driven RL-based approach and KG-driven XGBoost approachfor recommending articles to customers. The dataset is divided intotraining, and test sets with a ratio of 70:30 respectively. We havealso made this data set publicly available on a GitHub repository 3.",
  "RESULTS": "We have produced results using both KG-driven XGboost approachand KG-driven reinforcement learning approach. represents the results obtained using the proposed ap-proaches with the KG embeddings used for the model building.From , we can see that the baseline XGBoost model withsentence transformer embedding [all-MiniLM-L6-v2] achieved a30.38% MAP score. We observed improvements in performancewhen we used KG embeddings compared to when KG embeddingswere not used (see Tabel 1).We constructed two KGs using unstructured data (article text)through Saffron as mentioned in . These KGs are",
  "KG-RL[ cKG ]TransE KG Embedding0.437610.605620.24857": "\"uKG_DP\" and \"uKG_CN\" where u denotes unstructured data, DPdenotes dependency parsing and CN denotes ConceptNet. Addi-tionally, we created a KG referred to as \"cKG\" from both structuredand unstructured data, as explained in .The rationale behind using the cKG with RL-based approachis that it helps in generating explainable recommendations usingpaths in the cKG. For RL based approach we used KG embeddingsgenerated using TransE, as shown in .We also compared the performance of our proposed approacheswith state-of-the-art existing recommender systems. The existingrecommender systems we used are: BPR (Bayesian personalizedranking), Neighborhood-based Recommender System, NCF (NeuralCollaborative Filtering), and XGBoost with sentence embedding.We observed that BPR achieved a MAP score of 11.21%, whereasthe KG-driven XGBoost approach (cKG) and KG-driven RL-basedapproach using the same cKG achieved 34.47% and 43.76% MAPscores, respectively. The KG-driven XGBoost approach with KGgenerated using ConceptNet achieved a MAP score of 38.98% witha recall of 74.38%. The results suggest that if recall is important forany application, then KG-driven XGBoost with uKG_CN can be con-sidered as an option, as it provides the highest recall. Based on theresults, it can be observed that the KG-driven RL-based approachoutperformed the BPR, Neighborhood-based Recommender System,NCF, and KG-driven XGBoost approaches when considering theMAP score. Additionally, among all the experiments conductedwith KG embeddings, the KG embeddings generated from TransEhave proven to capture useful information, resulting in better per-formance compared to TuckER embeddings.Our KG-driven RL-based approach is explainable. To gain a betterunderstanding of our models interpretation of the recommenda-tion, we present a case study based on the results obtained fromour experiments. In this study, we analyze the path patterns un-covered by our model during the reasoning process, as well as",
  ": Explaining the recommendations of RL-based ap-proach using the path in the KG that leads to the recommen-dation": "examine different recommendation scenarios. As shown in , the article highlighted with a blue dashed boundary is the articlerecommended by our RL-based model to a user. We can see thatthe recommended article has some similarities with another articlealready recommended and clicked by that user, therefore the modelthinks that this article should be of relevance for that user as theuser was interested in such kind of articles before. Furthermore,our RL-based approach enables us to offer the top 10 articles foreach user. Additionally, it can provide all the associated articlesin the path that lead to the outcome, along with shared products,topics, and the most frequent common terms found in the text ofthe articles present in the path. Our RL-based approach can providesuch paths for each recommended item to a user which explain theresults and play an important role in decision-making.To generate post-hoc explanation for KG driven XGBoost-basedapproach, we used SHAP and ELI54. SHAP (SHapley Additive",
  ": Explaining the recommendations of KG-XGBoost[uKG_CN] model using ELI5": "exPlanations) is a model-agnsotic method used for explaining theoutput of machine learning models. It is based on game theoreticconcepts and provides an explanation for each features contribu-tion to the models prediction. SHAP values quantify the impactof each feature by assigning a value to it, indicating how much itcontributes to the prediction compared to the average prediction.SHAP relies on the concept of Shapley values from cooperativegame theory and it considers additive feature importance. represents the KG-XGBoost [uKG_CN] models features with theiraverage impact on the model output generated by SHAP.ELI5 (Explain Like Im 5) is a Python library or framework for ex-plainable machine learning models. ELI5 focuses on understandingthe overall behavior and importance of features in making pre-dictions. Eli5 reports feature importance using the \"permutationimportance\" algorithm. shows the KG-XGBoost [uKG_CN]models feature importance by assigning weights to the featuresbased on their impact on the model output generated by ELI5. BothSHAP and ELI5 show that click_frequency, kg_26, article_length,kg_32, Kg_3, and Kg_45 are the most important features that con-tributed most to the model results.",
  "CONCLUSION": "This research paper explores the use of knowledge graphs (KGs)to enhance personalized recommendations in the financial sector.We developed two KG-driven recommender systems for a largemultinational financial services company, utilizing reinforcementlearning and the XGBoost algorithm, respectively. The first ap-proach employs Reinforcement Learning (RL), while the secondutilizes the XGBoost algorithm. The XGBoost-based approach usesKG embeddings generated from both TuckER and TransE, and theRL-based approach uses TransE-generated embeddings. We alsoperformed experiments keeping the KG and the embedding same.The findings suggest that the KG-driven RL-based approach out-performs both the KG-driven XGBoost system and baseline models,delivering more accurate and personalized article recommendations.Additionally, the study emphasizes the importance of reasoningwith knowledge for decision-making. Overall, this study highlightsthe potential of combining advanced machine learning techniqueswith KG-driven insights to improve customer experience and drivebusiness growth in the investment sector. This publication has emanated from research supported in partby a grant from Science Foundation Ireland under Grant numberSFI/12/RC/2289_P2. For the purpose of Open Access, the author hasapplied a CC BY public copyright licence to any Author AcceptedManuscript version arising from this submission.",
  "Ivana Balaevi, Carl Allen, and Timothy M Hospedales. 2019. TuckER: TensorFactorization for Knowledge Graph Completion. In Empirical Methods in NaturalLanguage Processing": "Antoine Bordes, Nicolas Usunier, Alberto Garcia-Duran, Jason Weston, and Ok-sana Yakhnenko. 2013. Translating embeddings for modeling multi-relationaldata. Advances in neural information processing systems 26 (2013). Yixin Cao, Xiang Wang, Xiangnan He, Zikun Hu, and Tat-Seng Chua. 2019.Unifying knowledge graph learning and recommendation: Towards a betterunderstanding of user preferences. In The world wide web conference. 151161. Tianqi Chen and Carlos Guestrin. 2016. XGBoost: A Scalable Tree BoostingSystem. In Proceedings of the 22nd ACM SIGKDD International Conference onKnowledge Discovery and Data Mining (San Francisco, California, USA) (KDD16). Association for Computing Machinery, New York, NY, USA, 785794. Rajarshi Das, Shehzaad Dhuliawala, Manzil Zaheer, Luke Vilnis, Ishan Durugkar,Akshay Krishnamurthy, Alex Smola, and Andrew McCallum. 2017. Go for awalk and arrive at the answer: Reasoning over paths in knowledge bases usingreinforcement learning. arXiv preprint arXiv:1711.05851 (2017). Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2019. BERT:Pre-training of Deep Bidirectional Transformers for Language Understanding. InProceedings of the 2019 Conference of the North American Chapter of the Associa-tion for Computational Linguistics: Human Language Technologies, NAACL-HLT2019, Minneapolis, MN, USA, June 2-7, 2019, Volume 1 (Long and Short Papers), JillBurstein, Christy Doran, and Thamar Solorio (Eds.). Association for Computa-tional Linguistics, 41714186.",
  "Aditya Grover and Jure Leskovec. 2016. node2vec: Scalable feature learning fornetworks. In Proceedings of the 22nd ACM SIGKDD international conference onKnowledge discovery and data mining. 855864": "Andrey Gulin, Igor Kuralenok, and Dimitry Pavlov. 2011. Winning the transferlearning track of yahoo!s learning to rank challenge with yetirank. In Proceedingsof the Learning to Rank Challenge. PMLR, 6376. Qingyu Guo, Fuzhen Zhuang, Chuan Qin, Hengshu Zhu, Xing Xie, Hui Xiong,and Qing He. 2020. A survey on knowledge graph-based recommender systems.IEEE Transactions on Knowledge and Data Engineering 34, 8 (2020), 35493568.",
  "Xiangnan He, Lizi Liao, Hanwang Zhang, Liqiang Nie, Xia Hu, and Tat-SengChua. 2017. Neural collaborative filtering. In Proceedings of the 26th internationalconference on world wide web. 173182": "Jonathan L Herlocker, Joseph A Konstan, Al Borchers, and John Riedl. 1999. Analgorithmic framework for performing collaborative filtering. In Proceedings ofthe 22nd annual international ACM SIGIR conference on Research and developmentin information retrieval. 230237. Jin Huang, Wayne Xin Zhao, Hongjian Dou, Ji-Rong Wen, and Edward Y Chang.2018. Improving sequential recommendation with knowledge-enhanced mem-ory networks. In The 41st international ACM SIGIR conference on research &development in information retrieval. 505514. Guolin Ke, Qi Meng, Thomas Finley, Taifeng Wang, Wei Chen, Weidong Ma,Qiwei Ye, and Tie-Yan Liu. 2017. Lightgbm: A highly efficient gradient boostingdecision tree. Advances in neural information processing systems 30 (2017).",
  "Maximilian Nickel, Volker Tresp, Hans-Peter Kriegel, et al. 2011. A three-waymodel for collective learning on multi-relational data.. In Icml, Vol. 11. 31044823104584": "Bianca Pereira, Cecile Robin, Tobias Daudert, John P. McCrae, Pranab Mohanty,and Paul Buitelaar. 2019. Taxonomy Extraction for Customer Service KnowledgeBase Construction. In Semantic Systems. The Power of AI and Knowledge Graphs,Maribel Acosta, Philippe Cudr-Mauroux, Maria Maleshkova, Tassilo Pellegrini,Harald Sack, and York Sure-Vetter (Eds.). Springer International Publishing, Cham,175190. Liudmila Prokhorenkova, Gleb Gusev, Aleksandr Vorobev, Anna Veronika Doro-gush, and Andrey Gulin. 2018. CatBoost: unbiased boosting with categoricalfeatures. Advances in neural information processing systems 31 (2018). Paul Resnick, Neophytos Iacovou, Mitesh Suchak, Peter Bergstrom, and JohnRiedl. 1994. Grouplens: An open architecture for collaborative filtering of netnews.In Proceedings of the 1994 ACM conference on Computer supported cooperativework. 175186. Badrul Sarwar, George Karypis, Joseph Konstan, and John Riedl. 2001. Item-basedcollaborative filtering recommendation algorithms. In Proceedings of the 10thinternational conference on World Wide Web. 285295. Michael Schlichtkrull, Thomas N Kipf, Peter Bloem, Rianne Van Den Berg, IvanTitov, and Max Welling. 2018. Modeling relational data with graph convolu-tional networks. In The Semantic Web: 15th International Conference, ESWC 2018,Heraklion, Crete, Greece, June 37, 2018, Proceedings 15. Springer, 593607.",
  "Daixin Wang, Peng Cui, and Wenwu Zhu. 2016. Structural deep network em-bedding. In Proceedings of the 22nd ACM SIGKDD international conference onKnowledge discovery and data mining. 12251234": "Hongwei Wang, Fuzheng Zhang, Jialin Wang, Miao Zhao, Wenjie Li, Xing Xie,and Minyi Guo. 2018. Ripplenet: Propagating user preferences on the knowledgegraph for recommender systems. In Proceedings of the 27th ACM internationalconference on information and knowledge management. 417426. Xiting Wang, Yiru Chen, Jie Yang, Le Wu, Zhengtao Wu, and Xing Xie. 2018. Areinforcement learning framework for explainable recommendation. In 2018 IEEEinternational conference on data mining (ICDM). IEEE, 587596. Xiang Wang, Xiangnan He, Meng Wang, Fuli Feng, and Tat-Seng Chua. 2019.Neural graph collaborative filtering. In Proceedings of the 42nd international ACMSIGIR conference on Research and development in Information Retrieval. 165174. Xiang Wang, Dingxian Wang, Canran Xu, Xiangnan He, Yixin Cao, and Tat-SengChua. 2019. Explainable reasoning over knowledge graphs for recommendation.In Proceedings of the AAAI conference on artificial intelligence, Vol. 33. 53295336.",
  "Wenhan Xiong, Thien Hoang, and William Yang Wang. 2017. Deeppath: Areinforcement learning method for knowledge graph reasoning. arXiv preprintarXiv:1707.06690 (2017)": "Fuzheng Zhang, Nicholas Jing Yuan, Defu Lian, Xing Xie, and Wei-Ying Ma.2016. Collaborative knowledge base embedding for recommender systems. InProceedings of the 22nd ACM SIGKDD international conference on knowledgediscovery and data mining. 353362. Yongfeng Zhang, Qingyao Ai, Xu Chen, and W Bruce Croft. 2017. Joint repre-sentation learning for top-n recommendation with heterogeneous informationsources. In Proceedings of the 2017 ACM on Conference on Information and Knowl-edge Management. 14491458. Guanjie Zheng, Fuzheng Zhang, Zihan Zheng, Yang Xiang, Nicholas Jing Yuan,Xing Xie, and Zhenhui Li. 2018. DRN: A deep reinforcement learning frameworkfor news recommendation. In Proceedings of the 2018 world wide web conference.167176."
}