{
  "Hana KhamfroushDepartment of Computer ScienceUniversity of KentuckyLexington, KY,": "AbstractThe integration of Internet of Things (IoT) applica-tions in our daily lives has led to a surge in data traffic, posingsignificant security challenges. IoT applications using cloud andedge computing are at higher risk of cyberattacks because of the ex-panded attack surface from distributed edge and cloud services, thevulnerability of IoT devices, and challenges in managing securityacross interconnected systems leading to oversights. This led to therise of ML-based solutions for intrusion detection systems (IDSs),which have proven effective in enhancing network security anddefending against diverse threats. However, ML-based IDS in IoTsystems encounters challenges, particularly from noisy, redundant,and irrelevant features in varied IoT datasets, potentially impactingits performance. Therefore, reducing such features becomes crucialto enhance system performance and minimize computational costs.This paper focuses on improving the effectiveness of ML-basedIDS at the edge level by introducing a novel method to find abalanced trade-off between cost and accuracy through the creationof informative features in a two-tier edge-user IoT environment. Ahybrid Binary Quantum-inspired Artificial Bee Colony and GeneticProgramming algorithm is utilized for this purpose. Three IoTintrusion detection datasets, namely NSL-KDD, UNSW-NB15, andBoT-IoT, are used for the evaluation of the proposed approach.Performance analysis is conducted using various evaluation met-rics such as accuracy, sensitivity, specificity, and False PositiveRate (FPR) are employed, while the cost of the IDS system isassessed based on computational time. The results are comparedwith existing methods in the literature, revealing that the IDSperformance can be enhanced with fewer features, consequentlyreducing computational time, through the proposed method. Thisoffers a better performance-cost trade-off for the IDS system.Index TermsBinary Quantum-inspired Artificial Bee ColonyAlgorithm, Feature Construction, Feature Selection, Genetic Pro-gramming, Intrusion Detection Systems",
  "I. INTRODUCTION": "In the era of Internet of Things (IoT) applications andwidespread internet usage, security has become a major andgrowing concern. The interconnected nature of IoT devices hasexpanded the attack surface, providing numerous entry points formalicious actors. The increasing volume of data exchanged be-tween these devices poses a significant target for cybercriminals,raising the potential impact of security breaches across variousaspects of daily life, from smart homes to industrial systems.By the end of 2024, it is anticipated that there will be 83 billion IoT devices, utilized across various domains such as intelligenttransportation, smart healthcare, and others, contributing to thedevelopment of smart cities .This surge in IoT adoption has also led to challenges indata management and processing. The data collected by IoTdevices has been transmitted to a distant cloud server for furtherprocessing. However, this setup poses challenges due to thesignificant distance between the devices and the server, resultingin delays that are not conducive to the time-sensitive nature ofIoT applications. Therefore, with the introduction of an edgecomputing framework, data is sent to edge servers located closerto the IoT devices in most applications. This reduces latency, butits important to note that these edge servers still face limitationsin terms of storage and computational power compared to cloudservers .Moreover, within IoT frameworks, numerous devices interactthrough web application interfaces, necessitating robust authenti-cation and encryption methods to ensure secure communication.In this context, intrusion detection systems (IDSs) play a crucialrole in monitoring and identifying attacks. IDSs are broadlycategorized into two types based on their discovery methods:signature-based IDS and anomaly-based IDS. The signature-based method relies on pre-stored rules that represent specificattack types. Consequently, any attack not included in the pre-stored rules will go undetected. Conversely, anomaly-based IDSexhibits proficiency in efficiently detecting zero-day (unknown)attacks .Lately, the application of machine learning (ML) techniqueshas become increasingly prevalent in the field of intrusiondetection within IoT IDSs. However, IoT devices exhibit differ-ences in their hardware attributes, functions, and computationalcapabilities to generate features. When IoT devices transmittheir data to an edge server, some features may be noisy,irrelevant or redundant. These characteristics significantly affectthe performance of IDSs . Selecting informative features ispivotal in ML-based methods for enhancing IDS accuracy byeliminating non-informative features and reducing complexitycosts through dataset size reduction. While some studies, such as, have employed feature selection (FS) techniques for this",
  "arXiv:2404.19114v1 [cs.CR] 29 Apr 2024": "purpose, the exploration of constructing new high-level featuresfor IDSs remains unaddressed in existing literature. This paperproposes a novel method to find a balanced trade-off betweencosts and accuracy by constructing new informative features forML-based IDSs within the diverse IoT environment.The search space for feature construction is extensive, asinformative features must be combined with appropriate op-erators to create distinctive new features. Therefore, selectingprominent features for this purpose can be beneficial. To achievethis, the binary quantum-inspired artificial bee colony (BQABC)algorithm is used for selecting informative features. BQABChas better convergence rate and exploration capability to preventtrapping in a local optima compared to other binary optimizationalgorithms such as binary quantum-inspired particle swarm op-timization (BQIPSO) and binary quantum-inspired evolutionaryalgorithm (BQIEAo). Subsequently, genetic programming (GP), a domain-independent problem-solving approach, is utilizedto construct high-level features for more accurate intrusiondetection with less computation cost. The main contributionsof the proposed method can be summarized in the followingmanner:",
  "A. Related Works": "Supervised ML classification algorithms use training data toestablish a functional relationship between input features andclass values. The trained classifier then predicts class values forquery instances. However, the dataset may contain redundant,noisy, or irrelevant features, which can harm classificationperformance. To address this, feature engineering techniqueslike feature selection (FS), and feature construction (FC) areemployed to enhance feature quality and boost classifier accu-racy. FC creates new features through functional expressionsto improve performance and reveal hidden relationships, whileFS selects informative features and reduces the total number byeliminating non-informative ones .While FS methods have been used in ML-based IDSs, FCtechniques have not been applied. Consequently, this sectioninvestigates previous research studies that have employed var-ious FS methods to enhance the performance of ML-basedIDSs. FS methods can be mainly categorized into filter andwrapper methods. Filter methods operate independently of the learning algorithms and rank features based on their inherentcharacteristics like information theory, mutual information, orcorrelation criteria . For example, in , the features wereranked by combining their statistical importance through Stan-dard Deviation and the Difference of Mean and Median. Inanother study , information gain was used as FS method.In contrast, wrapper methods employ learning algorithms toassess the quality of selected features, making them more accu-rate than filter methods. For instance, in , Genetic algorithmwith Random Forest-based fitness function was used to selectinformative features. Similarly, in , differential evaluationalgorithm was used to select the most suitable features andsubsequently assessed the selected features using the extremelearning machine classifier. In the paper by Kareem et al. ,they employed Gorilla Troops Optimizer as a FS algorithm andaugmented its exploitation capability by integrating the birdswarms algorithm. In another study , the authors employedthe Tabu Search algorithm in conjunction with a random forestclassifier to identify the optimal subset of features for IDSs.Reviews indicate the need for more optimal solutions dueto low classification accuracy in existing methods. Additionally,FC methods have not been employed as a pre-processing step inIDSs. Therefore, this paper proposes a hybrid feature engineer-ing method to find a balanced trade-off between computationalcost and accuracy.",
  "B. Binary Quantum-inspired Artificial Bee Colony": "Binary Quantum-inspired Artificial Bee Colony (BQABC)is proposed by Barani and Nezamabadi-pour in 2017 . Itcombines Artificial Bee Colony (ABC)s main structure withquantum computing principles, offering high exploration capa-bility and robustness for binary optimization problems.In the BQABC, some concepts of quantum computing likequantum bits and quantum gates are applied in the main structureof ABC algorithm to define the position of food sources and theirupdating process. The pseudocode of the BQABC algorithm isgiven in Algorithm 1. You can read more details about thisalgorithm in .",
  "C. Genetic Programming (GP)": "Genetic Programming (GP) was introduced for the first timeby John Koza . This algorithm used genetic algorithm asa process to evolve mathematical functions, but chromosomesare encoded with tree structure. The leaves of trees can beselected from the variables of the problem, and internal nodescan be selected from predefined mathematical operators. GP isa population-based evolutionary algorithm that tries to find anoptimum function for the desired problem. For this purpose, itgenerates a number of chromosomes with different sizes, andthen selects the best one based on their fitness values. The GPsearch procedure can be narrated by several main steps:",
  "III. PROPOSED METHOD": "In this section, the proposed feature engineering method forintrusion detection is explained. This method utilizes both FSand FC techniques to provide informative features for preciseclassification of network attacks, while also finding the trade-off between accuracy and computational cost. To achieve this,the BQABC nature-inspired algorithm is employed to evaluatedataset features and eliminate non-informative ones, therebyreducing the search space and improving the quality of thefeature set. For example, consider a dataset D = {X, Y } :={(xn, yn)}Nn=1, consisting of N samples and a feature setF = {f1, f2, ..., fm}. Here, xn = (xn1, xn2, ..., xnm) representsa sample vector, and Y = (y1, y2, ..., yN) denotes the class labelvector of N samples, where yn {1, ..., ClassLabel}. F ={f1, f2, ..., fm} refers the original feature set used by BQABCto select informative features Selected F = {f1, f2, ..., fs}.Subsequently, the selected features are inputted into the GPalgorithm, a type of FC algorithm, to generate a new, higher-level, and more distinctive feature {fc}. This newly constructedfeature is then added to the selected feature subset, resulting inan augmented feature set AugmentedF = {f1, f2, ..., fs, fc}.Finally, this augmented feature set is fed into a Machine Learn-ing (ML) classifier to detect security attacks.System Architecture: In this paper, intrusion attack detectionis performed at the edge level. Data collected by the IoT devicesare sent to their closest edge server for further processingincluding intrusion detection. As previously stated, the distance(D) between IoT devices and the cloud server is significantlygreater than the distance (d) between IoT devices and the nearestedge server. Therefore, by transmitting data to the edge server,latency is reduced, making it more suitable for time-sensitive IoTapplications. However, edge servers have inherent limitations interms of storage and computational power compared to cloudservers. As illustrated in , our focus is solely on detectingattacks on a single edge server, assuming that each edge serveris tasked to perform intrusion detection for its assigned set ofIoT devices.FS phase: The BQABC is a population-based method, andits procedure begins by initializing a random population. Eachagent in this population is represented by a binary string, witha length exactly matching the number of original features ina dataset. The ith binary solution at the tth iteration of thisalgorithm can be represented as Zi(t) = [z1i (t), z2i (t), ..., zmi (t)],where zji (t) {0, 1}. In these strings, 1 indicates thatthe corresponding feature is selected, while 0 indicates itis not selected. Subsequently, these agents (primary solutions)are displaced, combined and evolved during the iterations. Toachieve this, at each iteration, a learning algorithms feedbackis utilized to evaluate and score the agents. In other words, thelearning algorithm serves as a fitness function, with its accuracyconsidered as a fitness value for the agents. Ultimately, the best-performing agent is identified as the optimal feature subset.FC phase: In this step, the GP algorithm is employed to gen-erate a new informative feature. Unlike most other population-based methods, the GP algorithm represents individuals astrees, which serves as a robust representation for mathematical",
  ": System Architecture": "expressions. The process begins by initializing the population,wherein the selected features obtained from the previous phaseSelected F= {f1, f2, ..., fs} (FS phase) are combinedwith mathematical operations such as +, , , sin, and cos.Each tree, or newly created feature, is then evaluated using aclassifier, and the accuracy of that classifier is assigned to thecorresponding constructed feature as a fitness value. The processcontinues until the maximum number of allowed generation isreached, during which trees are reproduced using crossover andmutation operators to update the population. Upon reaching thetermination condition, the best individual is selected as the high-level constructed feature.After these two steps, the best constructed feature from theFC step {fc} is added to the best selected features that areobtained in the FS step (Selected F = {f1, f2, ..., fs}). Thisaugmented feature set (Augmented F = {f1, f2, ..., fs, fc})is used for training a classifier to detect network attacks andcalculate its accuracy as a measure of the IDSs performance.The pseudocode of the proposed method is given in Algorithm2, and this process is illustrated in .",
  "A. Dataset": "The proposed method is tested on three benchmark datasets:NSL-KDD , UNSW-NB 15 , and Bot-IoT . TheNSL-KDD dataset, an improved version of KDD99, comprises41 features with 125,973 instances in the training set and 22,544instances in the test set. The UNSW-NB 15 dataset includes 49features created using the Argus tool. It is divided into a trainingset containing 175,341 samples and a testing set comprising82,332 samples, covering various attack types and standardrecords. The Bot-IoT dataset is created to mimic a real-worldscenario. This paper utilizes 5% of the complete dataset, whichcomprises over 3.6 million instances . The characteristics ofthese datasets are indicated in Table I.",
  "B. Evaluation Measure": "In wrapper-based FS and FC methods, performance of aclassifier is used to evaluate and score selected feature subsetsor constructed features. In this paper, K-nearest neighbor (KNN)classifier is used as a fitness function in BQABC and GP algo-rithm. The performance metrics extracted from the confusionmatrix and employed in this study are accuracy, sensitivity(recall), specificity, and the False Positive Rate (FPR). Theseevaluation metrics are calculated using equations (1) to (4).",
  "C. Parameter Setting": "The KNN Learning algorithm is employed as the classifier.Compared to more complex learning algorithms such as neuralnetworks, KNN is straightforward yet performs well, oftencompeting with other complex classifiers. Given the limitationsof edge servers previously discussed, a simple classifier like KNN is used in this work. According to , the value of K inthe KNN classifier, denoting the number of nearest neighbors,is set to 5 for result comparison. In BQABC, the minimumand maximum values of the rotation angle which is indicatedby are 0.001 and 0.05 respectively. The total number ofagents in BQABC and GP is set to 50, and maximum numberof iterations is 100. Each of these methods is executed 30 times,and the average evaluation values are computed based on these30 runs. It should be mentioned that all these values are chosenbased on trial and error. All these parameters are demonstratedin Table II.",
  "Internal nodes functions+, , , sin, cos": "Data pre-processing: Also, the data is initially pre-processedto ensure uniform formatting. This involves a two-step process:first, non-numeric values are converted to numeric values, re-ferred to as numericalization. Following this, a normalizationprocess is applied to bring all numerical columns onto a commonscale range. Some variables, when measured on different scales,can introduce bias into the model. Given that we are workingwith NSL-KDD, UNSW-NB15, and BoT-IoT as benchmarkdatasets, it has been observed that each feature exhibits dis-tinct ranges. Therefore, min-max normalization is chosen forconsistency. This approach involves normalizing the features bysubtracting the mean from each feature and then dividing it byits standard deviation. Min-max normalization scales the valuesto fall within the range of .",
  "D. Results and Analysis": "In this section, we evaluate the effectiveness of the proposedhybrid feature selection and construction method in identifyingthe optimal feature subset and constructed feature by comparingit to various other metaheuristic feature selection algorithms,such as CS-PSO , HHO , MVO , HGS , BSA, GTO , and GTO-BSA which are described below.The experiments make use of three intrusion detection datasets:NSL-KDD, UNSW-NB15, and BoT-IoT, representing a goodcombination of zero-day security threats. Cuckoo search-Particle swarm optimization (CS-PSO): Itcombines two algorithms, cuckoo search and particleswarm optimization, while integrating the concepts of localbest and global best. Then informative features are chosenbased on their fitness values to classify all the attacksaccurately .",
  "Gorilla Troops Optimizer (GTO): This algorithm mathe-matically models the collective life of gorillas and intro-duces novel mechanisms for both exploration and exploita-tion": "Gorilla Troops Optimizer based on Bird Swarm Algorithm(GTO-BSA): This algorithm utilizes BSA to enhance theexploitation performance of GTO due to its strong capa-bility in locating feasible regions with optimal solutions.Consequently, this contributes to an improved final outputquality and enhances the performance of IDSs. Comparison with state of the art methods: Tables III, IV,and V present the experimental results for NSL-KDD, UNSW-NB15, and BoT-IoT, respectively. The results indicate that,in nearly all evaluation metrics, the proposed hybrid featureselection and feature construction technique outperforms recentwrapper-based feature selection techniques with KNN-basedIDS for all three intrusion detection datasets. In the case of theNSL-KDD dataset, the proposed approach attained an accuracyof 0.9889 with a reduced dataset containing 11 features. Thisreflects an approximate increase in accuracy of 0.033 to 0.0449with the proposed hybrid method when applied to a KNN-basedIDS using the NSL-KDD dataset. Meanwhile, on the UNSW-NB15 dataset, the proposed approach achieved an accuracy of0.9022 while reducing the feature set by approximately 78.36%.As a result, an estimated increase in accuracy of approximately0.1921 to 0.2696 is observed with the proposed method. Movingon to the BoT-IoT dataset, the proposed method achieved anaccuracy of 0.9849 using a reduced feature subset consistingof about 10 features out of the original 43. This resulted inan estimated accuracy increase of around 0.0317 to 0.0525.However, the proposed method selects and constructs morefeatures for this dataset compared to the other FS methods beingcompared.A high False Positive Rate (FPR) can trigger false alarms,potentially causing the intrusion detection system to misclassifynormal network traffic as malicious. With the proposed ap-proach, it achieves promising scores for sensitivity (True PositiveRate), specificity (True Negative Rate), and FPR evaluationmetrics across all three datasets. This method concurrentlyenhances both the True Positive Rate and True Negative Ratewhile reducing the FPR. Compared to other methods, the NSL-KDD dataset exhibits an increase in sensitivity of approximately0.0561 to 0.0809 and an increase in specificity of around 0.0121to 0.0169. These improvements result in a sensitivity of 0.9703and a specificity of 0.9876 when applying the proposed hybridtechnique. Similarly, for the UNSW-NB15 dataset, there is an increase in sensitivity ranging from about 0.133 to 0.2656 and animprovement in specificity ranging from approximately 0.0023to 0.0779, culminating in a sensitivity of 0.9483 and a specificityof 0.8806. Nonetheless, in the case of the BoT-IoT dataset, theHHO method achieved a higher sensitivity of 0.9992, while thesensitivity of the proposed method was 0.9979. On the otherhand, the proposed method obtained the highest specificity of0.9927, whereas HHOs specificity was 0.5111. Furthermore,the proposed method has demonstrated superior performance interms of achieving the lowest FPR across all three datasets.Computational time analysis: Table VI illustrates the aver-age computational time (s) across 30 repetitions for the com-pared methods. Given our focus on the performance-cost trade-off, it is essential to simultaneously consider Table VI alongsideTables III, IV, and V for a comprehensive understanding. Bycomparing table VI and table III, it is clear that the pro-posed method outperforms the overall best-performing algorithm(GTO-BSA) in terms of speed by a factor of 7 while alsoenhancing accuracy from 0.9559 to 0.9889. This comparisonhighlights that the proposed method offers a balanced trade-off between computational cost and other performance metricsfor almost all datasets. For example, by considering Table VIand Table V, it becomes apparent that the proposed methodoutperforms the HHO method in computational cost by a factorof 1.5. Furthermore, the sensitivity remains nearly identical(0.9979), while other performance metrics exhibit improvement.",
  "Proposed method10.60.90220.94830.88060.1194": "Non-parametric statistical analysis: The proposed approachenhances IDS performance in most cases by carefully choosingand creating informative features from the original feature set.To statistically validate the achieved results, the nonparametricWilcoxon signed-rank test is utilized for all the performancemeasures. In Table VII, the exact p-values are presented, con-firming significant differences between the proposed hybrid",
  "V. CONCLUSION AND FUTURE WORKS": "In this paper, we introduce a novel feature engineering methodto find a balance trade-off between cost and accuracy to enhanceintrusion detection system (IDS) performance. This approachfocuses on increasing detection accuracy while concurrentlyreducing false positive rates by identifying the most informativefeatures that positively impact IDS performance. We evaluatethe performance of the proposed feature engineering methodusing three IoT intrusion detection datasets: NSL-KDD, UNSW-NB15, and BoT-IoT, and compare it with other competitivealgorithms. The results indicate achieved accuracies of 0.9889,0.9022, and 0.9849 for the NSL-KDD, UNSW-NB15, andBoT-IoT datasets, respectively. As this study marks the initialexploration of feature construction in the context of intrusiondetection, future research endeavors may extend this approachto construct multiple features, potentially replacing the totalnumber of original features with the newly created ones. Fur-thermore, in future endeavors, our focus may shift towardsdetecting attacks within a distributed IoT environment, ratherthan concentrating solely on a single edge server.",
  "trusion detection using machine learning with a novel highperforming feature selection method, Applied Sciences,vol. 12, no. 10, p. 5015, 2022": "A. Mahanipour and H. Khamfroush, Wrapper-based fed-erated feature selection for iot environments, in 2023International Conference on Computing, Networking andCommunications (ICNC).IEEE, 2023, pp. 214219. A. K. Mishra and S. Paliwal, Mitigating cyber threatsthrough integration of feature selection and stacking en-semble learning: the lgbm and random forest intrusiondetection perspective, Cluster Computing, vol. 26, no. 4,pp. 23392350, 2023. W. L. Al-Yaseen, A. K. Idrees, and F. H. Almasoudy,Wrapper feature selection method based differential evo-lution and extreme learning machine for intrusion detectionsystem, Pattern Recognition, vol. 132, p. 108912, 2022. S. S. Kareem, R. R. Mostafa, F. A. Hashim, and H. M.El-Bakry, An effective feature selection model using hy-brid metaheuristic algorithms for iot intrusion detection,Sensors, vol. 22, no. 4, p. 1396, 2022.",
  "detection, Computers & Security, vol. 102, p. 102164,2021": "M. Tavallaee, E. Bagheri, W. Lu, and A. A. Ghorbani, Adetailed analysis of the kdd cup 99 data set, in 2009 IEEEsymposium on computational intelligence for security anddefense applications.Ieee, 2009, pp. 16. N. Moustafa and J. Slay, Unsw-nb15: a comprehensivedata set for network intrusion detection systems (unsw-nb15 network data set), in 2015 military communicationsand information systems conference (MilCIS).IEEE,2015, pp. 16. N. Koroniotis, N. Moustafa, E. Sitnikova, and B. Turnbull,Towards the development of realistic botnet dataset in theinternet of things for network forensic analytics: Bot-iotdataset, Future Generation Computer Systems, vol. 100,pp. 779796, 2019. P. Ghosh, A. Karmakar, J. Sharma, and S. Phadikar, Cs-pso based intrusion detection system in cloud environ-ment, in Emerging Technologies in Data Mining andInformation Security: Proceedings of IEMIS 2018, Volume1.Springer, 2019, pp. 261269.",
  "S. Mirjalili, S. M. Mirjalili, and A. Hatamlou, Multi-verseoptimizer: a nature-inspired algorithm for global optimiza-tion, Neural Computing and Applications, vol. 27, pp.495513, 2016": "Y. Yang, H. Chen, A. A. Heidari, and A. H. Gandomi,Hunger games search: Visions, conception, implementa-tion, deep analysis, perspectives, and towards performanceshifts, Expert Systems with Applications, vol. 177, p.114864, 2021. X.-B. Meng, X. Z. Gao, L. Lu, Y. Liu, and H. Zhang, Anew bio-inspired optimisation algorithm: Bird swarm al-gorithm, Journal of Experimental & Theoretical ArtificialIntelligence, vol. 28, no. 4, pp. 673687, 2016. B. Abdollahzadeh, F. Soleimanian Gharehchopogh, andS. Mirjalili, Artificial gorilla troops optimizer: a newnature-inspired metaheuristic algorithm for global opti-mization problems, International Journal of IntelligentSystems, vol. 36, no. 10, pp. 58875958, 2021."
}