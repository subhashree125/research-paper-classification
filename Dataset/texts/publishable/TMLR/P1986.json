{
  "Abstract": "Understanding the high-density crowd dynamics of urbanization plays an important role inarchitectural design and urban planning, preventing the occurrence of crowd crush. Mosttraditional methods rely on formulas designed based on expert knowledge, which are in-flexible and incomplete to model complex real-world crowd trajectories.To address theissue, recent studies propose to simulate crowds via data-driven models. However, thesemodels fail to learn the inherent symmetry of high-density crowd trajectories, leading toinsufficient generalization ability. For example, existing models can not predict left-to-righttrajectories by learning right-to-left trajectories, even though they share similar patterns.In this work, we propose a novel Equivariant Graph Learning framework for high-densitycrowd dynamic modeling, called CrowdEGL. It utilizes an additional objective to encouragemodels to predict the transformed output given the input under the same transformation.We summarize three types of transformation groups, which are determined by the symme-try of environments. To explicitly incorporate these augmented data, a multi-channel GNNis employed to learn the latent graph embedding of pedestrian patterns. Finally, to modeldense crowd interactions, future positions of original and transformed inputs are obtained bymultiple independent graph decoders. Extensive experiments on 8 datasets from 5 differentenvironments show that CrowdEGL outperforms existing models by a large margin.",
  "Introduction": "The increasing population and resulting urbanization have led to a significant rise in crowd density, par-ticularly in urban areas such as metro stations, stadiums, and exhibition centers (Sindagi & Patel, 2018).Therefore, understanding high-density crowd dynamics is essential for applications in public safety (Johans-son et al., 2008). Specifically, given the initial states (locations, velocities, etc.) of crowds, our objective isto forecast their future state by modeling interactions among pedestrians and the impact of environments.Such forecasting is crucial for crowd management (Xu et al., 2014), architectural design, and urban planning.Otherwise, without proper and sufficient safety measures, the gathering of large crowds in confined spacescan lead to stampede incidents, causing injuries and fatalities. For example, Seoul Halloween crowd crush in2022 killed 159 people and 196 others were injured (contributors, 2023); In 2023 Freedom City Mall crush,crowds rushing to see a firework display got stuck in a narrow corridor and killed 10 people (Atuhaire, 2023).",
  "(a) High-density Crowds": ": (a) Illustration of high-density crowds at a 90crossing, which contains dense interactions; (b)Rotation equivariance of pedestrian trajectory. They enter through the four entrances to reach the oppositeexits. Trajectories starting from different entrances are indicated by different colors. Early crowd modeling approaches (Yang et al., 2020) rely on formulas designed based on human priorknowledge. Among them, the Boids algorithm (Reynolds, 1987) is a representative model, which simulatescrowd dynamics through three fundamental rules: separation, alignment, and cohesion. Another widelyused method is the social force model (Helbing & Molnar, 1995) which characterizes interactions amongindividuals, obstacles, and destinations as different types of forces (repulsive or attractive) and utilizesNewtonian mechanics to update their behaviors. However, these assumptions are incomplete and overlyrestrictive to model real-world crowd dynamics, which are inherently complex and heterogeneous (Moussadet al., 2011). Therefore, recent works (Shi et al., 2023; Zhang et al., 2022; Yu et al., 2023) have employeddata-driven models to obtain more realistic crowd trajectories and demonstrate promising performance.In particular, they treat individuals, obstacles, and destinations as nodes and construct graphs based ontheir distance. Graph Neural Networks (GNNs) (Gilmer et al., 2017) are then employed to encode theirinteractions, and a Multilayer Perceptron (MLP) decoder is commonly used to predict the future states ofthe crowd. Nevertheless, current GNNs (Shi et al., 2023; Sanchez-Gonzalez et al., 2020; Gilmer et al., 2017) are insuf-ficient to capture internal symmetries of the physical world (Cohen & Welling, 2016; Walters et al., 2021;Xu et al., 2023), thus they fail to generalize in different directions. displays high-density crowdtrajectories in a 90crossing. Pedestrians enter the crossing from four entrances and aim to exit from theopposite exits. In such highly crowded situations, we can observe that pedestrian trajectories demonstratespecific rotational symmetries. For instance, if the initial states of pedestrians are rotated by 180, the crowdtrajectories would rotate in an analogous way, known as rotation equivariance. With reduced individual free-dom of movement, the interactions among pedestrians, as well as the interactions between pedestrians andenvironments, are nearly invariant to such rotations. Regardless of this inductive bias, GNNs are inadequateto learn the real crowd dynamics and tend to overfit the observed trajectories (See ). Although multiple GNNs (Satorras et al., 2021; Han et al., 2022a; Huang et al., 2022) have been proposed topredict physical dynamics with strictly equivariant under a given group action, it remains non-trivial to designsymmetric crowd dynamic models because of the following challenges: (1) Dense interactions. In high-density circumstances, crowd interactions occur with great frequency, so that pedestrians are often forced totake detours or even change their intended destinations (Cao et al., 2017); (2) Imperfectly symmetric.Due to the effects of varying human psychology and physiology, they might not react completely the same tonearby pedestrians and the environment, breaking the symmetry of crowd trajectories to a certain degree;(3) Finite group actions. Existing equivariant GNNs (Han et al., 2022b) leverage the complete symmetryof the Euclidean space, ensuring their outputs will rotate/translate/reflect in the same way as the inputs.Such constraint is too strong for crowd dynamic modeling (Dangovski et al., 2022; Wang et al., 2022). Forinstance, in , a 100rotation of crowds would violate the boundary condition and thus be invalid. In this work, we propose a novel Equivariant Graph Learning framework called CrowdEGL, encouragingGNNs to learn a more practical imperfect equivariance property. Specifically, it achieves this objective viaan equivariance loss that is constructed based on data augmentation. It works as a regularization term so thatwe can control the degree of equivariance. The augmented strategies are defined by cyclic groups (Suzuki,",
  "Published in Transactions on Machine Learning Research (09/2024)": "simulation performance. Another similar research line is pedestrian trajectory prediction (Alahi et al., 2016;Gupta et al., 2018), whose goal is to predict pedestrians future positions based on their historical trajecto-ries. However, they generally study the pedestrian trajectories in urban open spaces where interactions arerelatively sparse. Thus, they focus on capturing their sequential dependency via time-series models, such asrecurrent models (Alahi et al., 2016; Feng et al., 2018) and Transformer (Yu et al., 2020). Different fromthe above studies, our target is to predict the future position of high-density crowds based on current states.In this task, interactions are extremely dense and significantly affect crowd trajectories. Thus, we focus onmodeling such interactions via GNNs.",
  "Problem Definition": "Different from existing studies (Alahi et al., 2016; Gupta et al., 2018; Kothari et al., 2022; Shi et al., 2021;Yu et al., 2020) on urban open space (e.g., parks), in this work, we study trajectories in various bounded andnarrow environments that have extremely dense interactions. Therefore, we consider a challenging problemsetting that focuses on learning interactions of initial crowd states and forecasting their positions after afixed time interval. Compared to existing works (Shi et al., 2023; Zhang et al., 2022), we omit historicalstates and destinations, which are employed to reflect pedestrian intentions but are not always available inpractice. Specifically, as shown in , we employ discretized obstacles to represent the environments (e.g., walls).Then pedestrians and obstacles can be treated as nodes in a graph. At time t, each node i is representedby: (1) geometric features including the position vector x(t)i R2 and the velocity vector v(t)i R2; (2)non-geometric features such as the node type (pedestrian or obstacle), denoted by ui; (3) spatial connectionwith others, where an edge eij is constructed via distance cutoff and the edge attributes (e.g., node distances)are denoted by aij. For simplicity, we denote (x(t), v(t)) and (u, e = {eij}, a = {aij}) as dynamic crowdstates and graph features correspondingly. Formally, the crowd trajectory forecasting problem is defined asfollows: Definition 2.1 (Crowd Trajectory Forecasting) Given the initial crowd states (x(t), v(t)) at time t and graph(u, e, a), the objective is to predict the subsequent position x(t+t), where t is the target time interval.",
  "Graph Neural Networks": "GNNs (Gilmer et al., 2017; Kipf & Welling, 2017; Xu et al., 2019; Zhao et al., 2024; Sun et al., 2023;Tang et al., 2022) are neural models specifically designed to learn graph-structured data with complexrelationships and dependencies. Recently, they have shown great potential in simulating physical systemssuch as fluid (Sanchez-Gonzalez et al., 2020; Li & Farimani, 2022) and molecular dynamics (Huang et al.,",
  "m(l)i= Agg({m(l)ij }jNi),h(l)i= Combine(h(l1)i, m(l)i ),(1)": "where Ni collects the neighbors of node i. The common choices of Agg function are Sum or Mean, whilethat of Combine function is Multi-layer Perceptrons (MLPs). The final prediction is obtained by applyingseveral iterations of message passing. Most existing Equivariant GNNs (e.g., EGNN and GMN) and GraphNeural Simulators such as GNS and CrowdSim are based on such a framework.",
  "Overview": "illustrates the overall framework of CrowdEGL. The high-level idea is to learn a latent graph rep-resentation that is sensitive to a set of symmetric transformations. To achieve this property, CrowdEGL isadditionally trained to predict symmetric transformations of input. As shown in , for crowd trajec-tories of 90crossings, we consider three more proxy tasks that predict 90/180/270rotations of the originalinput. Although CorwdEGL can be flexibly adapted to various latent GNNs, to provide sufficient globalenvironmental information, we employed a multi-channel GNN to incorporate original and all augmentedinput. Finally, to distinguish information learned from the original or augmented tasks, each task has anindependent graph decoder to forecast the crowd positions of the next state.",
  "Definition 3.1 (Cyclic Group) A cyclic group is a group that can be generated by repeatedly applying asingle element": "Note that the group is closure (the result of two elements within a group is still an element of the group). Forexample, the cyclic group of 90rotation consists of four elements - identity and 90/180/270rotations. Al-though different environments typically have distinct symmetry groups, they can be summarized as followingthree types:",
  "Multi-Channel Graph Encoder": ": Overview of CrowdEGL framework. Input states and target positions are firstly augmented viagroup transformations. Then a multi-channel graph encoder is employed to aggregate multi-channel featuresand perform message passing. Finally, CrowdEGL utilizes multiple independent graph decoders to forecastfuture positions. The prediction loss and equivariance losses are calculated for the model predictions oforiginal and augmented inputs, respectively.",
  "Rotation is used to augment crowd trajectories in environments with central symmetry, including 90and120crossings": "Reflection is used to construct augmented data for axisymmetric environments. A common example iscrowd dynamics in a narrow corridor or T-junction, where we employ a cyclic group of reflections overthe x- or y-axis. The intuition is a crowd trajectory from left to right would be similar to that of thesame crowd from right to left. Combination of rotation and reflection is used to generate augmented data for locations like a right-angled corner. In this case, we have to combine reflection and rotation to obtain the reversed trajectoryfrom the exit to the entrance.",
  "gGLg,(3)": "where Lp and Lg denote the prediction loss and equivariance loss of transformation g. |G| is the size ofgroup G. is a hyper-parameter to control the strength of equivariance loss, a larger leads to a morestrict equivariant model. Since our goal is to forecast the future positions of crowds, models are trained tominimize the discrepancy between the exact and approximated positions. Specifically, Let f(; e) be thebackbone GNN with parameters e and p(; p) be the decoder for the prediction loss. Then Lp is formulatedas:Lp = ||p(f(x(t), v(t); e); p) x(t+t)||2,(4) where x(t+t) is the groundtruth. Here we omit the static input u, e, a for simplicity. For equivariance loss,let Mg R22 be the representation (e.g., rotation or reflection matrix) of the group element g G, theequivariance loss Lg is computed by:",
  "Backbone GNN": "To design a backbone under the CrowdEGL framework, a common solution is to utilize a shared graphencoder and decoder (e.g., GNS (Sanchez-Gonzalez et al., 2020)) for all original and transformed input.However, the crowds may not be exactly symmetric due to the complex human interactions. Simply treatingthe augmented inputs as original inputs may lead to a suboptimal performance. Instead of using a hardparameter-sharing strategy, we design a flexible multi-channel pipeline to share partial parameters acrosstasks and learn equivariance from data. Therefore, if the augmented trajectories are exactly equivariant, theCrowdEGL can degrade to the hard parameter-sharing strategies, where the parameters of each channel arethe same. Specifically, we first construct a graph and initialize the multi-channel node embeddings based onthe defined group. Then multiple steps of message passing are performed to obtain latent graph embeddings.The final predictions are computed via independent graph decoders. We elaborate on the model designs asfollows. Graph construction.For personal safety and comfort, pedestrians adjust their trajectories in high-densitycrowds to avoid collisions with others or obstacles (Yu et al., 2023). Consequently, when they approach eachother, pedestrians often instinctively adjust their movement velocities and alter their directions. To modelthese interactions, we treat all pedestrians and obstacles as nodes and build a radius graph. That is, nodesare connected if the distance between them is smaller than a predefined radius r. Multi-channel node embedding.This subsection investigates how to attain desirable initialization fornode embeddings that involve 2D symmetry information. To integrate the global environment information,given the rotation matrix representations Mg of group element g G, The initial embedding of node i isderived by:hi,g = (xiMg, viMg, ui),(6) where hi,g represents the features under the transformation g, which includes both the original (i.e., identitytransformation) and augmented inputs. is a linear embedding layer. ui is the node type embedding,including the pedestrian and obstacle. xi, vi are position and velocity features, respectively. The velocitiesof obstacles are set to zero. Then the initial multi-channel node embeddings h(0)iare obtained by aggregatingall the above features:h(0)i= Agg({hi,g}gG).(7) It is worth noting that the aggregation function should not be permutation invariant (Zaheer et al., 2017),such as Mean or Sum.These functions result in a G-invariant GNN and latent embeddings.That is,their outputs remain invariant under input transformations of group G. Consequently, the model can notdistinguish the original from augmented inputs and would map all original and augmented inputs to thesame position, instead of a G-equivariant model. For CrowdEGL, we use the following aggregation:",
  "where a is an MLP. [hi,g]gG is the concatenated feature that follows a fixed order of group elements": "Message passing.In high-density crowds, the interactions among pedestrians, and that between pedes-trians and obstacles, are extremely dense and significantly influence their trajectories. Thus the quality ofapproximating these interactions determines the model performance. We adopt the message-passing frame-work, which has been proven effective in learning such dynamics. Our Message Passing Layer (MPL) takes",
  "Settings": "DatasetsMethods are evaluated on public pedestrian dynamic data1 that is built up by the Institute forAdvanced Simulation 7:Civil Safety Research of Forschungszentrum Jlich (Cao et al., 2017). The densityof these data is extremely high and their scenarios are specially designed for observing crowd dynamics.Dataset statistics are shown in . The target time interval is determined by the space size and crowdspeed.For all datasets, 70%, 10%, and 20% are randomly split over time for training, validation, andtesting, respectively. We use the following five environments: (1) Crossing: crowds start from all entrancesand go through a 90or 120crossing; (2) Corridor: a crowd goes through a corridor unidirectionally orbidirectionally; (3)Stadium Gate: a large number of pedestrians enter or leave the stadium through agate; (4) Corner: a large number of pedestrians move from one side of the corner to the other side; (5)T-Junction: two groups of pedestrians entered from both sides of the T-junction and exited from the middle.Note that our work focuses on modeling high-density crowd trajectories where the pedestrian space is severelyconstrained by others and obstacles. Thus, we do not test our model on traditional human trajectory datasetssuch as ETH/UCY (Pellegrini et al., 2009; Lerner et al., 2007) and GC (Zhou et al., 2012), where crowdsare sparse and more random.",
  "CrowdEGL0.530 0.024 0.638 0.044 0.056 0.001 0.121 0.008 0.119 0.010 0.161 0.009 0.073 0.001 0.063 0.001Abs. Improv.0.8911.1770.1110.2590.1950.2520.0340.050": "BaselinesWe compared CrowdEGL against various baselines including (1) basic MLP; (2) trajectoryforecasting models: S-LSTM (Alahi et al., 2016) and TransF (Giuliari et al., 2021); (3) fundamental GNNs:GNS (Sanchez-Gonzalez et al., 2020), and CrowdSim (Shi et al., 2023); (3) equivariant GNNs: EGNN (Sator-ras et al., 2021), GMN (Huang et al., 2022), and state-of-the-art SEGNO (Liu et al., 2024). Evaluation metricFollowing previous studies (Shi et al., 2023; Satorras et al., 2021), we use Mean SquareError (MSE) between model predictions and groundtruth to measure the single-step prediction performance.For multi-step predictions, Average Displacement Error (ADE) and Final Displacement Error (FDE) areutilized as metrics. They are the l2 distance of the predicted whole trajectory/endpoint to the ground truthof the whole trajectory/endpoint. Parameter settingsWe empirically find that the following hyperparameters generally work well, and usethem for all datasets: Adam optimizer with learning rate 0.0005, batch size 100, the hidden dimension 64,weight decay 11010, the message passing layer number 4 and the decoder layer number 2. All models aretrained for 5000 epochs with an early stopping strategy of 100. For CrowdEGL, the strength of equivarianceloss is turned from 0.1 to 1 with a step size of 0.1. All models are implemented based on Pytorch and PyGlibrary (Fey & Lenssen, 2019), trained on GeForce RTX 4090 GPU. The cyclic group used in CrowdEGLcan be found in .",
  "Overall performance displays the performance of CrowdEGL and all baselines. From them, wehave the following observations:": "GNNs significantly outperform non-GNN models (i.e., MLP, S-LSTM, TransF), indicating the importanceof modeling interactions in high-density crowd dynamics. Although EGNN, GMN, and SEGNO considerequivariance property as well, they underperform GNS and CrowdSim. These results show that strictEuclidean group equivariant models are too strong to model the crowd dynamics and even have a negativeeffect. For example, EGNN underperforms MLP in the Corner dataset. CrowdEGL consistently outperforms all baselines under all circumstances in a large gap. In particular,CrowdEGL achieves 1.177 and 0.891 lower MSE than the runner-up model CrowdSim. Such improvementverifies the effectiveness of learning a soft equivariance via data augmentation and a multi-channel GNNbackbone. Multi-step prediction performanceWe additionally evaluate model performance on multi-step pre-dictions as well. Following the previous work(Xu et al., 2023), the decoder is slightly modified to perform",
  "CrossingCorridor": ":Generalizationexperiments.90Crossing: models are trained on tra-jectories from the right and bottom en-trances and tested on those from the leftand top. Corridor: models are trained onleft-to-right trajectories and tested in thereversed direction. multistep predictions. We set the timestep t to 1 and aim to predict the future 10 steps. The results aredisplayed in . We can observe that CrowdEGL consistently outperforms baselines with the lowestADE and FDE, demonstrating its effectiveness. Visualization. To gain more insights into the superior performance of CrowdEGL, the density of predictedcrowd positions of CrowdSim and CrowdEGL are visualized in . We choose samples that have ahigh density. Particularly, the pedestrian numbers are 199 and 217 in the case of Crossing 90and 120.According to the visualization results, we can conclude that CrowdEGL accurately predicts the distributionof all directions, while CrowdSim only captures the patterns in partial directions. For example, the x-axis ofCrowdSim output is similar to the ground truth, but it has an obvious difference on the y-axis. Such resultsagain demonstrate the effectiveness of our equivariant training framework. Generalization abilityTo further investigate whether the proposed model learns the symmetry of crowddynamics, we conduct a generalization experiment on Corridor and 90Crossing environments. For Corridor,models are trained on left- to-right trajectories and tested in the reversed direction. Similarly, in 90Crossing,models are trained on trajectories from the right and bottom entrances and tested on those from the leftand top. The results are shown in where the results of MLP are omitted since they are too high.Under such a situation, the performance of all baselines decreases by a large margin. In contrast, the testerror of CrowdEGL is still at a relatively low level. Running timeTo compare the efficiency, we report the running time of all methods in the largest twodatasets (i.e., Crossing-120 and Corridor-Unidirectional) in . Results are run on GeForce RTX 4090GPU. From the table, we can find that CrowdEGL has a comparable efficiency with CrowdSim.",
  "Ablation Study": "Model designTo evaluate the benefits of our model designs, we compare CrowdEGL with five modelvariants: (1) Only data augmentation: simply treat augmented data as observed trajectories to train theGNN (without multi-channel and independent graph decoder); (2) Shared decoder: use the same decoderfor both prediction and equivariance tasks; (3) MLP decoder: replace graph decoders with MLPs; (4) w/oMulti-channel: removes multi-channel inputs and only employ the original input features as initialize nodeembedding; (5) = 0: remove equivariance loss by setting the hyperparameter to zero. showsthe results of all models. We have the following findings: The straightforward solution, only employing data augmentation, underperforms all model variants, indi-cating it is insufficient to model the challenging crowd dynamics. Utilizing a shared decoder in CrowdEGLleads to a significant drop in performance, mainly because the models fail to distinguish the observed oraugmented data, reducing the quality of learned latent graph embeddings. MLP decoders underperform graph decoders. These observations suggest that modeling interactions areessential in not only the encoding but also decoding processes, especially in the high-density case whereinteractions are frequent and dense. Removing multi-channel information results in a local model andenhances model errors, demonstrating that explicitly integrating the symmetric features in the encodercan learn a better latent representation. Incorporating EGL largely improves the model performance in various environments by encoding equiv-ariance in latent representations. Specifically, EGL achieves 12.60%, 13.44%, and 12.31% relative im-provement on Crossing, Stadium Gate, and T-Junction datasets, respectively. Such results demonstrateits effectiveness. Performance w.r.t. crowd densityTo investigate the model performance on crowd density, we dividethe testing sample into 4 equal intervals according to the number of pedestrians. The results are shown in. From the results, we can observe that the MSE decreases as the density increases, validating ourmotivation. Model performance w.r.t.It is crucial to control the degree of equivariance for real-world crowddynamics modeling.The sensitivity of on Crossing and Corridor datasets is illustrated in .According to the results, we can find that its values largely influence the model performance. A larger valuefirst leads to a lower error, and then enhances the error, indicating strict equivariance does not achieve betterperformance for real-world crowd dynamics.",
  ": Performance w.r.t. the multi-channel aggre-gation function": "Multi-channelaggregationfunctionsThechoice of multi-channel aggregation functions is thebasis for constructing an equivariant model. We re-place the non-linear transformation of multi-channelinputs in Eq.8 by Mean and Sum pooling and showtheir results on Crossing and Corridor in .The key finding is that these permutation invari-ant functions will significantly reduce model accu-racy since they make the model invariant to grouptransformation.Such invariance contradicts the equivariant nature of crowd dynamics, leading to poorperformance.",
  "Leq = ||f(g x) g f(x)||2.(12)": "A smaller error indicates the model is more equivariant. If the model is exactly equivariant, the equivarianceerror will be zero. We compute the average model equivariance errors of considered groups and display theresults in . From the figure, we can find that employing equivariant training generally achieves lowerequivariance errors. A larger generally leads to a lower equivariance error in Crossing-90 and Corridor-Unidirectional, while in Crossing-120 and Corridor-Bidirectional, the lowest equivariance errors are achievedat around 0.4.",
  "Modeling crowd dynamics": "Traditional methods simulate pedestrian behaviors, especially collision avoidance, based on expert knowl-edge. Typical methods include rule-based (Reynolds, 1987), force-based (Helbing & Molnar, 1995; Saboia& Goldenstein, 2012), and velocity-based models (Fiorini & Shiller, 1998). Nevertheless, the designed for-mulas are insufficient to model complex and uncertain real-world dynamics. With the development of deeplearning, recent studies (Shi et al., 2023; Yu et al., 2023; Zhang et al., 2022) seek neural solutions to improve",
  "Graph Neural Netwoks": "Equivariant graph neural networksRecently, to model the dynamics of particle systems (Huang et al.,2022), researchers have proposed equivariant GNNs that meet specific symmetry constraints.They de-sign provably equivariant message passing layers, which could be broadly classified into two types (Hanet al., 2022a). First, leverage irreducible representation to denote higher-order geometric features, such asTFN (Thomas et al., 2018; Fuchs et al., 2020) and SEGNN (Brandstetter et al., 2022). Second, construct aninvariant scalarization message embedding like the inner product (Satorras et al., 2021; Huang et al., 2022;Zheng et al., 2024). However, they can not be directly extended to pedestrian dynamics. Because of humanpsychology and physiology, crowd trajectories might not be exactly the same after transformation. Further-more, due to the boundary conditions, not all rotation/reflection/translation are valid in environments. Inthis work, we propose to encourage the equivariance of backbone GNNs via self-supervised training, whichcan flexibly control the degree of equivariance during the learning procedure. In contrast to the above works,we study equivariant GNNs of a finite group. Graph network-based simulatorsDue to the simplicity and effectiveness of graph networks, plenty ofstudies (Sanchez-Gonzalez et al., 2020; Shi et al., 2023; Li et al., 2019; Allen et al., 2022; Pfaff et al., 2021)have adopted them to simulate complex physical dynamics, including fluids, meshes, and rigid objects (Liet al., 2019).They follow an encoder-processor-decoder framework.The core idea is to use a particlerepresentation of objects, then dynamically construct interaction graphs among them and perform multiplesteps of information propagation to model their interactive forces. Despite their promising empirical results,these works have not adequately considered the symmetry of real-world crowd dynamics. As a result, theyfail to achieve satisfactory generalization ability to forecast crowd trajectories.",
  "Conclusion and Future Work": "In this work, we propose a novel CrowdEGL for modeling the trajectories of high-density crowds in variousenvironments.It learns a soft equivariant model via data augmentation and an additional equivarianceloss. We further design an advanced backbone to incorporate multi-channel inputs and employ independentgraph decoders to distinguish original and augmented tasks.Extensive experiments conducted on high-density crowd trajectories in various environments demonstrate that CrowdEGL outperforms all competingmethods. Ablation studies have further substantiated the effectiveness of our model designs. For futurework, For future work, we will enhance CrowdEGL by designing multi-channel embedding without specificinput orders and generalize it to multi-environment scenarios instead of learning on a single environment."
}