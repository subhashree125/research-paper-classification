{
  "This paper introduces a novel ML-based method for Inertial Motion Tracking (IMT) thatfundamentally changes the way this technology is used. The proposed method, named RING1": "(Recurrent Inertial Graph-Based Estimator), provides a pluripotent, problem-unspecificplug-and-play IMT solution that, in contrast to conventional IMT solutions, eliminates theneed for expert knowledge to identify, select, and parameterize the appropriate method.RINGs pluripotency is enabled by a novel online-capable neural network architecturethat uses a decentralized network of message-passing, parameter-sharing recurrent neuralnetworks, which map local IMU measurements and nearest-neighbour messages to localorientations. This architecture enables RING to address a broad range of IMT problemsthat vary greatly in aspects such as the number of attached sensors, or the number ofsegments in the kinematic chain, and even generalize to previously unsolved IMT problems,including the challenging combination of magnetometer-free and sparse sensing with unknownsensor-to-segment parameters. Remarkably, RING is trained solely on simulated data, yetevaluated on experimental data, which indicates its exceptional ability to zero-shot generalizefrom simulation to experiment, while outperforming several state-of-the-art problem-specificsolutions.For example, RING can, for the first time, accurately track a four-segmentkinematic chain (which requires estimating four orientations) using only two magnetometer-free inertial measurement units. This research not only makes IMT more powerful and lessrestrictive in established domains ranging from biomechanics to autonomous systems, butalso opens its application to new users and fields previously untapped by motion trackingtechnology. Code and data is available here.",
  "Introduction": "In the domain of multi-agent systems, structural policies have shown great potential for the control of complexagents; meanwhile, Recurrent Neural Networks (RNNs) are an established choice for sequential data. Thepotential of their combination for the analysis of structural sequential data has rarely been investigated andexploited. This combination seems particularly promising for state estimation in graph-structured systems,such as, for example, for IMT of Kinematic Chains (KCs). The need for reliable and accurate estimation of the orientation, attitude, or pose of articulated objects inthree-dimensional (3D) space spans across various application domains ranging from aerospace engineering(Euston et al., 2008; Givens & Coopmans, 2019) to health applications (Buke et al., 2015; Lpez-Nava &Muoz-Melndez, 2016; Seel et al., 2020). Inertial Measurement Units (IMUs), which typically comprise a 3Daccelerometer, a 3D gyroscope, and a 3D magnetometer, have become smaller and less expensive within thelast two decades and have therefore rapidly become the most promising technology for accurate, reliable, andinexpensive motion tracking in rigid bodies and KCs, especially since camera-based systems are typicallymore expensive, more restrictive, and suffer from occlusion (von Marcard et al., 2017; Huang et al., 2018). However, fusing the available measurement signals to estimate the desired orientations requires advancedIMT algorithms that typically need to overcome a combination or all of the following three main IMTchallenges (Seel et al., 2020): (1) inhomogeneous magnetic fields in indoor environments and in proximity offerromagnetic material or electric devices; (2) sensor-to-segment calibration, i.e. identifying the joint positionand axis orientations in local sensor coordinates; (3) solving sparse problems in which some segments of theKC are not equipped with a sensor, to improve the usability and reduce costs. In recent years, numerous highly specialized methods have been proposed to address these challenges.Magnetometer-free methods have been developed to estimate the relative orientation between two adjacentsegments by exploiting different kinematic constraints (Kok et al., 2014; Laidig et al., 2017; Lehmann et al.,2020; 2024). Moreover, numerous general-purpose magnetometer-free attitude estimators have been proposed(Mahony et al., 2008; Madgwick, 2010; Seel & Ruppin, 2017; Weber et al., 2021; Laidig & Seel, 2023). Severalalgorithms were developed to achieve sensor-to-segment calibration for specific kinematics with full sensorsetups (Taetz et al., 2016; McGrath et al., 2018; Olsson et al., 2020). Finally, a variety of sparse IMT methodshave been developed that either use a limited number of sensors while still depending on magnetometers (vonMarcard et al., 2017; Huang et al., 2018; Sy et al., 2020; 2021; Zheng et al., 2021) or are magnetometer-free(Grapentin et al., 2020; Yi et al., 2021; 2022; Bachhuber et al., 2023; Van Wouwe et al., 2023). In summary, there exists a plethora of methods, each tailored to a very specific application, such asmagnetometer-free tracking of a single-degree-of-freedom (1-DoF) joint (Lehmann et al., 2020), or human",
  "Published in Transactions on Machine Learning Research (10/2024)": "Luke Wicent F. Sy, Nigel H. Lovell, and Stephen J. Redmond. Estimating Lower Limb Kinematics Usinga Lie Group Constrained Extended Kalman Filter with a Reduced Wearable IMU Count and DistanceMeasurements. Sensors (Basel, Switzerland), 20(23):6829, November 2020. ISSN 1424-8220. doi: 10.3390/s20236829. Agnieszka Szczsna, Przemysaw Skurowski, Przemyslaw Pruszowski, Damian Pszor, Marcin Paszkuta, andKonrad Wojciechowski. Reference Data Set for Accuracy Evaluation of Orientation Estimation Algorithmsfor Inertial Motion Capture Systems. volume 9972, pp. 509520, September 2016. ISBN 978-3-319-46417-6.doi: 10.1007/978-3-319-46418-3_45.",
  "Related Works": "As mentioned above, there exists a plethora of highly specialized methods in the field of IMT, but there is nosingle pluripotent solution that solves a variety of IMTPs. Even the use of ML methods for IMT has so faronly led to specific solutions for single IMTPs. RNNs have been used in Weber et al. (2021) to achieve SOTAattitude estimation, and in Bachhuber et al. (2023) to successfully track a specific sparse KC. Deep learninghas also been used for human motion capture, where the full-body pose is estimated from typically six ormore IMUs, and previous work has shown promising results (von Marcard et al., 2017; Huang et al., 2018;Zheng et al., 2021; Yi et al., 2021; 2022; Van Wouwe et al., 2023; Puchert & Ropinski, 2023). However, whileaddressing a challenging problem, these methods are limited to human motion capture with one specific sensorsetup and assume statistical patterns of human motion (von Marcard et al., 2017), or full-body biomechanicalmodels (Yi et al., 2022) to constrain the estimated pose. From a methodological viewpoint, RING uses a decentralized network of message-passing RNNs with sharedparameters that are trained via supervised learning. The concept of decentralized networks, communication,and collaboration is at the heart of multi-agent systems, and the means of communication can either beprescribed (Panait & Luke, 2005; Wang et al., 2019) or, more recently, learned (Sukhbaatar et al., 2016;Foerster et al., 2016; Wang et al., 2018; Pathak et al., 2019; Huang et al., 2020). In deep ReinforcementLearning (RL), feedforward networks have been used to parameterize structured policies that pass messagesalong the edges of a graph in Sukhbaatar et al. (2016); Foerster et al. (2016); Wang et al. (2018); Huanget al. (2020), and distinct advantages of message-passing have been shown. In particular, in Huang et al.(2020) it was investigated whether centralised control can emerge from decentralized policies, and they showthat it is possible to learn a global policy that achieves locomotion across various agent morphologies. It isinteresting to note that policies must collaborate in order to achieve a global task, e.g., locomotion, and aremotivated by a global reward. In the present work, the decentralized RNNs must collaborate by exchanginginformation in order to solve the task of motion tracking, and are motivated by a decentralized loss function.The advantages of communication and global coordination emerging in a decentralized structure were alsoinvestigated in Sukhbaatar et al. (2016); Foerster et al. (2016). In particular, the work of Sukhbaatar et al.(2016) uses supervised learning instead of RL for learning communication protocols.",
  "Notation": "We use a typical notation with scalars denoted by x, vectors by x, matrices (or higher dimensional tensors)by X, and quaternions (or higher dimensional arrays of quaternions) by q. Additionally, note that the symbol1 defines either the unity element of a given space, or the indicator function, such that, e.g., 10(i) is one fori = 0 and zero else. The symbol is used to denote the direct product of vector spaces, and additionallydenotes quaternion multiplication, see Definition B.2. Further details can be found in Appendix A.1.",
  "An Inertial Motion Tracking Problem": "We define an IMTP as the task of estimating the trajectory of the complete rotational state of an ArticulatedRigid-Body System (ARBS) from inertial data. Conceptually, an ARBS is a collection of multiple rigid (orassumed to be rigid) bodies that are interconnected via joints that allow for relative motion between thesebodies. Let there be a singleton, inertial reference coordinate system named base (sometimes world, or Earth),then an orientation of a body relative to the base is referred to as an absolute orientation. An orientationof a body relative to the coordinate system of another body is referred to as a relative orientation. Then,assuming that no additional information about the types of joints is provided, to fully describe the rotationalstate of an ARBS that consists of N bodies at a single moment in time, N orientations must be specified. Inthis work, we will utilize N 1 relative orientations and one absolute orientation. An IMTP is solved by estimating the rotational state from at most N IMUs that are connected to the bodiesof the ARBS (at most one IMU per body), and that provide 3D measurements of angular rates, specificforces, and the magnetic field density in their local sensor coordinates. A magnetometer-free method solvesan IMTP without the use of the magnetometer, and such IMUs are referred to as 6D IMUs. In this case,the rotational state of the ARBS can only be estimated up to an absolute heading error, that is, up to anarbitrary rotation around the gravity (or vertical) direction, and the one absolute orientation is referred to asthe absolute attitude. This is because both accelerometer and gyroscope measurements are invariant under arotation around the vertical direction. Finally, note that if at least one body of the ARBS does not have anIMU attached, then the IMTP is said to be sparse.",
  "Graph Connectivity": "The topology of an ARBS is represented by a Connectivity Graph (CG) (Featherstone, 2008; 2010), which isan undirected graph where the nodes represent the bodies that constitute the ARBS and the edges representits joints. Before the CG can be encoded, the bodies must be numbered. We adopt the broadly adopted standardnumbering scheme and notation from Featherstone (2008; 2010) which for an ARBS with N bodies proceedsas follows:",
  ". The remaining bodies are consecutively numbered from 1 to N, so that each body has a highernumber than its parent": "The CG may then be encoded via a parent array NN where [i] is the body number of the parent ofbody i. Additionally, we define the function (i) to return the set of the body numbers of the children ofbody i, that is(i) = {j | [j] = ij = 1 . . . N} .(1) Definition 3.1. The body i of an ARBS with parent array is said to be an outer body if it has no childrenbodies, i.e., (i) = {}, or if its parent is the base, i.e., [i] = 0; otherwise it is said to be an inner body. As an example, consider an ARBS that is a three-segment KC (see ). There, the three bodies arenumbered increasingly from top-to-bottom, and then, for this numbering, the parent is given by = (0, 1, 2).",
  "Minimal and Maximal Coordinates": "We refer to the generalized coordinates position vector as the minimal coordinates, denoted by q. It fullycaptures the kinematic state of the ARBS using a minimal amount of coordinates. The size of q dependson the DoFs of the joints in the ARBS. In this work, we will consider ARBSs that can move freely in space(without any constraints). Therefore, in the corresponding CG, the edges that connect to the base are 6-DoFfree joints and all the remaining edges represent single DoF. Definition 3.2. For an ARBS with N bodies with a CG given by where the joints that connect to thebase are 6-DoF and 1-DoF otherwise, the size of q is given by Nq = Ni 710([i]) + (1 10([i])). Similarly,the size of the velocity of minimal coordinates q is given by N q = Ni 610([i]) + (1 10([i])). For an ARBS with N bodies, we refer to the set of all euclidean positions and rotational states from the baseto all bodies in the system as the maximal coordinates, denoted by t H R3N. The size of t dependsonly on the number of bodies in the system.",
  "Representing Orientations": "We represent 3D orientations with quaternions q due to various advantages over equivalent representationsusing orthogonal matrices or Euler angles (Kuipers, 2002). In particular, we use 01q H to denote theabsolute orientation from the base to the body ones coordinate system. Similarly, we use 12q to denote therelative orientation from body one to body two. In Appendix B, we define various utilized quaternion-relatedoperations.",
  "Loss Function For Orientations": "In order to train and evaluate ML methods that predict orientations (represented by quaternions), a suitablemetric function must be identified. We can compare the difference between a ground truth orientation q andthe corresponding predicted orientation q by computing the angle of the smallest rotation that makes groundtruth and prediction identical. It is given by angle(q q) where denotes quaternion multiplication, denotes the complex conjugate, and angle extracts the rotation angle of a quaternion (see Appendix B.5).Then, we use the following mean-squared-error function loss : q H, q H R0 to calculate a scalarerror between two quaternions, given by",
  "A virtually infinite, simulated training data set (see .2)": "A novel, online-capable neural network architecture, named RINGCell, purpose-built for stateestimation in ARBS (see .3). In contrast to typical RNNs that map a fixed number ofinput features to a fixed number of output features using a centralized logic, RINGCell leverages thegraph-structure of ARBS and employs a decentralized, message-passing logic with a shared set ofparameters. This design maps a fixed number of input features per body to a fixed number of outputfeatures per body, and it allows RINGCell to adapt to the size and topology of the ARBS withoutthe need for retraining.",
  "Problem Formulation: A Class of Inertial Motion Tracking Problems": "In this work, we consider the following class of IMTPs. We consider an N-segment KC where N {1, 2, 3, 4}with unknown physical geometry and with segments that are interconnected via hinge joints. The axesdirections of these hinge joints may be known or unknown. For each inner body at most one and for eachouter body exactly one 6D IMU, with unknown sensor-to-body position, is rigidly or nonrigidly attached toeach body. For each body and with the KC at rest, the constant sensor-to-body orientation is assumed to beknown. The initial pose of the ARBS is assumed to be unknown. Then, the task is to estimate, for everytimestep, the rotational state of the KC (consisting of N orientations) from the available IMU measurementsand the available joint axes directions. Note that the task requires providing accurate estimates at eachtimestep, thus necessitating an online-capable solution focused on online, real-time processing (filtering) asopposed to retrospective data processing (smoothing). To summarize, two IMTPs of this class of IMTPs candiffer in: 1) the number of bodies N in the KC, 2) the number of attached IMUs, 3) the number of knownjoint axes directions, and 4) whether IMUs are attached rigidly or nonrigidly. A broad range of IMTPs fromthis class of IMTPs are illustrated in within the grey ellipsoid.Definition 4.1. The parent arrays N of the N-segment KC where N {1, 2, 3, 4} are given by, withoutloss of generality, 1 = (0), 2 = (0, 1), 3 = (0, 1, 2), 4 = (0, 1, 2, 3), respectively.",
  "Training Data: The RCMG Algorithm": "The RING network is trained on data obtained from simulated random motion of one-, two-, three-, andfour-segment KCs. The procedure that generates this training data (from only PseudoRNG) is called theRandom Chain Motion Generator (RCMG) (Bachhuber et al., 2022). The RCMG procedure (see Algorithm 1)has three main steps that execute consecutively: 1. Randomized KC (see .2.1). A randomized KC is drawn to manipulate the downstreamsimulation and achieve various forms of domain randomization that enable to bridge the sim-to-realgap from simulation (training) to real-world (testing).",
  "Randomly Attached Bases": ": Each sequence of training data is simulated using the RCMG. In the first step of the RCMGa randomized KC is created which involves randomizing the node in the KC to which the base attaches.Afterwards, the nodes in the graph are numbered according to .3. For example here, for 4, the newnumbering array is n = (2, 1, 3, 4), and the new parent array = (0, 1, 1, 3).",
  "a joint axes array J RN3 that contains the hinge joint axis direction,": "a relative-to-parent position array R R2N3 that contains the position vector of the bodyscoordinate system relative to its parent (expressed in the parents coordinate system). In .2.1,it is outlined that for each of the N bodies there is a second IMU body. In the R array, the firstN values are used to specify the position vector between two non-IMU bodies (segment-to-segmentpositions, physical geometry of the KC), while the last N values are used to specify the position vectorfrom non-IMU body to the corresponding IMU body (segment-to-body positions, IMU attachment).This is done to independently randomize both the physical geometry and the IMU attachment,forcing the network to learn to generalize to scenarios such as an arm robot with unknown segmentlengths, as well as to calibrate for an unknown IMU attachment,",
  "In order to enrich the simulated training data, several forms of domain randomization are achieved by drawinga KC with randomized system attributes": "The first domain randomization is the randomization of all downstream forward kinematics applications, andadditionally, randomization of the absolute random translation and orientation in the generation of randommotion. This has been shown to improve the training data such that the trained network more effectivelycloses the sim-to-real gap (Bachhuber et al., 2023) This is achieved by re-attaching the bases randomly andafterwards, the nodes in the graph are re-numbered according to .3. An example of this is shownin . Secondly, the N randomized hinge joint axes J are drawn. Thirdly, the position array R israndomized by drawing values from uniform ranges. Finally, the stiffness K and damping arrays are randomized. These values are used to model nonrigidlyattached IMUs by connecting additional nodes that are connected via passive spring-damper free joints. Foreach node i in the CG, we add an additional IMU node with body number i + N that is a child of node iand that is connected to node i via a passive spring-damper free joint. The stiffness K[i] and damping [i]",
  "Frozen Spring-Damper": ": For each node i in the KCs, there exists a second IMU node (that is not counted in the bodycount N of the system; here in green) with body number i + N. The IMU node is connected via a passivespring-damper free joint to the original node in order to simulate nonrigidly-attached IMUs. There is a 25%chance that the damping and stiffness parameters of the passive free joint are chosen such that the IMU iseffectively rigidly attached and the passive free joint is frozen. parameters are used during the forward simulation of the KC as the parameters of the 3D spring-damperdynamics between node i and (IMU) node i + N. For each node i, the stiffness K[i] and damping [i]parameters are randomized in a way such that, either the IMU is effectively rigidly attached, or such that theIMU moves relative to the segment node i (which then models nonrigid attachment).",
  "Step 2) Random Motion Generation": "As a second step, the RCMG procedure generates random motion of the previously obtained randomized KC.Random motion is obtained by drawing a random reference trajectory for all joints in the KC. The generationof such randomized reference trajectories is influenced and constrained by various parameters, e.g., upperlimits on angular velocities or lower limits on the amount of motion (to avoid jittering). Additional detailson the reference trajectory generation can be found in Appendix C.1. Afterwards, a dynamical forwardsimulation is performed where joint forces are computed using PD control such that the random reference istracked. Note that the additionally added nodes to model nonrigid IMU attachment are passive free jointsand as such they are not actuated. Finally, the trajectories of maximal coordinates of all N bodies and NIMU bodies, given by T H R32NT (from base to body), are computed.",
  "Y HT N where Y[:, i] is the timeseries of: 1) absolute attitudes i0q(t) if the parent [i] is the base;2) relative orientations ipq(t) from body i to its parent p = [i], and": "where T is the number of timesteps (here, 60 s at 100 Hz, thus T = 6000), and N is the number of bodiesin the KC. IMU and joint axes data is dropped out in order to force RING to learn to solve IMTPs withsparse IMU placement (an inner body may not have an IMU attached to it), and learn to solve IMTPs withrequire sensor-to-segment calibration. Finally, multiple sequences are stacked to build a training batch. Theseinput and output arrays (X and Y) directly align with the provided software implementation of RING, seeAppendix 4.5.",
  "StackedGRUCell": ": The architecture of the plug-and-play IMT solution RING. It consists of the RNN cell RINGCelland a final MLP head that returns one quaternion per node in the graph. RING is trained to estimatechild-to-parent orientations from the available local IMU and joint axis data and nearest neighbour messages.To this end, RINGCell applies a shared set of parameters on a decentralized, per-node level and passesmessages along the edges of the graph to allow for information exchange. Note that while the parameters areshared, the hidden states are not shared across nodes. This architecture allows RING to apply a single set ofparameters across a broad range of IMTPs, which may vary in aspects such as the number of segments, andit ultimately enables RINGs remarkable pluripotency.",
  "The Architecture of RING": "RING is based on a decentralized network of message-passing RNNs which allows for information exchangealong the edges of a graph (as given by the CG). RING can be applied to an arbitrary CG (see .3)and it maps per-node-input to per-node-output. Most importantly, the parameters of RING are shared acrossthe nodes of the graph such that the number of parameters of RING does not depend on the given CG. Thehidden state, however, is not shared across the nodes. This allows for the training of a single RING networkwhich then solves a variety of IMTPs (see .1). The introduction of RING stems from the requirement of acquiring a single pretrained network that cansolve different IMTPs with a varying number of inputs and outputs, e.g., estimate two orientations for atwo-segment KC, and three orientations for a three-segment KC. This is possible because on a node (orsegment) level, we can guarantee static input (at most one IMU, at most a known joint axis direction) andoutput shapes (one orientation relative to parent). But the per-node-output cannot be estimated from onlythe per-node-input as the orientation relative to the parent depends on the orientation state of the parent, andorientation w.r.t. the base cannot be estimated from 6D IMU data, additionally, the segment may not havean IMU attached. Thus, we have to allow information exchange between nodes and propose a scheme whichagain gives rise to local static input and output shapes of messages. Finally, we claim that the estimation ofthe entire pose in a hierarchical approach is inherently natural and provides an advantageous structural priorto subsequent parameter learning which we explore in .4. RING consists of a novel RNN cell, named RINGCell, and a final Multi-Layer Perceptron (MLP) head suchthat the networks per-node-output is a single unit quaternion (per timestep). Note that the network head isindependent of the RINGCell and may easily be replaced to suit different needs. Let be a CG with N N nodes, let F N be the number of input features per node, let H N be thehalf-hidden state dimensionality, and let M N be the dimensionality of the latent messages passed insidethe cell based on the edges in the CG. Then, let t-1 RN2H be the hidden state of the RINGCell fromthe previous timestep t 1, and let Xt RNF be the F inputs for all N nodes at time t. Then, the nexthidden state t is obtained byt = ringCell (t-1, Xt, )t(3)",
  "Yt[i] =Y[i]4j=1 Y[i, j]2(8)": "Note that the normalizing operation, due to its square-root operation, requires special care to allow forsuccessful backpropagation. Also note that the employed loss function, see .6, is based on a arctanexpression, which does not require any special care, in contrast to seemingly equivalent expressions to extractthe angle from a quaternion that are based on arccos.",
  "Y = ring (X, )(9)": "where the parameters of RING are given by the set {f, g, h}. The hyperparameters of RING are H Nand M N. Note that the set of parameters of RING is influenced by the hyperparameters of RING and thenumber of input features per node F, but not by the GC or the number of bodies. For example, a singleRING network can be used for predicting the orientations of both two-segment or three-segment KCs eventhough the number of bodies and, consequently, the dimensionality of input and output arrays is different,e.g., X RT 2F compared to X RT 3F .",
  "RING: A Single IMT Solution to a variety of IMTPs": "In this section, we use the simulated training data from .2 to train a network based on the RINGCellarchitecture (see .3). The trained network is then called RING and, with a single set of parameters,RING shows its pluripotency in a range of experimental scenarios, from simple single-joint tracking to complexfour-segment KCs, without reliance on magnetometers as will be shown in . For each of the four KCs N (see Definition 4.1), we use the RCMG (see Algorithm 1) to simulate 512input-output pairs and stack them to create a single batch of training data. This batch of training data isused to update the parameters of the RING network (see .3), with H = 400 and M = 200 (totalparameter count: 2 337 404) by minimizing the mean-squared-(orientation-estimation)-error, i.e.,",
  "rigidly/nonrigidly attached IMUs": ": Experimental five-segment KC with ten IMUs (orange boxes) and 20 OMC markers (grey spheres).It uses a single spherical joint followed by three hinge joints, each oriented along the x, y, and z axes,respectively. Each segment of the KC was equipped with two IMUs: one firmly attached to the segment andanother affixed nonrigidly using foam padding. The experimental KC is moved in space, and the inertial andoptical data is recorded to validate RING and compare it to SOTA methods across a broad range of IMTPs. We use the LAMB optimizer (You et al., 2020) combined with global (threshold = 0.1) and adaptive (threshold= 0.2) gradient clipping, a cosine decaying learning rate (initial learning rate = 1 103, and TruncatedBackpropagation Through Time (TBTT). Borrowing the notation from Williams & Peng (1990), we utilizeTBTT(10 s, 10 s), i.e., the gradients are stopped and applied after 10 s instead of the total length of 60 s.This results in every batch generation (or episode) corresponding to six parameter updates. We train for5000 episodes using a single node with eight A40 GPUs (each 48 gigabytes of VRAM). Due to the largeamounts of training data, overfitting is seemingly impossible and any form of early stopping did not prove tobe required. This has been also confirmed with a separate validation dataset. Training has been stoppedafter 5000 episodes as the loss has no longer improved. For practical applications, the inference time and computational requirements of RING are more importantthan its training requirements. To this end, a theoretical and empirical analysis of the time complexity ofRING is conducted in Appendix D, and the findings are summarized here. The theoretical time complexity toadvance the prediction of RING by one timestep is O (N H (H + M + F)). This translates in practiceto an efficient NN that enables real-world online application even on low-end hardware. For example, ona single-core Intel Xeon at 2 GHz, RING can comfortably enable motion tracking of a four-segment KC atmore than 500 Hz, which is well above typical IMU sampling rates that range from 90 to 286 Hz (Laidig et al.,2021).",
  "Openly-available Code and Data": "The code and experimental validation data is hosted at and the repository contains implementations of the RCMG, RINGCell, and RINGas decoupled components. Additionally, it includes the code of SOTA methods and validation data to createthe experimental validation results (AMAEs and RMAEs) of RING and the SOTA methods that are discussedin . Finally, we also provide files to retrain RING from scratch, without requiring any real-worldtraining data files. The software, most notably, uses the JAX and Haiku frameworks (Bradbury et al., 2018;Hennigan et al., 2020). The ease-of-use of RING is demonstrated through a code example in the Appendix E.",
  "Experimental Validation of RING": "In this section, we evaluate the accuracy of RING with one common set of pretrained parameters (see.4) across a broad range of experimental IMTPs (see .1).In general, RING showsremarkable pluripotency in zero-shot generalization to real-world experiments across diverse IMTPs. Thisunderscores its broad applicability. In .1, we describe the experimental setup used to evaluate RING on real-world data. We showthat RING successfully solves multiple previously solved challenging IMTPs and competes with the currentSOTA methods (.2). Impressively, RING further achieves accurate tracking in even more challengingIMTPs, including two IMTPs that have not been solved before (.3).",
  "Experimental Setup and Evaluation Metric": "Experimental evaluation is conducted on a five-segment KC which is shown in . The KC is constructedby a concatenation of a single spherical joint followed by three hinge joints, each oriented along the x, y, andz axes, respectively. Each segment of the KC was equipped with two IMUs (MTw Awinda, Xsens, Enschede,the Netherlands): one firmly attached to the segment and another affixed nonrigidly using foam padding.This foam-attachment of IMU was conducted to investigate the reduction of motion artifacts. The left panelin shows a close-up of one segment of the KC with one exemplary nonrigidly attached IMU. Eachsegment is equipped with at least three noncollinearly placed reflective markers that are used to obtainground truth orientations from a twelve camera Optical Motion Capture (OMC) system (OptiTrack Primex22, NaturalPoint Inc., Corvalis, USA). Two distinct trials were conducted, involving random movements of the five-segment KC, by introducingmanual alterations of the KC pose by two experienced scientists. The first trial, spanning a duration of 66 s,featured a diverse range of motions, extending from very slow to notably rapid movements. Moreover, thesecond trial, with a length of 68 s, not only encompassed a variety of motions but also incorporated randomintervals of complete stillness, wherein the KC remained motionless. All trials were preprocessed in the following way: NaN values were removed, an offline time-synchronizationwas employed via cross-correlation between measured (IMUs) and approximated angular velocities (OMC),and all collected data was resampled to a uniform sampling rate of 100 Hz. Additionally, we correct forany small misalignment between the rigidly attached IMUs local coordinate systems and the correspondingsegments body coordinate systems as spanned by the OMC markers. Simultaneously, we align the OMCsreference coordinate system with the earth reference coordinate system (the base), as observed by the IMUs.For more comprehensive details regarding these preprocessing steps and the software implementations utilized,readers are referred to the study Laidig et al. (2021). The rich experimental data obtained from the five-segment KC enables us to perform evaluations on subsets ofdata and the KC, which represent a variety of different IMTPs. For example, for validation of a one-segmentKC, we use the recorded data of all five segments of the five-segment KC independently for evaluation,which effectively increases the amount of validation data by a factor of five. Similarly, for validation of atwo-segment KC with a hinge joint, we use three different sub-KCs with a joint axis direction along the x,y, and z axes (the two-segment sub-KC of segment one and segment two is excluded due to its sphericaljoint). Similarly, for a three-segment KC with double hinge joints, we use two different sub-KCs, and for afour-segment KC with triple hinge joint we use the sub-KC of segment two to five. Assessing KC pose estimation performance of RING in comparison with existing SOTA and thus solvingthe IMTP under consideration, requires the usage of a suitable evaluation metric. As already discussed in.6, the expression angle(q q) can be used to compare the difference between a ground truthorientation q and the corresponding predicted orientation q. Thus, in order to compare the timeseries ofground truth Y HT N and predicted pose Y HT N of an N-segment KC with GC N, we computethe Attitude-Mean-Absolute-(orientation)-Error (AMAE) and Relative-Mean-Absolute-(orientation)-Error(RMAE) which are given by",
  "angleY[t, i] Y[t, i](12)": "where |.| denotes the absolute value and zeroHead removes the heading component (see Definition B.7). Notethat initial 5 s (equaling to an index of 500 at 100 Hertz) of each timeseries were deliberately excluded fromthe AMAE and RMAE calculations. This decision was made to ensure that the recorded errors accuratelyreflected the methods performance after convergence.",
  "Attitude Estimation": "Attitude estimation in real-world environments using inertial sensors is a vital prerequisite for a wide rangeof applications, including tracking human movement and enabling autonomy in air and land vehicles. Theattitude estimation problem is defined as estimating the orientation of an object with respect to the horizontalplane with a single sensor (Weber et al., 2021). The widely employed and long-standing methods from Madgwick (2010); Mahony et al. (2008); Seel &Ruppin (2017) have recently been outperformed with SOTA approaches by Weber et al. (2021); Laidig & Seel(2023). shows that RING aligns with SOTA performance in attitude estimation, as indicated by theexperimental AMAEs. More specifically, the AMAE of the attitude for Madgwick (2010) is (2.25 0.81), forLaidig & Seel (2023) is (1.61 1.04), for Weber et al. (2021) is (2.06 1.03), for Mahony et al. (2008) is(2.09 0.87), for Seel & Ruppin (2017) is (2.56 0.93), and for RING is (2.13 0.91).",
  "Here, we consider the IMTP of tracking the relative motion between two segments from two 6D IMUs,assuming a single hinge joint with a known axis direction connects both segments": "Overcoming the use of magnetometers is typically achieved by combining SOTA approaches for attitudeestimation and utilizing joint-specific constraints that exploit knowledge of the hinge joint axis direction(Laidig et al., 2017; Lehmann et al., 2020). Additionally, a magnetometer-reliant method uses 9D VQF (Laidig& Seel, 2023) for both IMUs independently and does not exploit any kinematic constraint between the twobody parts. The RMAEs are reported in , and they are: for the VQF-based baseline (19.36 8.02),for Lehmann et al. (2020) (4.15 2.05), for Laidig et al. (2017) (3.32 2.12), and for RING (3.52 1.00).This shows that RING aligns with the SOTA methods, which are already a non-trivial combination of twoseparate methods which, in contrast to applying RING, requires expert knowledge.",
  "Magnetometer-free Tracking of 1-DoF Joint with Unknown Joint Axis Direction": "The IMTP of .2.2 can be made more challenging by assuming that the hinge joint axis directionis not known. Then, it can first be estimated from the IMU data, and then subsequently a method thatassumes a known joint axis direction can be applied. A SOTA method for hinge joint axis direction estimation is given by Olsson et al. (2020). RING out-of-the-boxsupports an unknown hinge joint axis direction by its versatility to drop out the respective node input andreplacing it with zeros. The experimental RMAEs are given in ; combining Olsson et al. (2020) with Lehmann et al. (2020)results in (4.062.23), and with Laidig et al. (2017) results in (3.182.05), and RING achieves (3.921.40).This shows that RING aligns with SOTA performance, which comprises three distinct methods.",
  "Motion Artifact Reduction": "The efficacy of all SOTA IMT methods heavily rely on a rigid sensor-to-body attachment. In many practicalscenarios, such as human motion analysis, this assumption is rapidly violated, resulting in strongly degradedestimation accuracies, attributed to a model-reality mismatch. Here, we consider the IMTP of .2.2, however here, the IMUs are not rigidly attached to the twosegments, while the estimation target remains the relative orientation between the two segments (and notbetween the coordinate systems of the two IMUs), and the absolute attitude of one of the segments. Currently, there exist no method that does not make the assumption of rigid IMU attachment. Still, themethods from .2.1 can be applied to estimate the absolute attitude, and we use the most accurateestimator VQF (Laidig & Seel, 2023) for comparison purposes. The methods from .2.2 are applied toestimate the relative orientation. To compensate for the violation of the rigid-IMU-attachment assumption,we additionally apply an intuitive low-pass filter (LPF) step to the estimated absolute attitude and relativeorientation for each baseline method to suppress unwanted high frequency artifacts. The cutoff frequencywas grid searched and we report only the best result for each baseline. Alternatively, the use of the LPF onthe estimated orientations prior to computing the relative orientation did not yield better performance. In , column 5.3.1A reports the experimental AMAE in the attitude estimate, and demonstratesRINGs superior performance of (7.59 2.85) over the combination of VQF+LPF with an AMAE of(9.19 2.31). Similarly, column 5.3.1B reports experimental RMAEs, they are: Lehmann et al. (2020)achieves (8.00 2.78), Laidig et al. (2017) achieves (7.00 1.57), and RING achieves (5.56 2.33). Thisshows that RING outperforms the SOTA methods. Note that the reduced AMAE shows that RING haslearned to fuse the information of the second segments IMU into the attitude estimation of the first segment.",
  "The IMTP considered in .2.4 can be made even more challenging by not assuming known joint axesdirections": "To the best of the authors knowledge, there currently exists no method that is applicable in such a challengingIMTP. RING can solve this IMTP with only a modest increase in error (), given the increasedcomplexity of the task. Note that the direction of the joint axis cannot be estimated using Olsson et al.(2020) such that the method from .2.4 may be applied, as Olsson et al. (2020) does not allow for asparse sensor setup which inherently requires a pluripotent approach such as RING. We report a RMAEvalue of (5.37 0.71) for RING in this challenging IMTP.",
  "Four-Segment Sparse IMT: 3-DoFs between IMUs": "Increasing sensor sparsity will naturally make an IMTP problem more complex. A KC configuration withfour segments and only two 6D IMUs results in three DoFs (three consecutive hinge joints) between thetwo outer-segment 6D IMUs and it represents the limit of accurate sparse IMT. Despite the complexity, theestimation target remains to capture all three relative orientations. To the best of the authors knowledge, there currently is no method that is applicable in such a challengingIMTP. RING can solve this problem formulation sufficiently well. When assuming known joint axes directionsfor the three hinge joints, RING achieves a RMAE of (6.78 1.41). An exemplary trial is shown in .",
  "RING2.13 0.913.52 1.003.92 1.404.14 0.537.59 2.855.56 2.335.37 0.716.78 1.41": "Methods: Weber et al. (2021)(1), Madgwick (2010)(2), Mahony et al. (2008)(3), Seel & Ruppin (2017)(4), Laidig & Seel (2023)(5), Laidig et al. (2017)(6),Lehmann et al. (2020)(7),Olsson et al. (2020)(8), Bachhuber et al. (2023)(9) (i) refers to the AMAE or RMAE of being expected to be larger or equal than for method (i) or indicate that the AMAE or RMAE is equal to the AMAE or RMAE of the cell above or to the cell to the right",
  "t=40st=50s": ": Exemplary frames that showcase RINGs performance for the IMTP that involves a four-segmentKC with sparse IMU attachments and known joint axes directions (see .3.3). It is a remarkable firstthat RING can accurately estimate the four orientations (one absolute and three relative orientations) fromonly two magnetometer-free IMUs. A video of the trial is available here.",
  "The Decentralized Approach of RING Provides an Advantageous Structural Prior": "In this section, we showcase a second advantage of the decentralized approach of RING over a centralizedapproach that is typically employed, e.g., by stacking multiple LSTM- or GRU-Cells. First, recall that RINGis based on a decentralized network of message-passing RNNs which allows for the training of a single set ofparameters despite a varying number of bodies in the KC and, while the latter aspect is the core motivationbehind this architecture it is, interestingly, not the sole motivation behind the decentralized approach. Thesecond motivation is that the estimation of the entire pose in RINGs decentralized approach provides anadvantageous structural prior compared to an RNN that utilizes a centralized approach. For this purpose, wecompare RING to the RNN-based Observer (RNNO), a deep GRU network with intermediate Layernormlayers, as it was proposed in Bachhuber et al. (2023). RNNO maps all available input data to the entiretargeted pose data and does not utilize the specific graph structure of the IMTP. RNNO has been proposedas the solution of a specific IMTP (see .2.4) and, for this IMTP, both RING and RNNO achievesimilar performance. However, this is not the case if the IMTP becomes vastly more complex. Consider, e.g.,the IMTP of .3.3, which is arguably the most challenging IMTP under consideration in this work.We have trained RNNO on the subset of training data of RING that corresponds to this IMTP. Despite",
  "Szczsna et al. (2016) (1), Jdrasiak et al. (2013) (2), Webering et al. (2023) (3)": "varying several hyperparameters, the best reported RMAE of RNNO is (18.72 5.12). This is significantlyhigher compared to RINGs RMAE of (6.78 1.41), even though RING is maintaining its applicability to abroad range of IMTPs, and is not purpose-trained for a single IMTP. This showcases that the decentralizedapproach of RING provides an advantage even if only the solution of a single, specific IMTP is required.",
  "RINGs Robustness to Different IMUs": "IMUs in general, and especially across vendors, differ in properties like noise density and bias offset. RNN-based inertial sensor fusion has been demonstrated to generalize across different sensor hardware (Weberet al., 2021). Nonetheless, to ensure broad real-world applicability, we investigate RINGs robustness todifferent IMU hardware. First, we analyze how RINGs performance scales as noise and bias properties areincrementally increased. Then, we evaluate RING on openly-available, real-world datasets that use IMUsfrom different vendors. To simulate reasonable noise density and bias offset ranges, we constructed a worst-case IMU by combiningthe worst properties of various IMU manufacturers, as summarized in . Then, those worst-case noiseand bias values are incrementally (in seven equidistant steps) increased from 0 to 120%, and a correspondingamount of simulated noise and bias is added to our real-world IMU data (see .1), which yields sevenmodified datasets. RING and all SOTA methods are validated on the modified dataset, and this procedure isrepeated using ten different seeds. The AMAEs and RMAEs of all methods are plotted for all IMTPs as afunction of the seven steps in . The figure shows that, whilst the performance of all methods (asexpected) slightly worsens as noise and bias are increased, RING maintains accuracy comparable to SOTAmethods in all IMTPs and, especially in two-segment KC tracking, substantially outperforms them. The RepoIMU dataset (Szczsna et al., 2016) contains real-world IMU and ground truth data from passivemotions of a swinging pendulum. It uses non-commercial micro IMUs (Jdrasiak et al., 2013) with a focus onlow cost and small size over accuracy. The OpenAXES Robot Dataset contains data from motions of a robotarm drawing different shapes at different speeds. IMUs are attached to each segment, and the ground truthis known from the robots encoders. reports RINGs performance for both external datasets.",
  "Discussion": "We have shown that a single RNN, named RING, can accurately solve a broad range of IMTPs even iftwo IMTPs do not have same input-output dimensionality. This pluripotent behavior originates from adecentralized architecture that provides an advantageous structural prior compared to the more typicalcentralized approach which, in contrast to RING, has the additional limitation that it can only be utilizedif the solution of a single IMTP is sufficient. In summary, for the set of IMTPs under consideration (see.1), we have shown that RING can enable accurate IMT for one-, two-, and three-segment KCs aslong as the IMUs are rigidly attached. Most notably, this includes an IMTP that is sparse, magnetometer-free,and requires sensor-to-segment calibration. If IMUs are nonrigidly attached, then RING is shown to provideaccurate orientation estimates for a two-segment KC. RING can achieve accurate IMT for a four-segmentKC, provided that the IMUs are rigidly attached and sensor-to-segment calibration is not required. It is aremarkable first, that RING can track the pose of the four-segment KC (which requires in total four distinctorientations) using only two IMUs. Note that RING does not require problem specific priors, although their",
  "Conclusion": "In the presented work, we combined ideas from the domain of multi-agent systems with RNNs to proposean architecture based on a decentralized network of message-passing, parameter-sharing RNNs. We havesuccessfully exploited this combination for the analysis of structural sequential data and solved a challengingstate estimation problem, which is IMT of KCs, by letting the decentralized network map local IMUmeasurements and nearest-neighbour messages to local orientations. In particular, we introduced RING,a pluripotent IMT solution that, unlike all previous, problem-specific approaches, enables plug-and-playnon-expert use. RING outperforms a range of problem-specific SOTA solutions and even generalizes topreviously unsolved scenarios, including the challenging combination of magnetometer-free and sparse sensingwith unknown sensor-to-segment parameters. Remarkably, RING demonstrates the ability to zero-shotgeneralize to experimental scenarios, despite being trained solely on simulated data. For example, RING can,for the first time, accurately track a real-world four-segment kinematic chain (which requires estimating fourorientations) using only two magnetometer-free IMUs. RINGs pluripotency greatly simplifies the application of IMT by eliminating the need for expert knowledgeto identify, select, and fine-tune problem-specific methods. This is expected to not only make IMT morepowerful and less restrictive in established domains but also to facilitate the accessibility of IMT technologyby non-expert users and broadens its applicability to previously untapped domains. Simon Bachhuber, Daniel Weber, Ive Weygers, and Thomas Seel.RNN-based Observability Analysisfor Magnetometer-Free Sparse Inertial Motion Tracking.In 2022 25th International Conference onInformation Fusion (FUSION), pp. 18, Linkping, Sweden, July 2022. IEEE. ISBN 978-1-73774-972-1.doi: 10.23919/FUSION49751.2022.9841375. URL Simon Bachhuber, Dustin Lehmann, Eva Dorschky, Anne D. Koelewijn, Thomas Seel, and Ive Weygers.Plug-and-Play Sparse Inertial Motion Tracking With Sim-to-Real Transfer. IEEE Sensors Letters, 7(10):14, October 2023. ISSN 2475-1472. doi: 10.1109/LSENS.2023.3307122. URL James Bradbury, Roy Frostig, Peter Hawkins, Matthew James Johnson, Chris Leary, Dougal Maclaurin, GeorgeNecula, Adam Paszke, Jake VanderPlas, Skye Wanderman-Milne, and Qiao Zhang. JAX: Composabletransformations of Python+NumPy programs, 2018. URL Ao Buke, Fang Gaoli, Wang Yongcai, Song Lei, and Yang Zhiqi.Healthcare algorithms by wearableinertial sensors: A survey.China Communications, 12(4):112, April 2015.ISSN 1673-5447.doi:10.1109/CC.2015.7114054. URL Kyunghyun Cho, Bart van Merrienboer, Caglar Gulcehre, Dzmitry Bahdanau, Fethi Bougares, HolgerSchwenk, and Yoshua Bengio. Learning Phrase Representations using RNN Encoder-Decoder for StatisticalMachine Translation, September 2014. URL Mark Euston, Paul Coote, Robert Mahony, Jonghyuk Kim, and T. Hamel. A Complementary Filter forAttitude Estimation of a Fixed-Wing UAV. In IEEE/RSJ International Conference on Intelligent Robotsand Systems, October 2008. doi: 10.1109/IROS.2008.4650766.",
  "Roy Featherstone. A Beginners Guide to 6-D Vectors (Part 2) [Tutorial]. IEEE Robotics & AutomationMagazine, 17(4):8899, December 2010. ISSN 1070-9932, 1558-223X. doi: 10.1109/MRA.2010.939560. URL": "Jakob Foerster, Ioannis Alexandros Assael, Nando de Freitas, and Shimon Whiteson. Learning to Communicatewith Deep Multi-Agent Reinforcement Learning. In Advances in Neural Information Processing Systems,volume 29. Curran Associates, Inc., 2016. URL Matthew W. Givens and Calvin Coopmans. A Survey of Inertial Sensor Fusion: Applications in sUASNavigation and Data Collection. In 2019 International Conference on Unmanned Aircraft Systems (ICUAS),pp. 10541060, June 2019. doi: 10.1109/ICUAS.2019.8798225. URL Aaron Grapentin, Dustin Lehmann, Ardjola Zhupa, and Thomas Seel. Sparse Magnetometer-Free Real-TimeInertial Hand Motion Tracking. In 2020 IEEE International Conference on Multisensor Fusion andIntegration for Intelligent Systems (MFI), pp. 94100, September 2020. doi: 10.1109/MFI49285.2020.9235262. URL",
  "Wenlong Huang, Igor Mordatch, and Deepak Pathak. One Policy to Control Them All: Shared ModularPolicies for Agent-Agnostic Control, July 2020. URL": "Yinghao Huang, Manuel Kaufmann, Emre Aksan, Michael J. Black, Otmar Hilliges, and Gerard Pons-Moll. Deep inertial poser: Learning to reconstruct human pose from sparse inertial measurements inreal time. ACM Transactions on Graphics, 37(6):185:1185:15, December 2018. ISSN 0730-0301. doi:10.1145/3272127.3275108. URL Karol Jdrasiak, Krzysztof Daniec, and Aleksander Nawrat. The low cost micro inertial measurement unit.In 2013 IEEE 8th Conference on Industrial Electronics and Applications (ICIEA), pp. 403408, June 2013.doi: 10.1109/ICIEA.2013.6566403. URL Manon Kok, Jeroen D. Hol, and Thomas B. Schn. An optimization-based approach to human body motioncapture using inertial sensors. IFAC Proceedings Volumes, 47(3):7985, January 2014. ISSN 1474-6670.doi: 10.3182/20140824-6-ZA-1003.02252.URL",
  "J.B. Kuipers.Quaternions and Rotation Sequences: A Primer with Applications to Orbits, Aerospaceand Virtual Reality. Princeton University Press, 2002. ISBN 978-0-691-10298-6. URL": "Daniel Laidig and Thomas Seel.VQF: Highly accurate IMU orientation estimation with bias estima-tion and magnetic disturbance rejection.Information Fusion, 91:187204, March 2023.ISSN 1566-2535. doi: 10.1016/j.inffus.2022.10.014. URL Daniel Laidig, Thomas Schauer, and Thomas Seel. Exploiting kinematic constraints to compensate magneticdisturbances when calculating joint angles of approximate hinge joints from orientation estimates of inertialsensors. In 2017 International Conference on Rehabilitation Robotics (ICORR), pp. 971976, July 2017.doi: 10.1109/ICORR.2017.8009375. URL",
  "Sebastian O H Madgwick. An efficient orientation filter for inertial and inertial/magnetic sensor arrays. 2010": "Robert Mahony, Tarek Hamel, and Jean-Michel Pflimlin. Nonlinear Complementary Filters on the SpecialOrthogonal Group. IEEE Transactions on Automatic Control, 53(5):12031218, June 2008. ISSN 1558-2523.doi: 10.1109/TAC.2008.923738. URL Timothy McGrath, Richard Fineman, and Leia Stirling. An Auto-Calibrating Knee Flexion-Extension AxisEstimator Using Principal Component Analysis with Inertial Sensors. Sensors, 18(6):1882, June 2018.ISSN 1424-8220. doi: 10.3390/s18061882. URL Fredrik Olsson, Manon Kok, Thomas Seel, and Kjartan Halvorsen.Robust Plug-and-Play Joint AxisEstimation Using Inertial Sensors. Sensors, 20(12):3534, January 2020. ISSN 1424-8220. doi: 10.3390/s20123534. URL Liviu Panait and Sean Luke. Cooperative Multi-Agent Learning: The State of the Art. Autonomous Agentsand Multi-Agent Systems, 11(3):387434, November 2005. ISSN 1573-7454. doi: 10.1007/s10458-005-2631-2.URL Deepak Pathak, Christopher Lu, Trevor Darrell, Phillip Isola, and Alexei A Efros. Learning to Control Self-Assembling Morphologies: A Study of Generalization via Modularity. In Advances in Neural InformationProcessing Systems, volume 32. Curran Associates, Inc., 2019. URL Patrik Puchert and Timo Ropinski.A3GC-IP: Attention-oriented adjacency adaptive recurrent graphconvolutions for human pose estimation from sparse inertial measurements. Computers & Graphics, 117:96104, December 2023. ISSN 0097-8493. doi: 10.1016/j.cag.2023.09.009. URL Thomas Seel and Stefan Ruppin.Eliminating the Effect of Magnetic Disturbances on the InclinationEstimates of Inertial Sensors**This work was conducted within the research project BeMobil, whichis supported by the German Federal Ministry of Research and Education (FKZ 16SV7069K). IFAC-PapersOnLine, 50(1):87988803, July 2017. ISSN 2405-8963. doi: 10.1016/j.ifacol.2017.08.1534. URL",
  "Thomas Seel, Manon Kok, and Ryan S. McGinnis.Inertial SensorsApplications and Challenges ina Nutshell.Sensors, 20(21):6221, January 2020.ISSN 1424-8220.doi: 10.3390/s20216221.URL": "Sainbayar Sukhbaatar, Arthur Szlam, and Rob Fergus. Learning multiagent communication with back-propagation.In Proceedings of the 30th International Conference on Neural Information ProcessingSystems, NIPS16, pp. 22522260, Red Hook, NY, USA, December 2016. Curran Associates Inc. ISBN978-1-5108-3881-9. Luke Sy, Michael Raitor, Michael Del Rosario, Heba Khamis, Lauren Kark, Nigel H. Lovell, and Stephen J.Redmond. Estimating Lower Limb Kinematics Using a Reduced Wearable Sensor Count. IEEE transactionson bio-medical engineering, 68(4):12931304, April 2021. ISSN 1558-2531. doi: 10.1109/TBME.2020.3026464.",
  "Xinyu Yi, Yuxiao Zhou, and Feng Xu. TransPose: Real-time 3D Human Translation and Pose Estimationwith Six Inertial Sensors, May 2021. URL": "Xinyu Yi, Yuxiao Zhou, Marc Habermann, Soshi Shimada, Vladislav Golyanik, Christian Theobalt, and FengXu. Physical Inertial Poser (PIP): Physics-aware Real-time Human Motion Tracking from Sparse InertialSensors, March 2022. URL Yang You, Jing Li, Sashank Reddi, Jonathan Hseu, Sanjiv Kumar, Srinadh Bhojanapalli, Xiaodan Song,James Demmel, Kurt Keutzer, and Cho-Jui Hsieh. Large Batch Optimization for Deep Learning: TrainingBERT in 76 minutes, January 2020. URL Zhaolong Zheng, Hao Ma, Weichao Yan, Haoyang Liu, and Zaiyue Yang. Training Data Selection andOptimal Sensor Placement for Deep-Learning-Based Sparse Inertial Sensor Human Posture Reconstruction.Entropy, 23(5):588, May 2021. ISSN 1099-4300. doi: 10.3390/e23050588. URL",
  "where project is given in Definition B.6": "Definition B.8. The function randQuat that returns a random quaternion, uniform on the sphere, can beobtained by drawing i.i.d. four numbers from a normal distribution, interpreting them as the componentsqw, qx, qy, qz of a quaternion, and then normalizing the quaternion to obtain a unit quaternion. Definition B.9. The function rotate(q, r) applies a quaternion q to a vector r R3. If the quaternion isinterpreted as 01q (from 0 to 1) and the vector is expressed using the unit-vectors of coordinate system 0,then the function rotate returns the same vector but using the unit-vectors of coordinate system 1. Letr = (rx, ry, rz), then the rotate(q, r) function is given by (q (0, rx, ry, rz) q) [1:].",
  ":0iq T[i, :4]": "25:ipq 0pq 0iq {note that the expression 0pq 0iq can not be used instead of 0pq 0iq, as it candramatically reduce the networks ability to learn. The reason is that in the expression 0pq 0iq thejoint axis direction is expressed in the (more meaningful) local coordinate system and not in the basescoordinate system.}",
  "Random Hinge 2": ": RCMG generates random motion by drawing random trajectories of the minimal coordinatesof the system. Exemplary random trajectories of the hinge joints minimal coordinates are shown for thefour different motionConfigs (see Appendix C.1). They are drawn using the function randHingeTraj, seeDefinition C.6. RCMG also draws the random trajectory of the minimal coordinates of the free joint, butthey are not shown here for simplicity.",
  "C.1The motionConfig Object": "In the second step of the RCMG (see .2.2), random motion of the KC is simulated and, subsequently,training data is generated. Random motion of the KC is obtained by using PD control during a dynamicalforward simulation such that the minimal coordinates of the KC track a randomly drawn set of referencetrajectories for the minimal coordinates. The functions randFreeTraj and randHingTraj (see Definition C.6)are used to draw the minimal coordinates reference trajectories in Algorithm 3. Furthermore, the type ofmotion generated by these functions can be manipulated with a motionConfig object which defines variousparameters, e.g., upper limits on angular velocities or lower limits on the amount of motion. For an exhaustivelist of parameters, the reader is referred to the software implementation (see Appendix 4.5). In this work, we use in total four different motionConfigs to generate training data. For each generatedsequence, we randomly and uniformly draw from these four. The four motionConfigs are used to ensurethat a wide range of different motion patterns are covered in the training data. Exemplary trajectories of thehinge joints minimal coordinates are shown in .",
  "C.2Support Functions used in Algorithms 2/3/4": "In the following, the functions used in Algorithms 2/3/4 will be discussed. And while no pseudo-code isprovided for these support functions, it should be noted that the majority of these functions should beunderstandable despite a textual description only. Additionally, the reader may always refer to the softwareimplementation for additional details (see Appendix 4.5). Definition C.1. The function randBase(sys, N) randomly re-attaches the base of the system sys andafterwards the nodes in the graph are re-numbered according to .3. This process yields a new parentarray . Additionally, the permutation of the new numbers of the nodes expressed in the numbering schemethat was used to obtain N is captured in the numbering array n. Consider the three-segment KC given in . The parent array is given by 3 = (0, 1, 2) and we assume,without loss of generality, the numbering scheme that is shown in the figure. Here, the function randBasehas three choices for attaching the base. The first is trivial and given by node 1. The second is given by node2. In this case the parent array is always given by = (0, 1, 1), and two scenarios for the numbering arrayare possible. They are n = (2, 1, 3) and n = (3, 1, 2). The third and last option is given by node 3. In thiscase the parent array is unchanged but n = (3, 2, 1).",
  "Definition C.3. The function randBernoulli(p) returns 1 (or true) with probability p and zero (or false)else": "Definition C.4. The functions getRigidStif and getRigidDamp return the stiffness and damping parameters(both are six-dimensional) of the free joint that connects body i to IMU body i + N. This mechanism is usedto simulate nonrigid IMU attachment. However, these functions provide a fixed set of values that leads tohighly stiff and critically damped spring-damper system such that there is effectively no motion betweenbody i and IMU body i + N. Definition C.5. The functions randRigidStif and randRigidDamp return the stiffness and dampingparameters of the free joint that connects body i to IMU body i + N. Internally, both functions draw thesesix-dimensional vector randomly from log-uniform values ranges. Definition C.6. The function randFreeTraj(motionConfig, T) returns a random trajectory of minimal(for free joint minimal=maximal) coordinates H R3T with T timesteps for a free 6-DoF joint. Thefunction randHingeTraj(motionConfig, T) returns a random trajectory of minimal coordinates RT withT timesteps for a hinge joint. Internally, they both use the motionConfig (see Appendix C.1) to constraintthe random motion to physically relevant motion, i.e., the, e.g., angular velocity is bounded from above.Exemplary trajectories are shown in . For additional details, the reader is referred to the softwareimplementation, see Appendix 4.5. Definition C.7. The function PDControl(sys, qr, q) computes the generalized force vector RN q using adecentralized scheme using N independent PD controllers, and where qr RNq denotes the reference minimalcoordinates and q RNq denotes the observed minimal coordinates. Note that the provided system objectsys has 2N bodies but only the first N bodies are actuated. The remaining bodies are passive free joints. Definition C.8. The function forDyn (sys, q, q, ) applies forward dynamics in the system sys and integratesthe minimal coordinates position and velocity vector q, q by sys.Ts. The function forKin (sys, Q) appliesforward kinematics in the system sys, i.e., it provides a map from minimal Q to maximal coordinates T. Here,it is additionally vectorized over the time dimension. A text-book reference for both well-known algorithmscan be found in Featherstone (2008). Definition C.9. The function simIMU(T, Ts) simulates a 6D IMU from a trajectory of maximal coordinates.First, the maximal coordinates are butter-worth low-pass-filtered (both the quaternion and position trajectory).Then, a second-order numerical differentiation for both gyroscope and accelerometer is used. The accelerometeris low-pass-filtered. Gravity and simulated noise and bias terms are added. The cutoff frequencies havebeen optimized such that experimental IMU data is recovered with the highest fidelity from the maximalcoordinate trajectories from OMC. Additional details can be found in Bachhuber et al. (2022).",
  "DRINGs Time Complexity and Computational Requirements at Inference": "For practical applications, the inference time and computational requirements of RING are critical to enablereal-world online applications. Therefore, we conduct a theoretical and empirical time complexity analysis ofRING at inference. The theoretical time complexity of RING depends on the operations involved when advancing the predictionby one timestep. First, we assume a naive matrix multiplication complexity, i.e, let A RCD and B RDE",
  "Hz]Acc. Of. [mg]": "Bosch BMI160 (1)0.007318040A.D. ADXL355 (2)Acc. onlyAcc. only22.525Xsens MTi 10 (3)0.030.2605Xsens MTi 100 (3)0.010.2605Xsens MTw (ours) (4)0.01N.P.200N.P.Movella Dot (5)0.007N.P.120N.P.K. KXTC9-2050 (6)Acc. onlyAcc. only125N.P.max (worst-case)0.03320040 Noise Density (N.D.), Offset (Of.), Not Provided (N.P.)Accelerometer units are micro-gravity per square-root of Hertz and milli-gravitySources in supplementary materials:bosch_bmi160.pdf (1), analog_devices_adxl355.pdf (2),xsens_mti.pdf (3), xsens_mtw.pdf (4), movella_dot.pdf (5), kionix_kxtc9 2050.pdf (6)",
  "RING": "1: Comparison of the robustness of RING and SOTA methods as the level of noise and bias is increased.To simulate reasonable noise density and bias offset ranges, we constructed a worst-case IMU by combiningthe worst properties of various IMU manufacturers, as summarized in . Then, those worst-case noiseand bias values are incrementally (in seven equidistant steps) increased from 0 to 120%, and a correspondingamount of simulated noise and bias is added to our real-world IMU data (see .1), which yields sevenmodified datasets. RING and all SOTA methods are validated on the modified dataset, and this procedureis repeated using ten different seeds. The AMAEs and RMAEs of all methods are plotted for all IMTPsas a function of the seven steps. The 25%/50%/75%-percentiles across all trials and seeds are shown, andthey show that RING maintains accuracy comparable to SOTA methods in all IMTPs and, especially intwo-segment KC tracking, substantially outperforms them. Methods are Weber et al. (2021)(1), Madgwick(2010)(2), Mahony et al. (2008)(3), Seel & Ruppin (2017)(4), Laidig & Seel (2023)(5), Laidig et al. (2017)(6),Lehmann et al. (2020)(7),Olsson et al. (2020)(8), Bachhuber et al. (2023)(9).",
  "eq. (8) is O(N) (normalization)": "This leads to an overall complexity of O (N H (H + M + F)). Note that the leading N term is imple-mented in a way such that it corresponds to an efficient batch operation and not a for loop. This is crucialfor performance (especially on GPUs). We conduct the empirical analysis for various types of hardware and report computation time and latencyrequired for advancing the prediction by one timestep. Latency includes overheads such as conversionof the NumPy array to the deep-learning-framework-specific array type and potential to-and-from-devicetransfer overheads. Effectively, latency measures the time required from NumPy array input to NumPy arrayprediction, i.e.,"
}